(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    320862,       8125]
NotebookOptionsPosition[    246780,       6323]
NotebookOutlinePosition[    295368,       7402]
CellTagsIndexPosition[    295258,       7396]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[BoxData[
 GraphicsBox[{RasterBox[CompressedData["
1:eJzsvQGorl123xU0iEgRLcXUUpNaRGcoJUgtZRA5KKjYwSlWECmhSNBQxCYz
pU46IoqIFNFSSpGqRUscUlGKFAnlQ0JRsc7QTibJZNIkne+b8ZvM3KIiouJI
FMV7z3v/93B/5/7OWut59nPec755LiRf7sq+613P2muvvfbaa/333/3DP/Z7
/4W/8Xu+53t++8v/+Qsv/49X//e/+7v/p+/9B/72P3vz8R/64//t//mxn775
pc9/+h/6W37pF25O+kk/6Sf9pJ/0k37ST/pJP+kn/aSf9JN+0k/6ST/pJ/2k
n/STftJP+kk/6Sf9pJ/0k37ST/pJP+kn/aSf9JN+0k/6ST/pJ/2kn/STftJP
+kk/6Sf9pJ/0k37ST/pJP+kn/aSf9JN+0k/6ST/pJ/2kn/STftJP+kk/6Sf9
pJ/0k37ST/pJP+kn/aSf9JN+0k/6ST/pJ/2kn/STftJP+kk/6Sf9pJ/0k37S
T/pJP+kn/aSf9JN+0k/6ST/pJ/2kn/STftJP+kk/6Sf9pJ/0k37ST/pJP+kn
/aSf9JN+0k/6ST/pJ/2kn/STftJP+kk/6Sf9pJ/0k37ST/pJP+kn/aSf9JN+
0k/6ST/pJ/2kn/STftJP+kk/6Sf9pJ/0k37Snwv9P/lH/8L/8f9+9edu/uU/
+Ru/95/5W3/x5nf92//wP/ftn/vmze/+dX/Db/ujf8fP36P/+z/66//N//ov
//zNb/gv/vEP/5Xf8Fdvfsftn1/V8Ub/6//Pf/a/feWf/MobPl/7tX/tX/zp
P/yryj/yvmTy2//L/+iXbv7zl//6h/+2b928+pof+uNfufnpP/zqB/7qzQ9+
8Pf8Tf/Gv+d8jL6Kz8986dWfr77W6y/f/N73vv/f+p//qW/tlif6MX3aPBp/
G3/571dubn/mV+70cPM7f/9/9U/8uq/c4/Mf/gev/vz8zR+8ndBfvPnG7/lj
f+pHf71/V/iv0vP//Uotf3Kdnit57HtjzzZff9fv++f/wW/8nvt6fkX9Y3/q
7nfJn/OV7+a8h/6rP/mn/7vf8ud93lfp+fLf+797+Z4vv/6eX3itj2++5vvl
m5dG9eX/65/+hdd//+bNq7/96k/+lTf6+0u/5c//oT/wJz5U+uW/P/Na779w
89/85Z94qQEff/EXP3vz9/39f/Of+82/76uv5/ubN//7K/fxz/7863H31xG/
y/R/0cv98Z/7H//el7/4pTf29XfeCuJyTufF1uN0/a7iE/2+/F8vTeDOPz+2
PBf7cj5Zh5d1+Ss3f/bVdP2hb90bn/Vr9NjfT33xs3/xz/ymX3q9Pz19PZt+
Ql81Xz/7ysz/9Fdf+4lfvvn/vvpHXq6Ib73xb1l3/86/9Gol3K3HzE/o8Z/m
Z+gHjB4/kDgifin+JN998bsfvtbrz73R9y3bH/2m+p+sd65ro0/9mNHjl+jH
jvarFZ/oM3wuced9Pdj6Mr839aur9cx9fMrH9sfY57/+ajv5jV99Q4/9Z36r
eMPik/ze7TT80J2/mvKx+GQvn9Cz3sxvdPlY/DzdZ7f6Z8qfuIf7henN6Kv4
xI4vfvdXXscx37qaPFM+lZ67dl7JQz7cFxJPPjf/vDV+zj6Y+D/7fPblVXpm
fiDrzvhEvxd/UNuz+QfzkzZ+L598l8VLjy1PxSd+tqtn0vO9lOe33RqC68fo
5FPlhXieNT1XfLrfZf6n4hM9/yMvvcVv/Vqt55xDuR4v/vRn38j1B/7E//Kv
3vzOb76Jx7KPfeallJ//9If36Jd94i4eTnwSP2Dn365dVfPbnfep/dCeo+dP
vdwNP/FTPu9VHoxxGvWfuC5xIPMhdu5I/oR+2+bd+Mf/M342+pRPvpfjLU57
7vsg5yXfa/Nl+jE7sXNTdZ6inTPfVeVpq3xmN89s+/tW/9zN/6/yG5YnYR4p
/tnOC0a3e42j+dg9he1fNu+VH6D9d/1P7Jm/G/829WNb5eH6mvIx/2z5qMt3
3s+fGJ/puTt+gPMYv3axm19+Yz/2u7ZP5btiR/Rv5vdsH2S8YfuR7e+Rn3La
70Z+ozM/Y37e8pDxk5yXKR+T0+yQ+wXtnPxtfnnuC32aJ6nysd38reXHMk/0
h6bnKv7h+KzTqf/pzpfpf8rH5M880p6n65T+h/NLP8D1a/6tiq9WxXV2j2ny
VPO+d78wut2DbN0HzX6470Q/zHfZfaj5GYufrxXPT/P8Fm/b/c50na7yG5yv
rt/gvBt9uh4tnrH92vy87b92X7+aD8fbvmbxlflzi6+sXmK675g8R9vhte35
sb/r1PPT1LPlJ5lPSB7A8nj2u5UfYJ0D77l4rmf+ocoDsH5smgeo7mXCJ3mA
aX0X/Wfsyn53a36Desg8Jb+ROp9r5VuMHru5DSN+8197Le/jydO1H4uTjb4q
HrP9N+vL7v35XdFz8vyPrecpH8uL0p6PyotmvVu9R/w54yved8fvraojulae
/6meU556XUHOTdyXY1db612r+8RV98t2D7v3Xjjy2PdW/pbnBcv3xm9yXdPP
WL0r74Oqen7e+3f55DtZ/7C1nrb7XXa/YPdx1/YbXX9o+QquO9bRMe+xSs+r
+GS/2WvPoXNfW/VdtOfsy6v0Y+uoy6fKz6/yG5U8Vvdr/UScr/hB1sMfbYem
/+zHrKuMHm9/5rd+7eY//l//0//+k7/r22/qqH78pbf5wQ/ef83vxRu7uczT
117vm99WPkY3PvnOnDsufvDbqof4NZ6XMy9WV0B69k3b9znezuPGx+zhWnru
8rnYy7dvbsuzfv9fu/m+W8f+wc2raqQvfvbFYfLkd41P9j+eX2xecv7neJsv
u9ewOv9V+2n0c/Frd/qx+kbzS+YHoh/mi6iH1JNwPeZ8Gv2yziTr8PLv7+Yx
fGJHWdf2XUbPPss8leXBjJ59xOq6qTezN/qfrGsbX/Ghf7Dx+R7WI1GefNdW
efbyiR45jxnPeWQ+JOOTL+U82jqyPJ6d1yzf1fVXsWfjQ3rG2/nC/JXRbb1M
+dh+updP7MfGT+35aHm26pn5PeNj/tPsJ3w/cbtg7uwndVHxt//Yq+F/5Nvq
T3Lfx/oH7pu8H7R6sKyz1GkzPn+5Ob3cCD3Pyf6CyGn2YPVFrKvJ/ObcyPyk
xWMmj/Gx9cv5zfjsR4wrOC/Rs9F5b5X6ebuHzfjE0by3ojzdupr4T8sb098m
PrF5jJ9nXt3GT9fvNP8TPpZP23rujp0cfV5exaeS0+o5WYdj8Zjxr87dVl9n
9wXM/5vfq+SpzpXhb3xMD9V5f6pn0is+3fiZcXj0bP7E6KbPnL+YT879guWZ
mSc0PpYHs3Vq+13o7EvKfTTrxm188ufcZ5nPz7mMfpJ1O6Sb/m089wvW/XJ/
se8yvx0+3I+oZ+qN9FV8bN+x8VZXafZjcZ3tj+YHUs/A37W4jvMYHAmT3+jV
vsw+PotbzB9245+tcYLR40+6fGwdVXwo/6r4x+j0q/GHHF/V7U/n3fZry9uY
nds+bvbDfYF9H1ZnHrmoT6vzt74J03OXD+WJPvfyqb6L+2P0xnPfVv2s0jPz
ljynWD+j9Y+Yn+zysf3a5J/2JVXrdPpd3MftPFjpueKzSh7iHVV8In/8APVM
PtXvGn+Tx+bF7Ker50oe85N2b5I80kuhX0p+l0di3j55JMt7WP7Kzt3Wlxo+
yaelz93qUux8anGyxWN271PhVHD/muJUTPlYnmp6D27n/YqP5Wk5j5GP9mP2
NrXDyJHxq+89V93DZl4pp+nH8qLWn2L4qHYvGb/EfWqab3m4/vbx9Wx06vny
e9++l09OX7n5q8wj8+12jxl7Jt3s2eoxmMeu/N4Up3cV3q+Nn+KMVf0FpK/i
YzhjVj+5Sp4p7lMXdzp2YvxX4Q935a/0fPS8mzxTPoYzbPtjF5/Z8uqJW8we
TE7GUav1XNUDG44E84pWJ2P9rdO64q6eq3Vhdc7mh63vwOaxqhet+jVyrzrl
YzjDe+Vh/wjjdhsfO6jqQBIXcXzkNLrFLXv5VN9l56Zr6dnoVs8w5cNzTezT
8FKsrsDwDSyONT/A37V7c/Z7VvgeycvZeKNbX8mUj/U5VnzsHof528o/M89p
9ZYVLlP1XU9Nz5WdGN32EcM9M7zNqk8231vFabaP2Hij2z4y5TPt/13Fp9Iz
67imeZ6t55StdX2ZR/td2wdtvNENv8jGW95vyqeSh/kxG09/nv3F+o/2+o2t
fmzqf8w/M18U/2P2tlXPjGeMHv0mT5K4bsrH5GHemHXLpFd11xxv63GVPKv4
WL3B0fqpvos4fpbnN/xb6qfCow6dfobyGJ/IQ3r4WD7Q+Ez3KcP/Mfy0Lo5r
/JLtX3ZetvNRZT/VvJPOc1alZ+u/IN3yk915r85rPL8El2x6TjE8SaPbPfL0
PRqro3usc8qqfZDyr9qXDY+owimiHizvlPouq8OhH5jmmafvK1k8YPtgd73b
+gp97zoN3e5lLB42etYz+xEqPlV/AflwvO3jFR/zh/RjVk/LfcT2F/oNxp/T
uhr6MeZtqv2u4mN+0vbBLj4D+2XoB6pzN/dZW7+GH2VxguH4Gc4q8/asw2Qe
z/pkLV9ndkg+2TdNTts3DVfZ5Jnej1vdY6W3Lp5w/H+VhwyfCvee8Yb5DbPz
qm6te98xfXfV1vv0Hb0pbvA0jrL+CIsHzG7NzumfbV1U/G1+p+cIfm+13lfF
dd33Tbjv2P5V7TtZ19P9y/qMuvtp9GD2Y/n27js7W/NIq/Lhq/jYeWpqz12/
UdmJzYv5T5Pf5t38UvjTP1g8z32WeULu41Yf1X2PmPf1lp+c8un2r1V1Gt36
gcreLB7o7kcmz9b9a9U+2OVj+p/yqfIbe7/L5vG7Tc+r5Kn6j6hnO5fx3Frl
w6d4iZbH6L6vzToiq+eZ5hOq92SrvJDdW1Xju+eCVd9l41flN1bJY3SrVz9a
Hrv/svPU3rwo/QP9gK2XKl/Xzc9fS8/VfUF1/1XdW3X1w3zm1vuL6v7L1h3f
Lcr5hf4kcU6VV2fd0dH33UfdOzzXeqRVdV+V36j0nH2f55rpfUR13826gr33
1Fvvhe2e2r7L+tRYV2n121YfXvWdTflYXeu078zOlfaO+ap1SnuOf3vs9RX+
lr/dq+dV817V91Z9E2bPVlf83Oz5aD1XfKJnq4fp6rmqY6zOWeRDf254bqv0
Y/hv1ieYesSLn3n/ddzmfaOGfzvlY3Trd+jqOXGF4RpV/c7VvUz1u1M+di9/
tJ5X8Yk9Xb7j6ze3w97zPtZV8lh/8XS+DLfW8tir42fDi2B8aH3Te9+DqPrs
uB6Jl87zaf49z1PZVy7+qMaP5br4zsdejfzWPXr4m9+LHuwdonfXHd3/XrMT
o5v/sXN0l0+FBxv5WY8UPqxHMj5Gr76ryyfzSDuxfgp7d97iVes3MdwAs2fb
N9PHe8mvvP96/d7vu6/w27leKjzkrp5Z90U9d+05fFbNe5dP6FZf19UP6+iq
75ryiZycd5vf+DHDQ7D9zvy/0Q0P2XB7cp/C+1OLV8kn+1r2F+ZFKxyeLh4+
43DrI865rIvbE/oUT8bksf3X9p0KT4/xwPR+0O6n7D59mldnvVb4mPyGG5b6
DavvIh/Tm63r8LW+KsvPkG58ujgDsZPYIe0zelx97q7kMT7dc3EVbxvu7hR3
2s7X1ftljLumONg2L/a9VRxu9a72Thztrfpd03M3HrbxNo+2P9r40HnOqt5t
YR7e6Ca/4VSbnRgeXfwe8aaMPuVj/u3t+4a7dTHFnbZ3cAzv1HCPDZfP8J8r
PFU7Rxt/0o1P5DT5Tf/EYbDfNZy6Ke4Zf9dwqlmXQrvq4vpWeJhGN9xU2/eN
bv5nysfmy/Rg+pzyMT8z5WN007PJb3ST0+Ixo0/lMXszv2Txhp1HbF+2/L/F
md14Necdw/Xt6pn5CpPH6uQrPozDKz7Er85+Wvkfw0k2+qrvop7Zf9SVZ+t3
8fy7Vc+Gm23ndHt32PQce+Z3WR016YzTqOcuH1t3e/kY3j7r/divYXyqOnOT
x+znKD1bvL3qfod5+/CxeCZxzBc++UryD17rwe+DDM/W+E/fzbR8jp277Txr
5+Kt7wNWfFhXw/GW17L7BdOD0S3/xrxi9M++4MhjdV9WB2X1yZY/NHlW3TPy
Hjb2fNT6Cp3fFfzeql6a9c9Vvo75QMMPN7rV7Vhe177r6Pvu2CX1PD2X2X2K
5RunuNxTP2n6N/q0j7vqq+3y2YoTa++LVffaFX+j854xfmwVbvCUj32X9S9M
9bxq3u1e1fhYP4vNe/W9R+m5iztd9eNM5bH+GtOD8TG896P1M10XsRPmb42P
4clY3Wy3j5L23O0PpT0kfrP+Eav/meLVTOvGbbzFjVM+1TubFZ/qfWqrD5ny
STy0tQ9uKx/DBerqJ/rs6jn34FM+XT1vnXfr06/q4riO7B6c+06Fz8D766q+
3fpA8/4I3w00uu2Pt1p9x3vuRrc438Z//DYwvZMn+fzp/m7+ijhdGW94v1Xd
Aun2zot9r/VJHa3nVXwM/9/oNl8WP0zjjWn/7JRPJU83PpzysT7TrfLYvfZe
PpWeu3zsnmUaZxpetO0LFm9kPezF5bY8UqV/Ox9Rb8/Fb8R/8p6OuATVudvi
mel6MZx2e7dl67xP5bF8L/sc7fxi9cnWX9nFbTB5pnwqPU9x3bvyVO8iTfns
1fNUnmrejW7586k8FR4y9/eKznPrtA/F4jHiNYV/tb6q/Ellh8QZiJ6n+a7p
eDu/mH6iZ8arXT65l8x7iORj5wvDAZu+C2/4ljxHPPV9kPZ8tDycF9YHcrzZ
ufG3c5zd7xh+Kc9l1X1BxrN/fIqTP/Wr9Bvmn7t+w957YhxreQzLA9v4VXwM
/3aVPOa3zY8ZnXJW7wZ23zWuzimWZ7DfNf6Gd232afkoW6erzoN2n2J1LLYv
mH+w8ebHDE/b4g27X5jiQE77YqbvAhjuXBcfg+ulu1/Y+iL+auXnbX2ZXzX9
2/5ieb8pLqjFGxb/VPqhnA/7q/vxj9mD2XOFh9x9j6/CxSUfsyt+V77XzgWm
h/AnH7OTaZ52Go9Fz/T/Zj+xW8PjqtZXNZ50yml+o2u3to5sPT73+Ll7f1Gd
U6r5oj1Mz4nVPRf9oe0L1TtH5h+yr1V+3r6run9hnbPFS1M/Zvd00/dlpuf0
KT6/8bf7/el9mcVRU7+xah80utmhja/eA9orzyo+1Tutjy3PlM9z1zPlT91O
1b/crXNbVdeU72F+wO6bLJ9gcYv5k+k9vtWlmP8xOZ9bfsPyNkd9l9UJV3zM
fpgfq+rTbL9j/GD2k/FVnTDrwO1dYOt3sDy/5WFMz6m7Dp7w3vzh9N5hax6y
e2+1NZ+5Ny/Keyvep0zvK81/Hn0e5Dkl+8i1zilVPRLrXa9dV8Bz0HPRc/IV
lle0d1sqv7f1vpv7bHW/bOe1KR7R1nrRvXys/8XGV/WfzGc+9/tBnq+rd6y6
eia+ymPP+5QPcbq22jPriKp4fspnas9defbquapLr/Rs/or4PDw3GV6Q7ftW
N0j6Kj1n/aRenTil7L+b9uXZ+Nwf//jLU9YPfvD+a7m839n6Iln3yPjKzrP0
G0a3PvEpH5On6tfr1p2u0vPR82506xc+Wh6b32q+GH9aXHR0XGd5DMtrEX8v
dcKGZ2V08yeG42R+JnbMvmCrM7G+Y8M9Nj6k51xs+AP2vck/2LnbcDjtvE+6
2aeNN/5TvAXiJFQ4uhVuw155jN6d39CTh7c6Q6vTYP62i7eQfYp5mNhn/FWF
713hHk/xsc1OjF7hym61w63yGO6HjTf8q1Xy2PnC8EZsHvN34sDwXTPiAH8I
/O2un8x4w0mwfdDqHMz/W5zcna/ozeS3vkuLoyrcYOI55xxq9VHmN7gv23jD
TyN+UfyV7cvGZ1r/Y3ViNt7qCixPzrxZcBdNz4bzVs0L6Tbvtr/bPhW+zOcb
H1tHZv/GZ3rutvG2Ho/Ob5g8lq/LeOt/tDqTLk6v+Qd7h93knJ7jTA9b+yKt
zpz1M9W8dN/FNvpWPpTTzik23uimf6uzNbq9P048T/ahWJ2t1U9mPV32M6dn
f2G9HPfljCfOHvFjaQ823uiGM1/1y/C7DPeY4z/z0jo+/2nfLwxnuNu/E/6G
bzztAzJ8S/P/mQ/GOXa+MP9g+6bFFSa/2bPhG7Pe1epgGSdUOJAV3fyh4Y4a
ny7+cxVvdHF9q/hkqzycr6k8Rq/wV4/Sj+F1czz7Ebh+Tc/2XWZXJr/h1lr8
b3TiCVPPXT6Gc3s0H8O7Xi0P1+9WPVt9b5eP4R4fzaerZ/o3xi2M0yqcZJPH
9gXDE7Z1TTr1092PKr/R5dM9p5seSLd5pzxT+zH/ZvebR9/vVPicHE/80ozP
Obyb1wr9E7cK7+fHmE+zusrpudvOoZlvez+I99cWt9u5qerTZL7O+Nh9K/Nv
yQ9P7Yd9o+l7PRqHyup+r3XfbXwsn5w4hHj1Vfxm7yUxrx69dfukrB/H8gB2
TieOUMbb+Sh6od+wd/2mfmyaVzd65p187Dxofpv+sJL/4fesj8MxXoWrPO1f
mMpjdf7T/gjr378WfuyUj+Gymn6uZT/0V2+/47BfHsNDsP6CvXqu8D2uZT/P
Bd97ijttfCyf1sWHzO/aPmg4yebn9+JWVXgCe/GHM34vHnL4fLfjIRv+cMYb
bklXHtNz+pVWzZfFq0fNe8ZP30FInGzvtXF9ESck46e4KPzd5Amtr8Tu8Q0H
3vDN7L5+Vb2ivSNf4Xuzfuax/UbFx+I6s5PqfQfeL8ceeL9m/a0cX9WzxW6r
/pFq3mNXtE/DbTD9bMXpXYWHbDiupHf55HetL3UVbtUqPtRz9z2Ro+SZ8mEd
ZoV7bLhJ1ge3dT2Sv8lz7b7FLh/z5xWOnL03vXe9ML8afx77eCp4yMbH9kHD
zbN641XybO13fq54yLa/7JVnNe50V88VH5t3ixsZt/B+nHFRdd40vA7ec1l8
a/G52bnlbSwOsfmyftvUX9m9J/Pktu8Yf8uTU2+sY6n6cFnHy/3OcAbyvXYe
6dZBGc6YnVOeev/+tfHcpjgJxt/WV2VX1JutC8NJ5nrMOcjOa1M8DRs/fYfO
+FsfmfFZhfNzbbygvfJMcbFM/0frp9pPGY9V8QbjOsv70Q+nXsXW+xTP2c5T
ph+bF8trWX2R+QfDx5u+v2DzyH2WfT1Wp931k9V7AdSb5YXM39q+XOEKst7J
5tHiMZOHuElVfGs4dZHf6ni5jip7sLzoFNe0a+dT3ONp3tjiQONDv1rty1aH
1o3rKj3beKPb+rI+92lcZ3nv6v7X3kPs9sftxUNm3bLVqVqdPNevrbtr4wV1
4/CpPHa+oH8O3fZxOwdtvXfmPmV5Nvsu05vNe3UfYXXmXI+sN6veO7D9aJV/
7uKjVnjI1X3i3nfDLU/COC3noGkeclr3MtXztfCQzZ6fGk7vU8Odfu54yNV9
t9UTZl1U93dZv+zjProeqVu/kfNg9p3ufm37hd1bWR1I/k58nurc3c23fFTz
G1M+pmezH/OHvN/POcvsIevLzrk8X1j8YHrmOZF5NsNDJr3iM83XBafX8nWr
cYy7fKrvYh1m6k94f7EXD/mx760MJ8T8VZUP6Z6D4lct72T9rZTH6geMbt81
5fNw/Xmfj+nN9Gzn8dXnQd5bPbX7lCmfaR2X+VvGCRVuzLXwkCv8mW798HQe
r3UfR3uu9l9bX3YvHD1XdcWMe62e/yg85Om8V9/FerxVeMjXwvfeqp/H/q5u
PynPR10cY4tDbDztIXSzZzvfMd4mHuNR/c4cf8kXeH9o5OQ7KTZfU/zha+Eh
m/1PcbRsX/uo4SG/OqV88bPr8JDt3DHVP/cvnh+PqpNhvMq43eqpmHet8Ny6
eMgP903f74s3evxghWOcc+u0H9nOZdYPFT3STqxPOfOxFz/W+EzxkLt8Ml82
vosfW/Hp4tlWeMjGhziuxMnnPj6Ne5Mffnddx/38VRcPOeOneMi2P3b1XOEG
G/0oPOSt8qzCQ6Yfix3auWwrTjvt03BaMq/BQ77Uu/bxkEPP90SexF3mJ6mf
5NkMV9DqAbLe+L3Ec+P97Lv3zV98LTfxzO/vFxbvGR4a43zm5ZiXSN6M9+bR
g+WTWZdiuHyGJ0lcrMhj+7Ll96b3VqyfYZ0Y5bd6DHs/gvoJf6PbO+Zmh4YP
Y/c1Fp9P97sq/0z++c6uPNfKb6ziY3ow+fm91fmacXvqCqrzYIW3HD6xB947
GF7uqvdxqv7BLv5wNb/PDQ/ZzjuGY5x5tHOT4RubXVV4yFaXaPf+FR5ycHpt
P4o/Z3xr+5rlIbt4yPTDdt/axXk2Pub/uzjV1X5quJGxK86vyWPzO30Xw+iM
S+N/TP4uHjJxGCzP/+547z5upNXTVvbZxW023EjbL2y86WEVbrCtI9On1d9W
eMjkY/StfAxPz+6L6fe6+qn0XOGa0m/Yeqze17B4nvoxP7CVP+mVnrt8roWH
TP95FB7yXj6rcKdX4dlO+XT1XOFyWxxVxTlWd8d1uhcPOfQuHrLxYZ1td1/r
4iGvnnfrpyA935s8SZWffKz7nSmf5H0u9nZ3b7UKj7Tiw7wc+XTvm7rvHFX5
BNapGj18jsJDzj7E/OeqeTf+Vp9m/U3TPL/VlV0LD9ny2N33IJiv43jL65r/
N1x363OxunfGURZvT989j/3nfHXh8/5refa/Dxg68+pb/U/y/D/wcvbf+/4P
3tiD4YqbPVi9DeWv/PNeXNMqTzjlU/URdOuQp99lfRPT8TaPln82erfvfjUf
uy8zPlVevVuPPZ0vwzVaZc+r+HDfr3CZpnqezruNN3uIPfM+7mg7nOJR2O/a
/eZUnqkf6OI38r6J8ZiNX+XHzG6rutPqXQz2H/He5Nr9R+yLSVyY8fa9iYdN
Hqs/mX4X+USeSs9dPkZfpWerlzB9VvrZaz9d3BviTlMPU5wKo1c4LZY/ZH6A
cVf8TNV3XOU5K3xm42N1AlN88r323F1fq+2568e6fnWVP+z65wrfyeJ8G294
C7YfWfw87e8zPUxxRKd8LK67ljzVOYX3kqvl4Xo/Ss+sz6dd0Q9XfZHmxyp8
EtITv9E/V3616lukP9/rn2289QMaH+uvNDyQjKP/yXx06VZnO+UTf8g4fMrH
cA9svOU/Kz7cB1fJU+k5ea1Kzza/Jo+NX8XH9nE7fx0tj9FNz6vkWZXvsvMp
45PqfZYpHovFyazbT1xt5/HpudtwJm1/MbxBi4um78RZ/GP66cb/1blj+v6L
1Wux3ni6f1XftXU/tX2Q+l8VJzxWvGH3yKzb4fk09mw4ZlZXaevazsV2Hqn8
Hs9Bdj6y+NzGk3/yD1lv7Eew8eQf+lSeVd9l8dLR8tg+YnZoddqMf6q83NZ5
Z96J+0X1nsI0ruvi2/M9dO4j03OcrTurP7H9xfyD7S+2b1Z5NurH5Lc6cONj
32U4kObfbL66eZXca5s8Vs9c1U924yjD5ZjiShkevt3vG46ByTmNN0wPli+1
3636GrgezX5sH7Q40PiY/6zwvY+K6/a+D9iN66o4Kt9leR7LO9l5wXC5Tf+W
V6/q+iin1YGYPEfntY6Kn7fOu+0v0QPjf8tHTXFxp/GG3S8bDth0viwusnVa
3Td167i6darmN6JPW0fGx+x/imNs9ArvmvGh3XNZfcI0bzPN11ndqfmZaZyw
aj81PhUOfJfPqu8yevX+12PL81HV89b70O66m9ZHba1H4r2b5Rur/c7eK7F7
je753fArjs5LPPf8xjSfYPmB6bvqdm6y877VUfB96sfSs+XNTJ7uPUj4WD12
N69o+Z+t9zvd78rv8tzNe6uLHL9c6rP6rvCZ6jl0e//L4nw7p9g9yxSPoqrL
7dZF2Pcan6k80/p5q/9fpZ/HqufnOjq6HtvG23mkqgOMvWS80e137V6P78uz
H9Pw+iq8UK5r1st168yJo271ruTTXdd8h6ibzzn6fpBxV+6XOb9v9yXdz3tU
dWvUQ+So3qGw82bl36b9BV37Wf1dsWe7f9mrn6P0nL6Do/Uz/a5pf2jWW3U+
iv0bveLDdWTflXjl8u/v+vJIT3+l9V2m3vSyru/6B238lI/1IeZ7rG7N6l1t
vyN9isdl9tDF6arkWfVdVsdl80Kc4cvvvzh83qd80p952X++fnM77D3vF676
0BmvWh7G8qg23vbfVXUy+V3ei1V48ox/DBeI+0hlz+afrV/YcBgMx9LwY208
7S3znjiVfb62XszPW9xouMRGNz0YvqLRzf905Yn9hw/PyzY+8029dfXD877J
s5VP9GP+h+uoqk+w8bZPmd3afmfjDSch80Q+VR3vVj1Xdti152q+Vs27rQu7
L2YcyDred7//ezePhjOcebH9yOzB6PYuwJRP5An98p0u/xTn0PDtDU/ecH6y
vzIfa+vO6BbvGf5/xhFXvFtfxDo03kcYHqONNxwSw18KH9Z3VfVClN/8odWJ
2X264b8xjk0cYvZmdOJ9Jf9gest38l6AeLbM61r/IPMGxsf8j537zP5tvJ0j
Mh+U87HzLeZvWV/EOjH7rq3nuOr8VeUBKtxpy99Oz6fUv42fnjftXJB1ZfgP
XT5GX8XH4oGMtzyqnYMqvGurz4xfrd4zsnfJ7d6fOFQ5V0Z/Ruc7g8Shsr54
85Nv54vv56s53vxVfo/7qd2TWp7K4nnGw9V4i9/s3Gp0i8Nt/MM4zPf5TN89
sXi1ikNIr/DPra6sixdqdj7FmZzSzf9M+Ri+qL2z0I1b+LuW58m8xP9M+Ri9
+q5uPGZ+tcunipONj+FXh271V7RP08NWXFPLB/J7Db/XcGtNzzbe+NPOo8+p
PGZXxoc4wxW+d1ce07PxoX44v5WeOZ7nxNC7dks+pE/52L4w1XMlj52LeY9s
64LxG/ubpvrh/K7iY30i0TP3x2vNe/wX65dW3adc655oem9l8VWVHzsqX2d5
Nuavcq/B8wXvi6t8ZuiW77K6BctvWN3g0fNuepv2d0/7d6yebdV3JY5nnt/i
1aoPhfQK9976s0hf9c7FKnksPrS+GLNnW79mb908f/LqR+f5bT3afYrhRPG7
8k6i1dcZfVrXt5dPzkHWBzHFDzn6u6x+0uoV7XctvzqtC53ymfaVrJLH9DPV
81O354yf9t+xjjTrwvQ2xfWt6q5Z3763PnmrPFM+hss05UPciejfxltdkPXh
Gp6DjTf+q+SZ1slbn0jXb1e4EFP/b3SLE+x3q3c/K3mMz/S7Mn6vnk0/FS5l
d76meq7ma9W8T/2z9SWZ37B7c+vrNBwMu683uuEF5f6owtvkOynsx//c7YH1
7t2Z5O3tPZruuSz8DV/I+vWmfYKr+BiecNcOt673Vf7wKL+xep0+tp4rP7YV
J4F1a924N3wsrqtwKbvvKVu/6tZ3mffKs5UP9W/+J++0xn/H78VPdvF54g95
X39rde94h8vwhG280e27pnzyvdyP+F1V3/3R8lhdrvXTdf1G1Q8bObp9r6v4
VO/jVDgn8SdHf5f17x+tHzuPTPnYedb6R6Y4/JGH8YbZrfW9Wtxi68XWI/0b
xzM+NHmm50rDZ7D9zs6hhstn/TL08/HPFvfaPFp/kOnH5tf0bPuRnUeIu5g6
2Cr/STlNHsb51Xvo9u650U0eGz89Xxy9n3IfjP5Xy8N5mfKxdVStC9Lt3FqN
N9wzqzcj3fA0qrz09B0ZOwcxPjc+1o/T3S8oz6rv6vIxXKaKD/35KnkMP838
huVbTM6pPDZfFicw3sh4s2eLE2x/sfWedcdzyhTP3+zW1rvllyyvZf7N9hfi
q8ff2r5v8tt+WuH40Y+ZHdr+m/2U8YbZoemh0lvXP0/9vK0vi58NT8/ep6ji
YcZ7kZ95SMYPoXPeGW9QD3auNz1YfDjF+7X8g+FsG3/Tg9G7fCyuo567cZ3R
TZ5VcZ3Rp/FzhVfPdVrFUfQPhg9v/o1xcpWPeirx89Y8UnUuMP2/3e9y3z6j
t2ke2Oi2v5uf2Xqfwu+t3hUyPtP9Yi8f25crPmZXVm+c9ZJ7Acsnb81vdM8L
q/Nj07wf7XBVnGDjbZ+1ON/GT+9Vj/4uo1v8cy15pnym75HZfE3nffpdxBFN
/Gx5/tX3aFM+FX5+dT/Ifv/w2Xru7p7fo0fDWzgqL3Ht/EZXHssDdOv32O/M
fJSNN7uy+4LVeRvyMT1TP4Z3WvXjhw/XS5cP83XEE57y6d4TdflQzzZ+771V
JY/FCdl/eX63ONbyupa3sbpWi8O7dbAZz3Vh8ZLpOTiW03owo++t++36DXun
6bnWPz+1ev5rydNdF7ET6wszfBXjbzgY5rcNF/qp6dn8hvlDi/coP/XcrTer
8g/d+TL6Khz1VfJM9WN18qvsebWe6Z9X64d228W9Tz7E6ofZN2p4QRUfo5s8
5k/sPGL9dIavYnTr3+zyST+d9euZvVk/r/WHsk+Teq7u9cjH8JG6+4jhJlXy
7P2u6It6tvkyvM29877KfkI3e364L9vvy5intfsC3le+fR90/3xnfKZ1MnYv
Rjwixj8VfhH3d4s3rE6P4/N3nr/Y1x+/FHslTqbVjRjusY1PnMF+YZPT/IzR
7XwxxSUw+bfKwzzAVB7Dl7Pxps8pH5PT8JxtvMU/tj9O7/XsnRrjb3TDPbbx
8Z+X76n9J+OTvMPS1XNlP0Y3e57yMXmqPhHiM7BOhu96Wx0Lx1vca/uO0c0v
VXw+BJ5e7OMLn3wl2R0OTPSY8bEH409chcRpFsfyXvgzL63x85/+UOM38/OG
22M4e9U7a128l+pe0urh+bu5r8m/Y37PcHcpZ+ITwzXivm/vfXfrc7bW5Rr/
Lp4J+1bYp2lxi9V9GZ3xSfRvcbWds4jnWeXh7d0Es09bL0Y3+5ny2Zrf4Dl6
Vd7G9Gm4iNU87j03mR8gzmfFx+KWrX1/3e+qcHq75wLTQ8Wnm1efnlOMzjgn
68L8cHUOYh8i4wfiypJu82L2bHFI6h6tfiD6u8jr9QmMz3Nfw3xs4iuTk/ZQ
+Zmj8wDGx+Jn4ioHn4rxEuPwLm5z5EwcFTmt79JwsPm7iZfsd83ODd+YcVd+
1+QxP29xXeyJ82X65D6bc4r5c/texgOGe5nvot1mndp48mc8Zu+DdOMWw1uu
4hx7F2OrPBWebTeuC72Lm1fxqfTcjTOn/tbWxZRPzgvT+NnygaRXeu7yMfzb
o/kY7vRR8uzV87vfRerz2YqnbXy6+nkYh/++PPaewlQeq4u2c7ThNlMew9Wv
9HwUH/YpV/tvxafSP/lY35ntv4knfuyVWf/EXR7pWvc7Uz6r7q2SH/vErcI9
P2bvXFieLfToPfm6yDnNH1p9xbQ/K/si6xWr+2XGpV09J694tP1YPfCq/h3i
1eR8Pf0uw3+z/JXFOeav6Fcrv2F+mHTu19bfV/GhPNZnyvEmj8V7Js80brdz
rvnVrXl+0lf5je49Ee8H7T33bh241a0dzcfwgq4lj9GZH4hfnfKx77V+Cqtj
Zz1DhS8R+S/+4E7+Lh+TJ3TySf5q+l2r+jU+qvZs+mR9ePIzNj5xQ/wP8zyU
s2uHNu/Gh/bTxUuxfN10XVh97Nb+I9JNzup+s8L94D2p2Q/5WD7Z+i+sTsC+
y+5/jb6Kj92/X0ueKZ+npmern7E8/FZ57F3aLh+r67P6ebNz+96qz7HC2zH8
Fub/Sbe6oC7+Od89ZL7R8EmMbr9r51b2t8YPmx1G/+yHNXrFx+w590tdv8Hx
p994WM/Gp/IbnF+jWxxr78VUfBjPm90yLjU9G5/KDqv54nhbF2bPXf8WOvsH
2Q/bjR8sHrY6E8NDjv+xexO7j7N3Ubv4pcYnfp7+fyqP4Srb+NyP2LvGnEc7
F5gdWt6S/bOVfvbOV+rfEp/T3mx/tz5Zw+c3u7V42+IN83uWdzL8YVsvRq/4
8DxlfKwuwvhYH7ftR1M+9l3mn208/VXmMXGXvZfafafG7PZov2F9oDbe4jp7
d8D8gOnf4mSLh+38a30Btl+Y3zb5u3qozguG02I4A2ZvVX+onfept2m/sNXL
WX0avyt0kz92aPUYW/fBan1N99Mq3ujyWSWPnaeszsrGG93Om9V7K4wzLU9r
+6PFpVM+Rl/Fh/dBW/dB7vuf+uFXHZDHf1f8wlPRc+I3w3WhvZn/Mf1P5ani
Ft6bV/PL/LmdT+38Zf7N4mfLVxvd8r3UM/tZqH+7V63yTlW//BRnjN/LOKqL
jxH+Zifdc6vhZrBO2/ZZwxOm/NZPNJ0vW48WP1uec4qjMsWhrfZBO59a3Et9
ml2ZnGbnNl+GH047TF1KpR/W+Rvd+MTPWP8a+dj82ndtlaebB7DzF3G6ok+L
282eu3hE9CfMI1U4zIwDV+eR9ubHuufco+Lnar2w39Ds8N144/frbSr/z32f
eLzdONzWBeNwG2/2tsqvkk91v7PVP5sf655TzH926zeq+zvLXxnd8iHTPNWU
j907mD4trq72r63nyopP9Z5Ol8/0u6r8Rteep3ym8qz6rul79NN5n87Xw++g
3T93G14lzzu515i+P2hxgp37pnVrR527t+YT/pzUya/OA1R1WVvzCVb/b3y6
8xi7snxX99wdOzR57D43ch6V17J7KMOJZX4jeq7yJFW+JfzJh/KwntDmkX4j
9mzju/mfrC+T3+7HV+WRjI/Zj8Wldu8wvV+2+Cf3rYYXxHtY00N179m9Z+za
c6Xnyn5on5X9mD2THj0Sb8r2Hdu/7D56Wm9sfOye3fQ25dO9x9/6XWY/z6XO
nPWTtE/uX3avauvU8tXX0vO0vsj8htWdGg4Vx3P9sp7E+Bjd5svGV7h51LON
N3rk4f5yNB+r/zccpKl+DB+MuBYVH7Pnig/plX4YT1qfV4VnZf7Z1kvFh30l
XKdW55n7sMvvvP9aj94XfJnf91/7w2/c3O6Gv/ZCxxvdcGgpz6UP8dtlnsf2
X+rB7Hk6X9W8Wz8L+z5CZx4j/m0vzqrJY+Nt/XK+fvp1n7vNb+Kky/d+/c38
2ryvsp8pn6yHH7n9cyfnND63vmZ7ryT+hX3ND+Ne3v9dni/4Lpvt41XdV+jm
J2m3FX/zb8m78l7ezo/Z74njauMtrxI+8Wfxe+YnQ+c5xfZ3i08sPuzysXiJ
526eU2y8+cOqf6Erj32X/W7s3/J1XT7T76rk4bxb/bOtU6t7tP3X8IqNPuVj
uCXEW6hwv6d6Nj9gfMyep7+b36MfsH3fcH4MV8fGG95j9lf6mayfi/28/2a+
SM/8Jq/xAy+/7r3vv8M3MD7J/5JP7OPi579xc6uu917oePPDtJ/gBObegbhG
rJ/JfTF/N/xt3omnl/Oj0c0Oq32K93p2TqzotDfaYfyJnYsNX9reI6jw7oh3
Oq0rIG5M1f9IvDLD/6zkt3sui29NP4ZnOD0vGN3iAYvPp3bLcxDzjaR3z+85
V4bPU8lv2DmF35t1ZHi5XT7VedDyA3a+M7rZbezB3sHsngdNPzbezq32vonF
/6bPKZ/uOaXq+za6rYspH9PbFH/b5sXeV7Jzn9W92z5u52XDUzJ7tnVnerZ4
Y28eIHmk6rtIN9wni6/sHGr3vNHXu3GJ7+L5yGPnU8PNNv62TxkuwRQf3nDU
7Xept+DdmT0YLlx1frc+d+6PFicYfRpvVHFIhetueOzsG2I9no23+V0lzyo+
5meO1k9F57kv5xr22dn5sYvfGz5Gt/jZzqfd93pYd218op/Uh0/lMf6GGzw9
d4cP65/5u+z7MHnIZ6rn3KdP9TzNS1hdaMWn+q6sI6vD786X4bdP+Rjd/Ful
n6k8di/Q5cPxWddTPRsfk9PyFda/nH//7vq9r72Om77xej/0+xeLcyw/efQ9
UeKD7r2V3VdW+Tq+O2bjjZ44KXImX8d7DcsfVvlAqzezvJDhBlsdpt27rYrn
V90Psl7l7X7k/f072afeHTfel8fy2+Znpvk08xtG7/Kp/CH9c+zHcIat79Lk
6fKpvst+185NXT70z++OA+/n1bv3BaGv8ht8P/HyHsSLe/dNkdPy2La/GN3y
LdbfN+Vj460O8Gh5pnwsr3K0nu1+0+rzDS+lwiuw9+LJx+hTeYxe9WVzvOln
aodGN/5de65wgY6Wx/RW4Xt352vVvG+1Z9a9r5KHdf7hM9W/1evaePavbZ33
VfZj9ee8P6r6TKd1zlvrrpmH3yvP1u+y+7Uu3n7885TPKnmOrm9f/V2Vv61+
1+JM68u29WL9Bba/2z2+1SEYHoXhA1hcnfGGV5Z1kHoS1plkfN55yXdnvPXh
2vpi/0vmxehd/M+Kj90fHS3PY/mNSh7rP7L3FPbqmfdlNt72cZPHxq+aL8O5
WqWf527Pq/jYOcX8ufnhLn5OVX9Ov8r8PHGx7H2u0LOO+Q5U/GLefySd91Dc
F7o4P6wbYV2QvaNR7V9dPIRKP6SzLi7zZeMv4758bz8yOS3enr4Lb7iyVf9m
9zy7Kg9gdtL1z9kXjI/JY/KbfR6dRzJ8qsQzjHNsndq67tpz5J+uC8ZplJP2
b3Ga8bHftfmq8O25vlhnVZ1PjY/R7Vxp/sHmscKBYR2O4cxE/9SzyWN+uMI9
7uL42Xi+hxt5Iif1M/XPRuf64rxs5cN1yvGG2zblY3TOe74r/G28+Q3aG9c1
+VTrnf6B8244S+ZXH153Xi9X4atX73es4mN9grYeTQ/T90dWfddz0bPhbXbt
P35mKo/lHxinsS+YfAxHxeIQO+/Y+cL8oe0vVdzIuLTyG9S/4ZgZziHx9g3v
1/hkf5zil1pey/Rm/sriWPOHVo9t/jZ088/dPJvRq/4d6/ug3Rqf6n0Kzrvp
YRqv2u9aHGXxYZX/JB/br6vv4vgKH7jLZ5U8Rrd8+Cp5VsV1pk/zG1McTqNP
7WpVfmNV3DvNR+2Nn6tzlp0vKv9JuvkHey/P/Lntg5V/7sbzVRzOfbnrNzJf
e+WxfWfvOWWrPPwuytN9f6G677D6E4vnLU4Ivfvuqo03utVvcJ1W++yqeMP4
2O9W73kdJc+Uj/UDXkueKR/bv6bzNbUfG295s/hr4oFM8+G275sfmNYjGR9b
j0/t3G3vUm2Vp4sXveq7qncPu/cOPBdX9mN8rE5stZ6n+Q3S7b7P8iEVHm+V
J2H/O+mVPBWfjM98MF9X8TFcAurZxu/lQxwS1m/YPbXt70fn1St/2/WfFv9M
9Uw+lZ6tbq3Lp8oLWd6V9OodFvMblKfS2xTPttofu/m36X238dl7/17xMfwZ
u8efyrOqL6DqR7D6DcO1eOy+Cdu/eK+aPGF1fuF50OLP6n6qi99oep7yMTrj
lq18zJ4z3uIc0rd+114+1idb8enWjUz5rNJzhWNT9dcYn/il8Oni4RhOiMkT
OvVm96RTXBGjE+c2/XRTPon/0p8X3BizB9Mb9WPzMtVzNb8mj9mb3asa3XDz
pnhKtl5s/BSnyObX+pFX2eGUj51Pt9aLks59NucCw+M1OW2/tv10ul7sPtTo
1u9Q8WE9gMX5sUvG50Y3HFH6ve987NXI++fQ8DF8S4uT8/1dfFfDfzM8ur18
mEey954ynudi0m3f38qHcZqN7+p5Ko/pucKxtHdRrV7U7rvtHEr/ELw14rDF
zo1OPsETMzw3w1uo1oXli7bac+bL9B+7of8kvlm+i3EF6dFD9GO4BDkHMT+T
e1XWwxjd4tJpXGR042P7junT9muzK8oTuuEpZf/ivmnx7fS9FbNbs6vp+zir
+FT+mfyn+GzWV7gqD2n1J4ZzMsVzMzwQ+64uvkr8s9W5WRxV4cdW76QQT5h+
z37X/Eb0Zffa9t4K6eTD8dW52N5tSb//6rxENw9QzTvXi/1u7H7K3+qRWIdj
577qXMY4anqurPIhXT5T/EzDPV51TjE5p3xsndp4w4OtxtMeDLfKvot1oZFz
1bnb3usxnPbpPmV6tu81/HyL07Kvxb4u8t/Vs4V++Z67eqesj4t+PrzHJ+MN
75R88rsP11vej1ssfrN7SdsHDUdxiicZP2b9SsaH8tBvJ59g533DAbM8Z+yG
9+OkB4fE/P9ePLfY7ZSP4aAaHp3hvFU4vRxf4RUfJc/0PGV6rvDuSK/izC4f
8z923rHfnfIxusnJeDv3dBaHmz1wPPvRyMfspMunOnfbeNtnu+eU7nd15TG6
6dneDwof2klln+QzzW8YH8PjNXuz362+i/onH/YFW/0590Ebb3TKU31Xl0/l
T0zPU3ksLrX40O5H7D7C3s20OLN6f6Qbz9s6mp5TDLfT7i/s3sHyY6vyfqbn
VfnDh+vw6/6U2JvVU5n817ofnN5jWl1xdX9ncQXPNfY+l/lVO1/Y+cv2tar/
0fw294WKD/tEbL/m7zL+If9KP1u/y/QceVbrmXS7t9rrNyzPv9Vv2Hi7t7V+
E6NXOBtH8ZnWWz72d6Vfw/qFr6XnLv5M/Bvr54nzyXuiaf3kKj7c17biTps8
pp+Pqj1X9bS8X7jWvE/5PBd7pp5jz5Ud8jw1nXfDf5viB3btuaobN/p0vdjv
2vniKHnse0Pfik/Y7V+Y6n8Vn8fWczXvUz7WR2b9INa/abgfdg9u69T8gPWz
2HnH+sQNZ4b9ql1cC8bbuffhudVw2KxfPvPF+wtbLzxH8z6R441u580pn73y
bF0X7L+b+o2t65T9cZwv0q+l56qPtcvH9LzKDj9q9vzdpmfbB7f2x1kcyP2I
dRH8XRtvfZ1TPlN5sm9mX8h3ZR9J/of3ieR/61V+8q+8Wd+pHzC61d1Nx9s+
bnVK1HPlhytcJubxVp0rHzu/UeHHrjp3r8q3GB6j9W9+/DYx96V7dmX4Uavs
OXTW5xjdcFRM/sSB3TrYrGvyt/y84YxZPEl69Mk4P/7N+Fi/rclv+sl42oN9
b6Vnq6+gfVZ4lfYOI8czD088NNoP8wbVd63yz6v4TN8ntXcKPndbYHX3vVxf
03VKPtYH93D9W73eV/mNio+dcxmfV+cOo2e9d/MnRo9+WS9n5wjb1wxH3ezK
+qGq72L9ud0LW95jq56ND+UxOvFwkhc1++f9eOix++77QZbnIZ/kk2285XW7
cXXsvMKFMNzI/E78s8UnFk9e/u56Zl2u7QuVnVt9Duv0uG9a/291bjK9TeNG
w3k2O7R+BOoz9c/TeMzG276zCufE4oppP7Xh7VfvibBunDhR8bfmV6Mfq1en
vXFdxP5tvVi+lH4sfMyujE9XntBX8TH81VX6od1WcZ3F4eZ/qvN11qnl8y1+
jn9mviLyTOPVxM/M8xwd967iU50Hua5t3o1erS+ua7NDs+etca+tL+6bXT5v
1/X1/UYlj82v9ensPaccrWcbz3gj+47lexnPZ983/K74HcaZrCe0+xH2exqf
al8mLhPzzzx30w/zvDbVM+18a9xifnvKZ1UcZXSLn68lz7X0bPNuuMfGx+4H
7dw6fQftKHzCKp88ff/oqeU3puf36ruoN5PH/KHNr52vzX/auXjK3+zB6JWe
LS9BPU/zEhUeIPFUq/wG12P4dOtnqnzLXj6G22zjbd9fJY/Nr72zOb1PWRXP
W5xg8th9dxe/sXovz9ZvN19XrVPL13XXV5UnIa5I6mnz79lPbX3WseMvfPKV
Jd317xjOntUN2n509HxN8ZCrvCXP6VvvzZmfr3CBOH56/27y2H3BU7vvNj6s
38j5zvIzzG/ke81fmV+q+iDsPWvSDd+mqhe1+wWrN5vW13XlMTpxTQ3fu9JP
5fe6eu7yYX9K5c+78vCe1OZrq56JF2Tv5hi9OqccxYf4VOk/NT6GB2j4h9a/
ZuONbv10Nt7yNnv1bPacc2tXz4wbaVe8P+I5xd4/NT5Wv0S64QURN4n7FPfr
KX5XxiXeMVyayn4Mb3OVHRqf+BPOb1X31c3z854r+px+l8WZdt/BftvIOfXn
0/clKz6MN8wOqZ/0yRoelNVLM26PfVr/i+1fhiecuJr2Q/6G75pzSuItxoGG
v1TJ0+WT9WvvUm2Vp8JvXMWnq2fi2Fv+qiuP1dnynjr33eY3eK9R5Z0M39jG
d/nEz9g513BxTT9TPdu5u1rXfJ/I9pHp+d3ihORV9uJN2b5vfin6pf5NfqNP
+VjcmP2eejY+FX449RA9dvPYhids+YopfnLs1vqPSJ/ysXXB+Cr2n3rXCocq
dI5PPtDO6dP6DeI6rsL9qN4dNrwyG290O7+bHzB6dV7o8jF7ML9R+WF+l/Ex
+io+htPSzQMw32J5gC4fW6eGL1TpwfAAue4qHMjuuc/yrhb/8Hy69Txo47ee
CywvWs2vnS94TqH/sXdYpji9tt6n8hhuPPEwDVe2Ok/ZuWZ67mY8kP394fzA
fXxg8/OGM2x4gKlnyHx+5uX/9/Of/vAe/WLvjm/c5RO64R7b79r3sn/n7XvD
+/dEVTzPebG+RatrNb+36p2CKR+jW11chRts+Qf6E57rk1+l/2edudXVs57N
9NzlE/rW+Mfud7gf2XjT55TPKnmMzv0ifmnKx/brKR+jV3VfFifv7RsNf5Oz
e841fP4pn+pcsJVP9V1Tf3Wt7yIOJPscu3zMn+zl09Wz+Svaob1TYHTze1Yf
a+dWwxO28Ra3mH5svPGf8jFc8QrXmvNi8d4UF9f8mPGf3oPYeXN6f2HnuAoX
wurKqvv68O++t5JznOWv7D6O9UhVvs7ohoNqcWniNOsLq+rZEtdl32XegHnp
1feDHF+9G5jvj54vfnWuZ+a3o0/zY/GH9APmV+0dFvMbXT58F4b8V/Gx+NP0
UMkTf2j6NHr1XTbe3lVctQ+aP5na4Sq/ser+4sRDXvtdTw0PeZWera71qeHH
XkueLg7GtetULe76bsFDruqun4o9R8/WZ526iCoOZD7EzqG8T6nwplbZs92b
mJ734nY+FTzkrd+1Fw/ZvityruKzV8+r5Nmq52mfiOE42Tqy/YJxbNa74RUb
3rvJU/Vf8H7N8Kysbzr+hHkJwysw3DmeI5JPM//QtZ/kT54KfqzJs8qenxqO
etc/V/ixU/1M9bwKpzdx6ZTPVJ4pToLZ85TP0d/1XPCQTW9H407b/vLc8ZCn
fGzdZd/kewTTOHl1fzHzS5lH3l9P55d068ekntm/+VTyG88ND3nKx/pGjc8q
OzR8PMPlszyq4chl/N7+/S4OMOsAWcdleMjWx23jq/c73p0fvl/fa7heFT4Y
6XY/a/G25RNMb2a3FuebPHbuqHDP7N6WdmX0fBd/t9vvz36KvfixFS5QtU4r
XLjpezpVXpf7zhQfaYqHbOfcCo+rayc2LxWd/RF2P2vju+fW6N9w11P3wnU6
tcNr4yHvxWW60Gt80Qr31X63i69S4Q5ZXtf2HTufdt9ZoN/g+rL8Lf3GVnxC
ixO6eMixc+bBKjxk04/5MZN/mjej/zFcbspZ4SFv1bPh0Vm8Z/koO3eYnZie
LY9k8YbFFZl3u+/g9/J9nJwjbF6s/tnsrcL7tbqCLp9KD1N5SH8qeMhb5anO
BVb3Tn9SvR/B84X1Ix+NP3z0+zhHnyvN/9u6Xm0/Xb/a3QdtvVe4wYbDvNdv
ZDztvBs/V3mAve+2dPXcxWdejR/bxUVMfL4VD9n6HK0Pei8est2nGO6i5aNW
6Xm6Ts1vTPF1j7afKR7yFDd46sem+pnqeSqP6Tl05ossblxV92XrvYurnDhh
Wg9g577ncu5eJc+0ntDG27mP91aG51bdm3fxP5MHsPxPpefUBX/qh18huvXx
dSkP9TzNc5JPN79BvKCuPN18S1ce2knoUzzkbv6H97C0W3sXbxqHr7pPsbwQ
cdWq/LDZVf49+6y32nMX93K6Trv5OuJ7V7gWVV2K1eFEjq19BFv7Yqz/yPrl
rS5uOl9d3OmKj9nn9J63wv0wPGSexyu8jr33y1M+q+67q3xdhYPUzW+wbiH5
AcaNNl/5XqurWYWHY3XmrJNhffhWfN1VfAyn92i8oC5OL+sMyWeKOz3Fed6q
Z36X4bNtxdflOWgvTm81L1O/wTi2wkVchUNruHk2jxUuU1c/q3CnDYfT4oop
jvG0j9vwlq1v2vRp/nkaL62yn1V4yIbfGPk571vz/Ly3snu6qX66+Jxb8cG6
+0LFZxXumfX157x62T/u9BO9s17XzjXW57IXp7fCH16F09uVJ+em6XfFDrp4
yCbnFBe3+10VH+Lomp634vTafFndmvkNw3N4uH5mPR7ydz72isMdvm74BOeB
OAwVPoPFUVO8DspT4TMbfYqHbDjMxG/JuSbnKevTJN1wkAyPjvrJeox+9uIJ
WD4h4z8ELo3Zlc2XrSPrw+3iBlf1fsYn82F5pC4eMvkwj0H6FA/Z+Fjca/hC
1X2Z9TtYXU3kSh3FFMfYcEsqfDnD1yLd6tBsvOE+2T7SzWfy/FvVK5IP42qz
E4vPu3jI1fnF6FN5jF7lN6b5lr15JL4/xfdPuX5tXXft3PCQWe/EPFsXD5nv
xDE+tPdxDI/X7LN6/24vzliV5+m+t2Lnl9V4yOxjtd+1erxKn1vxkDO/tv9O
46WqrrXCDWb9A+tyySf7keFbGv6w0ac4xnv5RA9mzxaPWRxu8Zj5JYszbR5t
vR+Nh1y949DFQ7Z9v7I3q2fr6s1wJg13lPtj1rvhJ1c4ltxHqAfinVoctRoP
eev7FBUesn0X5eR+EX9o442+FQ+5+71mb1wXFW6t1Xclnu/ac3XOZZz/VPGQ
zU44nvts+i4rXGXDV6m+ayv+MPGQt+p5imNc8dmLO212aLidFR6y4eFY3SPP
uV085NU4xsaHfqPCYTZcU8OjZryRPKHdX+Seg/cs03OQnVun94yWhzz6/mJ6
vt56X7mXT87buW+62Pfx76lZ3mNVfZ3Vt8QeWCd29H131s+PvZqGn/jg9Xd7
3Rf7fJN/tniji/dr+3Xlf6r3NehXu36MOBXd+HwvHnLFp9ovtvKx7+L7PlV8
W+Fd275m5w67J7Xzfu4hfuClVb73/dfHQ57iO1X1Hlv7Eaq6I+LwdN+F7+Y/
V32X3YOs0s/RfAzvaMrH7MfwtSyfZnSr153Wt6+SZ8pn6zv1e+ed80LcSMpp
eG7PRc/Wr7FKHqsbNPtnvyHjZN5/Wf++xXvT/osun+x31kfJeq3qnq6LDxO6
1clP+7PYF5P+oymfqh9qK5/qu6r6q736WfVdFhcdrZ9V32V9xOFDvzHt92Fd
RxXP2D2X1YdU92K8z7V6y6r/wvLVzPsZzpXhUVgdguHRUf6qz9TGG93qrGg/
0VvVH7rXnqd8zJ6vJc/RfuOxvyvz3tXzVr+6io/14a7qdzZ/smqdVnreu96P
9htHyVPFn1bvx/xqhTtt9jDFeTZ5pnwM38/idtuvTR7rB7R+PYufLd42vCOL
55mnDd36NE0PU9x71vVtxat/7vmNo/M2PJ/Gf646x9l4i9Ny32p1CLR/9vUk
rpvKs+q77F7D7GGKi2L+s+JD/VjcO/Ub1TuPdg9e9eFW+8sUJyHzR/3bfmd5
Mxu/io/ViU35ZJ0wnjT7nK4Lw9W3fcrkmX6XxcPm//O9Vudm+NvcB7t2bvVC
8Rv0e9G/yc/7ndzvm34sjzHFebB3EAyn4mh7PnqdWh+NzYv5N8PDnMqTf5/7
/wrHw3B4yKdaRxZvG46Z+QeLY63uvXr3nPe89p6X5W1sv7P8kvmNafxpfKwu
xeppp3WPVk9CPbOuwOrirA+uin8y3tapvaticYLlRe08a/Zm/tDWr/VnGe40
+7CquKiqr+jGV8Yn8lhdn9k/v9f4HP1d1ueySj82vrLz7rowHJ6j7tGq/sFu
XMf7wS4fu78zvRnd1qPNl723ePT6qvavyp7jl46251V8Kr9h97ld/Uzj8K6e
bR/cK4/V6XXts8o/X/bJu7juqeafGedbvmL6jrbFJ3vni/PCuvGpPRuur/k3
G2/06XtYR8tjfGxdTN+9st81/sanizNc1X2tqiNahbs4xVGfnt9Xn7v5u3bu
rvJa1KfRp/jw1b1k107s3Uw7vzM/Oc2PEUeI/C2PZPUqli/d+13hX/HheKun
muZJ7Hu7+KumZ+a7WP9s+rR7xsS9jK9Wnwt4PrVziuV/pud0w33tzlcVb0z5
THF3jT79LrunqOpAzF/ZfTrlsXp+62ePHX/f7XXtBzevVt0XP/tC+Rg96/zy
PXd9Ova7xof9UOFj9mD9Edea92m9Zbc+oboXtvGr77sNl7WbF12V37B7KMOF
s3Vk9MhhccIqPtQ/cW+437E+p5Knqhfdysfw2YxPVb/KOpkpvpP1e5o8hnc0
nS+jG5/ud1HObn9Ht07Y5Kn8g32XxdvmP2281V9ZH2jq9i6/8/7rfdf7Rq2O
rtJz5T9T72R2aOOnfKx/2XBmzP6n+GDVebbLx/yb6bkrT/RmfmmV/Vi8ZHws
zrH+nWk9EvfBt+sQ7uKx9JXbd037rG2+rE9/Oj5xg+VVunym8lTvjDD+TN72
co6/m3f6mcT/3Hdi//Q/PI/bOZ1082M2PnLynDLl05Vn+l2Z98QH1L+NN3pX
nlV8mN+o9FzxMfrD+au7PED60+2el7hzsWfit+ecZbjHdu7r4jYE9zjrJHwq
v2T45OQTf7hXnvDJfHA8/X+FR0E+xG/h/YXhcRFniXl1w6Owexbep9j7EbaP
TPMJZm+GB2t9/VkPzCsyXmKekHGU4ZHaeKMbHs7DOIH3+1NWyVPhrHL/NXwP
+p/EY1YHPq27mOIcGl6K4XtUOKjExTL+Rjc+pk8770c+3hfbeKPbvmbnOzun
m53Y+Kxfu+8wPnaeJZ18KH/3/F7lN7rn7mkeyc7p5vfMn9j3Gl6x4dla/Dw9
n3Zxp7eeB6t5MT7dc4GNN7ut3uthvYrpueJj5x17j4/+3/gYbmSFn8Z6J6Mb
H8vP2PnL4hPDATa64RkmTq748H124vt15TH8Q8NX3MrH4oHoN+9jJi5NXN2N
62wdVXEm41XDpcy/Z7xh+6zxsf3Xxk/phktW4YxZ3Vp3fg0fdRq32Dyuin/2
8klfwN64jv0F5GP87btsfCUn9TzlY3Y45TO1T8MvtXVd+QHS7Txr+L12LjB7
2Hu+sPEmD9ejnd/Jx/ZlWy9bv6uSp9K/4XsbLrHxMXkqXHfyN3u28dGzvee7
t3+nwq/urosKd5q/a3qz7+ri52/lY3jOtr6sjsLyRYbnP31P5O064/v4J4xL
LQ/G/GHiJfNL0/sL47PqftB+t3vvWfGxPPm0rsn0b3ZC/snfTuv07B3SaX2L
1RNO7yuNnu//kds/X39zj2l1EbZ+u++OTf1hxcfW6bXkMXr1/oL1Y5Lefe9g
73dlfqt34qbvzXW/K/u++QfzY3YfUdUZkm73R9M6RsP/meJfWZ1MF/eSuH/2
nhflMf7Gx+ir+Bi+yrXkmfI5Ws9W/2n9cRXuNPPMe/GLqu+d4sbYeOubsPVo
fUPUM/OZpmfLo1Z6zv3Cc9fzVJ7o2fLG3XXBeqrsUw/3f/XfXbV+CnsXw+jT
382+SRwMw9+Y2qfhtk3tp1vfbvsU7bDCA1zNx+q+Hlue6N/4PBU9R84pH+sj
MD5b8dN4L2B92YYnY/e51btv7EcmjjHzGxWusq3T6MHqKyr8GXu/xvK65GN9
4t1+lszLUfZsuGHV+noqfmO6vrp+g3VER6/3p67n1ftOV88VDu3e9bWVj+H0
Xkseo9t7IkfLM32nxs5fyYMwjzHlY/QKR9Tes7a6EfZrcHziduNj+rTxRud5
IXTG1cyDdXHtpvF86kOYZzPcJ+v7sLjI9l/DZza/ZOOfS35jFR87D646x9n4
z91eEH1J30Wlndh7wdanHzvsnitXnU9JzzvsiW+pf1svFZ4k4/9qXdA/WDxv
8bb5Z+4XiTOn77YY7kSXD+uBWd8+5WP97Fv5ME+b8VbXyvjf8uHTdyVM/9N1
Yfd6032hyk/ufS/D8py2vxjud/wV811VfqzrN8I/dL4favdlFe5TFY9VfDi/
FR7U0fbM3121LqxuwcYTp6vCZ7P4cNX9l91TmB8zPhYvMT8TO7T1TjuPPVue
x/Z3oxtOpsUPVR+N4W1yfqt9lnTjY32IVh/I8ZV+TJ6png2PzvyYxWP59zxX
2j2C7afmz6f4Zsb/oq+fuWe39M/cB2nPNp78Wa9Ov2HjjZ59lvq08bE35j8t
fp7Ks+q7DH/1aHlsHqf3X0efu1fxMTw0W+8W15ldRc/0M7bupvNl7010+VT+
0Pb37netsuepfvZ+F/lM9Zzf3SvPdP+q9My+oaPlMTxey0MabqTtp08l/5w4
f5qnsnzFKnue5pFsvoyP+QGLo6Z8pnHd0fIYLrGN7+p5qzyMn9l/0a0X4vvm
qUfae/9e5dm6uM0Vn27+yvq19+ZbuuduwxOe1u3wfqeqZ+u+D1jpzeykyvut
zkN234kj/tLefKblaSu76vKp1uPqPC3zz1y/dt4kjgT362l8fvS5wO4HLR5Y
ZYfkY3mtSs/WF7NXnr323NWP4ZwbbsPW+g3KmbzJJ24n+K7fx+jxF+x/Nxx7
45N1zr6AjCdeMfkE92nKJ/4i/UHpX7C8tM1XlV+inqu6AsZvVs9j+X/eXyef
XN13s357Wj9veezw4T57dJ2w5XXtPTjDd6rWF+M9sxMbb3TrNzR5DC+9K4/1
UZrf2Op/Kj3zd22++F2sx7a4rhs/T/U8na+qX9X6mKw/hXwM72gr/ufUflgP
afGz+U97r9PGG91wCw0v0XCKqjwM49VVdjjlw/MOz0e8v57iU7EPPX7e8LK6
fFi/xH3EcFBtXdh+avLk+3PPm3dhzH6mOMDEC738/ot7v5v4xOLwrfE88ycW
Jxtus+F80s8kXjX/YPNSzVeXT+WvunbCft5qvYQv62yNHn0yTjYcPKPbujia
D/sRKtxj42M4fuZXp9+VdU4736ufSp7pd9l4wzOc8jF64mTL02bdpF7x4fjf
8b1ZP2N0w0nm+Phn85/RC/2Vjbd3eSo+PFca3faFKR/bR6r55b5gOBW8j+P+
Qrrhqplfjb+43A++X+6bhq8euYlfWuG3WB67688rvALyMXkyHxxvdOPD/cje
Q6lwj/m7zGN08WwN78Lec7d4zOrErP6kwtmwfgfe31V4blwvD9u516F1cUgM
z9xwPyz+4X6dPLmdo41u+53No9HznVavZX1t8ceV/W+VZy+faX5jVf6nuofa
mwcwfBt7j76yq+550M6b5scqHA/rdzB5LL9qedGjzykVDhvl2cqHeG5c7/a7
xNUk3oLlhzl+yqfrb/kekNUPRH+feWlVn//0fXriYcMTnvIxPMC98rBOjONN
D138wMRp1btOjOtsfq3Ozep2su9XOJyh23qf4n8afuyUj8UbVV2u9VEyDp/W
wdp6sfOCxUW2P075VOu6y2drXEd/WPGxuM6+a8qHdNt3pnxWfZfZuZ0fu3E7
/bbVG9PvGZ8pvcIn7PIxHD9bd1v5WJ8RcbynfLryVPNodMO5nfIxvGLbR6Z8
bLztC+b36LfT72N0W4/EvScfq3/u4vAzzxP+9l02fi+f7rsAXEf2Xfzd8On6
/wo3nnmhnINsf5zeN8X+eI5edZ+y936wutdjPLb1Ht/uu+19IqsLsjoiuy/j
OZTvEjJveXQfkOEnWF2WxfNmh3YusHVq693iB1unRu/Gw/nd6TnR5N8rj31X
+Jv/WbVfdPnYd5lfDZ/4w27+s9KP1fNbHy7Plcy32L1/7qHMPyTfzfUyrQcw
fPXV+AZ7+Vhdq9UlWl6rwil6LDzk3JNO+7Ut7/pRxUOe8rH97mh83aNwermO
9spT1Xd1+Vg881z1zHo5jrc+Yot/LP9/LRz1Kb6TxW/TOHAaTxqOTfwh423r
B+ni7dOeGU9O+ZifPBq386OGt/lY8hyt52k/ZjduybnVcNiMTxcPmflh5usy
3vhUuE9VPynrtIPbZv7N+nP5XcyHVPNe3Xd/t+P0Rv6jv6uLO/1Y8lzbPzOP
x33Q8LSfKk7viYd8rJ6Zz7Q6Iu4XFsey7nE1HvIq/OFu32LFZ9q32MX7zbzY
75p/MFxii9uP7uPOPFI/2X95T3G+97SNT+aVch6Nx2X4WqvwVVbJY/28Gc+6
o/B/u07N8ZC7+Kihm1118R8MB6DCkbD3qvbiURyNh7wX92P6XbyvJO7HtfGQ
w4f7V+oceO6rcPO4H039huH5V/0Ie+8LtuqZ8pg/z37K9T7dT03PU1xl7pus
0+O8G05s91yTdb3anq1fY++6iNxdPGTLMxgeYPKipO+9t9qKh2x+zObX4vDp
erd3+qa4gl085CqPZHTDMTZ8EsPFzbwzfmBcYXhuiX+m+tmLh8z7bvoH2jnr
LbvvOFh81cXJr95fsPVl8z7FI53iIRvd7GQrHjL9TFUXbfbf5bMKz/ZaeMg2
L9P3Dp47HrK9x5pzGf1qhbdZzftqPGSLc/bKU9nPlM9We96qZ9rJ3vmaviM5
3b+OxkPu8qn6dFZ9l+HT5u+M36p3K7jv23nE7sHNX1n+zeQ0f2J1AtU9Pu1w
lf0YvvcUp7eSp8vH1rvl8abyTPGQV/Gp8JCtTt76nhhn2jmlyieQbufWo3GM
j8ZDNv1U9V3d8+mUv+GCduscqvtTk2d1XrTCQ7Z8ZleeKg/QzYtW+LHdPG31
XdP8asWnm9+o8iRmD7Z/Jc9g5zue1+w9Ee53VV5iGs+HP+Nz+16jZz2anjnv
5DOd92q+jH4UHvIqnOfKb7AO03A/9taTUE7Lc27FQzZcZdb/5zvZf9Tlk/6C
3FuQT9Yb7SH7OOuprL7F9qmt+MMcv7eugHzyfVZXkHqACj+E8rNeroofKnxv
7sv2nqbFh1OcmQqnNziphutY8c93dev6tvLheMOnsvU+9RsVfkv1XVXf4l78
2K19lNP5muIhH/1dUz1PcZDMfmy9231fdV/WrUeq/DD9nsUD8fPcT4kbTLxf
ynmUPRsO9mr84VX9zl15eJ6t+qa5DzIuMpznqr+bdmV9i6vwkFl/8jYuaL/f
p6oH4PdmXit8zuB8Eg85cZ3hUnZxp1n3OO1DrPDZWLdmfqnLx/DQ8j2sI7K6
ccNtM79k9mm4ZKtwg6c4xkfj9Np6n36X6dnGT+VZ9V02fpWebf+K/+G9ht0X
m/1XeMjv9ns1HjJxg4ljbPTopcuni4fclafC2diKqxz/8m45HR+M8xi61Z/Y
/aDV5bJexezQ7Mf61iP3KvzhLp+sE+YHbPxWeTie8Vj2r714yPEbFZ9KP+yP
YP7TcI/t/tfiFhsfu2W8ZHiSNt7Wyyo85Ckfw/Gwfaqbh8z50d4vsPHEKWL+
p4tjbHQ7d9jvTu1/rzwVnyqPxL6wrXnabl5iGm8YLpB97zTvbfgzq86VXTzk
6vxu9jY9Vz72OaXCMbY8g8ljfOJPp3jIJo/1wdHvGd3yIVN8V4t7DTf4qeAh
T+Wp4jfD/bD7FMNPS948+ZCMN1wszpfpJ3TbT6f4w7benxseMuOH1XjIjLuI
G5l7ZKOHr9WPUX7Dw+ziIXfxJbq4yqvxkEn/qOIhGx/zP1O8WfJhHZr1N5HP
FBf3KDxk0/NqPOSuv1qFh7yVT/TMuGuvPKwb7PKp8Nu7ejY7t/ihiwNZ+X/D
8+zibRofwxOmnplfMjr9SYVHuvf9iyp/Zf7N3l8wnGTmTxJv2HjLl9p9k+W3
V73bcvT9IOOxrff4WW9Wd0o5u3naxLHT9+z43m74xN7M/x/VB2T35sxjx96q
94D2+o2uH9uL90v/Sb9R7b9Tv2rydHGVp/65wiU2v7oXD7nad7p67u6DlTy2
j4S/5VvsnTjD1bF7/Gk9gNHtXqyqz2Rd5dF8LD9gfKwOs8JZtXte5v2yj7IO
x+S3vIfRq/uUo/jwHip6u5Y8Rp/qme/d53erel3izFg/TsWH44l/nvd2s/5z
v13xsfv6qTxGN7/B8aaf0C1u7MoTPvku6sf6AqyfgrheiesM58TuDa1e+mh7
Pnp9mX8jTiP9J98LrvRs+BXMt1s/iNmP4UTFDrKPmD1X68Ls2eqyjF7xYT2A
7XdTPkZf9V0811Tvm1T66da/reLDewfqmXzMTqyveRpvmJ9Z1X9k97l2f7GV
TxUPV/NY4aDyd9kPkvHXsueqnrO7TsnnUy+t7BM/NbfnaX1p97soj33XtfRs
fKZ6Zpzc1XP2973zvpVPpefHlmernhOXdvWcuNHkCf+j9Wz92hbndP0h63Vz
3uF7beRjfXNTP2P+2fYvk6fiw++yvKid+6b6qfh038Wb7uNVPTb5VP2/Vf8j
43Ceg7K/x65Z30U+hrtifa+Gt7b3vBM57fz41PIb5k+688U6NDt/2Xs63f5i
w/2w9WVxoOECEQ/28u+97svwGI1u8pj9G26k6cfWI/1/5jdysA/d8sC2v5g/
ND5GNz5Vn4Xlq9lHsFUeO5cdlX+2e7pKnq5+Knk43t7LmPpnoxvuvdntVj3z
u6Z5/tX3DpTH8mAWp03zWuxrZn01++vjT4ze3ffNb1zrfsfo1n9U8eE8dvvB
mdflPl7l3xgnW76RfjX5/2ker6rHIG6D7fsWj9m9sO2/xDGr8k7cNw0/JPLb
/Z2tU66jCjfb6vCr+vZuf7HJY/qc4mDQn2RfsDjT+E/xyafrscJb6+Jah866
fesjs/FGr+QxPpTT7Mr4VPVOds7q6qeSZ7reqWcbb3UOth6rc4rVfVX3Tdl/
bX+0+Ke6H7Tv6t5/Ga6g+TfTs9Gn9rOKT9X3dJQ8lT3HfsyeK//82HqO/dh4
iye3ykP9TOXp+g3qmb/blWeqZ8PfiH/o6nmV37C8TRW/mX+zd3ZsvMlpcdd0
v5i+Hz3FmzU+Fo8ZHxtv/O3ec/oOWvVdtr/bPmt94tbn2L2ntnuBo8+Dlocx
XFaLM+08Zflboxsfyw/Yd035TOvQqu8if7vHtPsyO4dW51zez5JP7Kqbz8z4
rXlRyt+Vpzq/m5zMi17+ndeZGJ+931Xle02erp6r+kar06veF+D+xbxohTdr
/mHqN6o6sel8bdVzxcf8g+mnaz+hW1+2jT9aHuonfOxedVo3YvgbRjc+1Fvy
nIZ7fDkPvv/aLr5xczvs117oeKNHL3/xz/ymlz/99ZtX1vnFz754o/cfexUW
/ITzuejrhe7LVb0H53d6373q/t3ksX2wuheg35iux+m6sPHTvo8qTqj0zPG8
/zU+iQ9NHo43euyN8z7lU33X3vqNrn4Y73XlMZzY+EPLx3b5mJ1M+WzVc7d+
Y6s8e/lQz9n37bum+MOGe2zvoWztA+rq2XCqrQ7H9GDjrd/W9FzNl+nH5LHv
srqOLh/6q8r+j5bHcD7Nv03lsT5lwwEmPfFJ9rPLvvH1m1tzfO+FxtvdPH+V
n893Ma5LfPAjt3/u4iiT3+g/fhuIvf+a7//w+p7wr+t+YTj8ZueRn+PJJ/e/
sQfOI8fzfRyrR6VdGd5g+DLuCl/aj8XtodNuKz4Wd5FuccsqPrbuokfWP0/5
rJLH+HC9B4fWxhv/qTyr+KzSc3X/xbyrxeeGexz9XtbNN974QxtvdJ77cr7L
98Q/VXQ7P9p48+dTPqvkMbrZbeI0u7ciPg/xBkmPH029K3FQ+f4U+xrMDuPH
6VctjrJ+cKOTj41nvpp01gHm3Gq/W+V/eN7pfhfrcrvf1dVzpU/DNTX8WPMn
Vl9tfAz3MucOq6Owc0rkYd2jvUti9WCMx0x+3i+nDqr7vgD71qv+tapPx+yh
Ov8yjjJ7s/EVPkAX56Gy2yovat/F8yb7oar8KvtxVuWRpnkbiz9NfqubMj3T
DpmX7trP3nMlz4PMD9h5weJ/04+dU4xu/A1P2H63e95hvxLPQdNzk8lpeEHT
d0lMb1v52PukxGPMfmT1IcRryj5luLWGi2v9Pl1cXNtfuvIE98n4WD4qfir3
KRe9eX7A9hHbT00/9l3dd7tY1234AKQzL8E+BatnJp3vWWzF4bffNVxZi/MZ
zyduNz5GN/uh/Jlfo3O9E0eRdtKNx6jPo/jE/1T2Vv2uxZ/deNX4VHqe8pnG
z8bH7NzWL+mJk6u+D/oToxsf2xcM95j7kZ1TWK9o68hwPo/iY7isW+VhfWbF
x+o5SY+emWfo4qyyPtb6a47iY3re+85F/Dn1Vo03/ibn9N0N2y9Mn9N1Z79r
fpj7I+uTGe8ZnfPO96aZNzN5qvtW+j07X1t+0u6tLG6f3ssYn6PvBy1O6953
8zzI77W6mu492tb7Qct7W53t1np+89vkEz/L+r2j/cZ0va/iU/mNx5bnsfRs
/QhTPvY+1F7/3N2/4m+7+2Dolk+z+zXzw/l76h9TJ9n1z5U/Yf8y3yVkPsTq
bWz8Kj5Wb2w4AHl/p4vrbjjwUzxDu5eZ4snY+Gl/jflhGz+ty5rKs+q7rI5r
lX6sb4vjaQ/xn5XeTP4pnwrfey8fW3er5Mn6op7tHYcL3/577t978LsP1r/8
1Oz5Wn7D9JN54fssee8m85V9mffCW+3Z8Hy6dae05631qxUfG291+FM+pOc8
uJdP5TeuJU+XD/FDtuo5fFb5n4/fBjhfar87w3Vk64v5TMaxkd/e0yGd+BtZ
vxnPd0MqHAzmPayft3p/lnngx7Zns8Pcqx69LqwP6LHXV/Vd1j81lYf42Kbn
/K71FxAnyvo0+Y684XV3+Ri9az/2XdFPV88Vn+68V9811Y/hbZo8hiNh/tD8
Nv1e6MQl4D14hfvEPD/pxN/gPcVRfKxPmfdu4WPxvNFtfqd8DL/uWvJM+Rj+
oa1H8uF9AfNmXT6Rx+Jw+y6LT6b5Fhv/udvCkS/de78s9S0VTshj5TeO5pO8
Vr6D72/yveYpnhjxh6NPq6e95A2/fC+uMz/TxdUJf4sz87tmP2/fE96n591z
w0k2ezZ67Jn2ab8bPqSHT+aX7/Qx7zHNu9q8RG7mgfnOlOEoVu+eWD+48bG8
9Nb8c5eP6cHyBpV+yGernrvxlfnzrj3zvW+ur/gf2rnZVTVf1IOds1bfO1T3
45X9WL+SzUv2U/pV+s/qfB0+Vd4sdNtPzZ8bzvbR9ztd3K0K33jq90w/dn9U
fRftx/Cm7N7K5DS6fa/Zj32v3eNHD939jvmZKv+TuIV6rvZ97oNVHxDXncnD
/ZfvpPN3TQ9GN5y6Sg/0DyYPxzMOZJxsfCwuNfunPacfwfynxW8mj9mh0e17
c46w8wXpmRfaw1Qe+14bz/uRKu6dftdUHuNjdrL1PEg9T+/jpufKKj9/lDx2
v2n+yvLzXTvkOaKa94xfZc+MWyp7Ploeo3f1TD9PPplfymPjbb/Yq+fYs/GZ
7l/Vd3X5mJ63ypP9oqtnzuP0u0zPq+oKVvGxuG6aZzN/aH7e+EzjKDvXWBy4
1366cSDjK+Zvcy9jcaztpyYn80WW15ryueSJ78eZ0UNVz/PY58HYseFRdOvr
ujjbFZ/qPoV8qneLKj6839n7XXav131n2fJ+q/KH1TvRNp7nbvYR85yy97u2
8qnwuyxPW+ln73d19Wz3m7YupnlIu4+o8OSZ/zQ5u+8KRX7TM8db3mnrupjm
kbr2Y99VzbvpZ9X77Hu/K3JmX7Z8oNXX8XeZ39taR2R8DL/C3hEwfCf2GQVH
yOj2/qD5z2l+kvcR7K9nvLT1vrt7n275ZNOP4T9bfaDpoaqj6OpzyqeqkzF7
tjiB9PCxOp+qHzx8rC9vyqeq9+v2p0+/y/Bgt/qNblxn75gYH+tnND5GXyVP
V8/Rj+F/rpp38mH9W5cP+0Dffo973pfUzUNafGXvOE/r+W3ftPf1SOe5yer2
re9mas9VXRzx2ey7uu8rdfnkd4lz2NVzhSfQlcfe4eI8WlxUvTNFetYD8VEN
t9/iHzv/ruoDsroLkzNx22Xc3XsWNr7iE/3kfRz2mVZ2WOE/GJ6P4S10cSSq
faFbn2+46FNcZYv/sx54Tpnig5k89rtdPrxXrXDSDHc6etsrT4WfZvztPHi0
no1uerbx1fss1I/522pffnc9QP99YcN5qPiQ3n0/xd6zC73LJ+9k8V2wyn/G
X5BP6MSXyDyFT865Nt7yRYaHljoB5tstr274V6vsOfuZ1THauxjV+SV8wp90
40PcLfIxv0GcZ9MD5eE+0j2XTb/LxhtuqvmH3HPxnsjqLS1uMT9j97+GpxS7
reqLQie+H/tlON74G06g1TVZfGK4KHa+szjE8Eu7eUj2tRHXyOzB6LaOzJ9M
/Yz9ruG7Up6tuJRTPlUeietua16rK4+Nn+Le2HnW4iKzw6n+7XxqdPOHFR/r
R6M8dq6pzjvWn1WdU6o8T3X+2ntuMv4273xnoaoTM3x74svZOw7VO8vZp6yu
gPU5jJdYl0U+Rs++tpcP8YGzv1gdke3XpmfDyU989onbDeYu/rR1TfnTN2R6
Nv3Yd9n+a3YyxZ22/WjKx94ZmfJJfRTjlqoul/FM9My+rapOj/Zm/j/j+buk
h09+j/6nisdIJ16lxXX5XZNnysf85DQ+3BtnVvGq+fkqfp7Ks5eP5c/tXQCL
M20eUxcX+7/8zt164bmDfonnZY63eN7GG91w+/fy4XxxPP1V+mIqeejPjU4+
tJPudxnu4pQP/dtWeaZ8bF8wPma3lX3aPmt9u9YHRDltvNFtX7DvsnVk+475
GfMnpp9pHT7l79Zpk4/FY5avMP9mdTKWnyS+SvLeti9bXG15rQpPctX9IO3E
7nEsD2njbd+091K33qN17+P4/t3Frr6tdXrJs3E9Tuv57V5yiutb+TGuI1un
e/mY/8l4wz+fykO67Y9VfG58TM+Vf+7qh+NNz4yjqnNHxnfjySoeW7UPPpw3
uH+/ZvcO+X7WDU79M+mpQ0j8YHUsXRxgO79vxbXo4iRYvfQqXNOt/fu8Z1yF
12F1j9YPYuOvhYe8is9Tw4+dzst3Gx4y+9q2rtPV/c5dPtbf99TwvT+qOOrG
x+rhbf+yOv+t66uLi7sKV/koPOTpd1X6sfz/Y+OsbuWzSs+mn9wHMU7e2u/M
9WL+rcJDNrxQw18ifYqrbHmVClfH8mP2PinPldN3KJ6rPcf/rML3Phq3vIvT
a3mhyBO734s/POVjuNNdPlv3i6P0bHymeg6fKT6n+UnDQX1qeBT2no7h4RiO
k50vro2HXPU/Mt9reVGuoxMP+WE/s1cexs/si7H+U/NvFj9kX2acYPa/dZ12
cVoMH6Z7HqnWV9UPUvnVjK/uU1b1z+Z3qz53s08bb/XkJs90fze6xaXZR2gn
Uzzkrh0mL93FQ05dVoVjk99lHRTz3ra+TD+270z9j/V3WLyxGifB8IeZB6vw
kK0vZhUechcvyMZbHGjvnB6Nw8b7mtjbqncPHwsP2d6FNDxkw+nd+76krTs7
t/LcXZ3fbZ1a3Bv/yfm1fc38/GPdp3T1zO+q8jBTvGjiqBuOjeHhbMVDtvNU
lUfiPaDtg+zT4T0s7+OI/2Y4e7z/rfCQWcdl503KU+EZ0h9WuIvWr0S65ccq
3Garu7M6BKuP4vq1+MH8f9U31L2/qPAA87uRf4rTuxoPubsPTvGHbbzNi8Wx
xsfktO+a4pVZfuPo93Gey/2g1VeYfRpuieXJu7jBq/CQt/KZ+pmj8JDNP4fP
KpzerfjDXT3b+Ao/diqP7YNdeap9kH3lq+Wp9Mz62y6f6h29Ls55td4Zz9h4
o9u+XPk3e6epykvYftHdT8m/+l7Tp72XWtWzpb5uer6wfJfty1v13H3ny/jY
eKu35P0O9bP3nLvqPFjVh1e4eeE/xUO2eNj4UA9TPOTV8th5dvp+mdF5zl2F
01vxqfCQo/+pPBUu7vS7unru4iFv/S7irjDPb/YzvR+0+yDLJ1f3lRW+d8aH
bxen1353qmfyMXuu8j+W163y4VP72WrPTw0Pmfkxmxer+3psPGS7VyUeYOr5
p3jItP/grtu8771fzj6y6v1f2+8s7rK+qvwe9WP0qZ7tXsDqE7r3uZV/Nj6G
Kxg7tPvWx8JDZl3uXjzkvd/Fc0H3uwyn1/gcjT+8FT/2sfGQp3y6+FQVvs0q
POSqDpZ+b1U+097FtvNvVT/P/Hz8zBSn1/B1WUdkuChTOzRcyi6+U7cv+Cj8
YcOdeCx5rN/W+lO6eMic36wj61O2c729F2x1X7aOrF7U6lKO7r82euaD8hyN
D2Z4XKvwkI2P4fIZfYobbPTY21E4vUfzmeL07pVnKx6y6XnvvFc4z10+Fa6y
4U4//L3369Xt/pTnhejHzhFG34uHHDxh+iXDPZ7yMTzk8OniIUee+BfiMBs9
883+d5Pf8Is471X+YZUdGt3Od4kXKc9WPGTDH2Z8aPJMv8vySJY/MfoUx3jK
x+S3uMvqc1bVS9g9r9ULhe/RuHn8XaMbnpXhF9k5wvapbv4w8epWPGTGvbbu
zE7su8zepvJMzx3XwkOe5lcrPOS9eVqbl+k7I3Zes/yM2WGVl2a+a++5coqH
XJ1Pu/rkecf6FLrnnWl+b+v5a8qHcpofszqlx8JDJn2Kh7wKx9jwmqZ8aIeZ
L8YzvB+xvFk3njFc5el3dfXM+iWrUyKd8554+KOCh0x8tqrPhXGL6dnWo+EJ
GN1wLxmPXQsPeTUf20+JX13Vwxt9Ff4w/Xz86mp5TM9dPrb/Gh5y9e5kN64z
uu135seeCh4y8Qe6eMhd/9mVh/pZhfNMPVfz0tUz7bYrT+X3OH6Kh2x8pnjd
UzzJVXjI5gcMj9Tkj355vmB+LPm05H3yjljyZpaft7rrKR7ydLzZg+GgWp7B
zu/T+x07r1k8aeeUyq/ufb+1eufUcCEYJ1fv25Ju8c9R93HJAxMP+aKPF8qH
dZvJY2d97e0nsrwr93HDQza8361+Y4o/bOOneMgVznz1Xcanwh+u8JD5XY+F
h1zxYd/EFA/Z9Nzdd2x85OG6sHfipvWc8e/M+1n9pPmNKQ5kdd/dzTeyrq/q
Q7G6a9ZLZF7M/1h/jdVVWh+H0e096ymfSh7Ll5Le/a7sX4bDswqHrap/69qh
xSer7PnodVHhBVldZXV/V9XNWh+T1dOyryRyst6P724Yrmb8Yc6Dtk6t3mm6
3g3ngXz4Hpydyyj/d5s9T/G9p3yu5Tfsd21dVOur299nfR9TvKApn1XyGL2q
Z3hsebbqmXWJq+Qx+6z8Iek5H/Eex3BFDJ+kwlmi/6z4GN6g3Utavxv5GL4N
68ArfGbjU9kz69aeiz1b3W/iwL3ykE/iya39ztFz+rbYl826JtLZt7i1/3qV
np+af7Z9hHFdFb9N8z9VHZfFdZZXof+ZxofdOJPxIcd3/TP9fJdP9Gy4dt3+
F7MHi3PsnFLxqfK31XtJNt76nc2ep/jnJs9WPtV5mf2wyedQz6vk4TlxisfO
Ovzkr7biulOeKQ6M+QHzY9Qz+yms3q9Lt3cHKj7cv6xu3MavlmcvH8MfWCWP
5c2m50HrQze8I4uridNo+5fhQPI9RN6zV/sg7Xy6n1rfmZ0LjF7hEfH+q6qL
7r73NH0/wvyt+QGL/63P3eLPrfnevfln4hLQTizeYPxjuGHGx+5bH8anve/3
VunnueX5jQ/9ldmhrSPLpxl+hcWf5lcNr8b2cYs/j9az+QeLw+39zcqeDR/D
4hDey9i+b79r/nnVOSX2YPVgtn91z4NTvEGz5+o9LN5fEPe4qvO08VM84el7
auZXu/qvvuvy3/v3/lynifMtrqvioioPkH3H5And6g/tfSXj0633sN/dysfi
OqsXtfnqxqX2Dojhe9DvhW71/6vzP1v5VP6nGz+zvjTrK3qw+LbCaeR407PZ
s/mZblxX+atVfKp3Eh9bHotjbV/YK0/s52g+q/Rs+pmeC7p6jv1P+VTyWJ1e
tb8bn6me43+mebBpHYjFz/a7hpdr+1r1foTlsS3PYPsR42qrO52em+wcNOVT
nZvsfRnqeTWO+l4+Jv+0fuypnburekLWH07xP3n/aHyqeipb71N5unwqfNTc
YwZnJfku+17Ld1X5MebZjN7lEzu0+pNp3s/487xjeT/iGpF/9J6+kthzl0/o
zGNX+Y2q3vix7gerOkZb11P7ye9Fz9lHON7yMKFn3rfaT3WfUuWfzZ67fNj3
tFWevXreq59uXMTxZm8VXtCUj9HDp4tvlu//o8D1NZxe85NH3QuH3uVT4T8b
jn3WYfSQPibDPU4dAPG1OP6ynpyeOONHbv98/eZVNdIXP/uizcfkqfDKKv/T
vT+t7NnqhcxOSF/Fx+oKriXPlI/h2GReqvgt66iK66r4zfiEHj3THrrxYc6P
e78r9PBhfYvJs1rPlR+zdxyqvGJ1n1LlM3MutjzJqnr+6bsAUz5d/CvOF+fF
+BiO+lQeW9dTPmZve99fqPh05am+y3C0su64Hxkf4vomXrXz+7Tuxe4LjI/F
A5HvEo/c4YhaH7TRp3ysH9P0XOG62zsy1fySD+nGx/BJbN+09W599IarYPFM
l0/osUPGXfa7e+WZ8rHxPGfxPDjlY/RVfLp6nsoz1XPm3eIHs3/i2MfOp/GA
5UN4rokf4Hsr8ZNGj36/8MlXv/TBa/t4oXjCRud50/rHV/MhHkX8p52zpvgY
oVNvU1zxvfYcO7T1ZXjCFidY/GPjbV82HNGuX93qN+x7s0/w3se+a5V+Kj78
LlvXW+tyu3UOhi9hOBiGR2f4ZoY7Z3TDHbLfNbwRiysMzzN+ubt+ifNW5Qmn
7xQ8XA/jfWHW52X455ZH7cZd1EPucSzPYPuv6dP4GN3keWp5pOr+1+yZ8YPl
Vez9hakftnW96vx+9LnbzjXVO1bd807W0RTv0c5He+UxfDBb71Ocse45Ln7V
+FQ4UawrMNxI4mURDyp8gg9m9C6fyGP+2fL8lg+scOO5HnNeyD5efa99V+pz
DG/q3XmP/v47xW+3d0Oq90SoT4sfQu/Kv5dP5DT7sfjH9gvW/6ef3e5zbbzN
o8WBVVzH8ZWddOO6VXzMr1Z8OC8WD0/f3TA+5gds/F55tvIxPVv8Zu9f7I0z
q3tz2y/MHgx31/CBDY9xFY66/a7FgVM+9r2rvqurZ5OHeqZ9dueL30U+xDem
nokXauulwknmOT1yks79vcJ5zn5q9cPGh3XIlTwcP+Vj5ymrx7B9ucLn7H7v
FPfV4paufqIH8/PJl3XvieLvmD9knUzWXXUO7Z6zuu8ubb1ntPxAdQ7t3gtb
HdSq+7jUq33f7ed/8Cb+X3U/aPgkiefZLxC/xH3c9Nx9L6PaHzm+6q+pcO+5
jsw/VO8LWL+G9RFM+fC7bL/uymPvAky/q/vewVTP1te2d7+w8XY+tXMQ40ar
X02e0O4v7H7nYb/h51zSrd7maD5272B937yvrPr3rS53K54b9zvDNarw5br9
Hav4WD1qt988+p/2s5PO8yDXtdWFPnd77uJLbK2Ls/s4e5+UeMLJl9q7Bkaf
vo9Q8WF9lI2PXe19r2GKOzd9p+Op2DPz4UfZ89HyGN1wm1fp2XBgpnhNNt7s
ZMpnrzxVf0QXn3CrPFM87cfWs+mnkudzt4HDl+7l4c0vGd67jef71MyjdnHs
jV7x6cZj1m9ufJjX4j0I/TbjjeyDJr/h3B61vqZ8ci54bL/BPoK9fsPeh3ps
Pdt3VXq2Pi+Tx/DHLN4w3IC8m9aNi6xe69pxXZfPqrju6O+a+uej5WH+jX0E
3BesX976o+08aPRVfNiXnXVn68vo1r95NB/2M5qf2SqP6XnKx/rfp+fTrn+u
cJ6jN+bNpv37Uz7Td1KmfAyP4mh5Kj0zP0Y+mcdKzxWf7neRT/WuB+O6KX6O
4W9bnorxfOqazD9P8zlZR8wPm5zx/8yfW/yQ8dx3jG59InaPZu+9Gt3iIt5r
5HcN/8fykIyvWMdFPRMfpsrHHp3vZT1V8s+2jxs+1RRPqXq3l/zNni1vUOnn
sfPqzyXPb+ca3rfauZj5+W7/l9mbxRWW16U+KxynVXqO/Xdxffn+Qr6rer+M
8uzFv8p485Orzil2XzDNz2d/DJ3+mfaWfYf8DcfS8u22P9K/VX4sfq+LU2fx
2Nb8M/PMNi/UM8+D1KeNt3fHbN80eabn3Ol32XtnNn6Vfio+/C6zH8NDtvxn
hf9pdSx2P8vxVn9oebDnlkei3Zr/nNItXzG1K/MD03jM4jqOX8Un481uKz7V
d1X4n9Pzhd07dPFIu/o5ar5s35zyse81PzPFa92rZ8qT7zJ56B/4vYa3bL9r
9S3VezHdc5Dhy1V5BtqP+XnbT6dxXcZnH7jEj87H6nwsvp2+/2v7rN1XMg5P
nynPKYknp3rOvhP9fOallJ//tOvN7K3S814+q8+nPP9uPb+TXp27uziuds6y
+g2jV3VxHE97q3DGuu+RbZXH+Fsd4DTPz/xYle+1ebH1buMpv/kN9nGvlqfi
Y++smTzV+zir7uPCv6qzndbNdvVMXIKteg7d6q6vJc+Uz2Pdp+zFYzc9r9LP
1jqQ6p6LdTIVPmHFZypP9sfuOiLeJuvembe0eGbv/XLOoZZnNn+V/Y/9dIZ/
Fbv88J04inf04F8ZLjHxxDLe+BvutP2u8Td5jE/iHuLkWx2arevKruye3epX
Se/yYV0E+Ri+yhS/0fxJhUNS8aE92z5YvYthfHjP2/0uG290wwOc8rF+xq18
qB+brwo3qcvH8nV2P7617ot+0vjbfcS07r0b1zH+p5yRr3qnvuJjuDpmP4Y/
yb7m7F+2X1sftNGr7zqKj/X/rpLH7H9rf4rpmfPOc1/WKfPzW9fXw+v3fn6A
eJuXcS/aeMWJTwxvc4p7bPuy4YdM8Yuqec94znuFT8h6Ko7nuq7w5QyfysYb
/u2Uf+TjOcX4rJJnFZ8pjuteebbiQNp50MYb3eSx+IF+LPZJ3IzuvRvt3+rw
DY+ddVnRA88LifPNjxk9daIXee5wG6Z8DK+4y+c7H3vFoc8n9PhP4tUTxzj+
s6oTs/fUuC6mdrjKnrt5BubDSTc+9rtdv5H1ZXFgd51SHsqfOIDnmqw3nnPt
XsDkrPTMujLL29i5yeKZaX+K3ZfZvW2FL8T6DaPn9ww/ocuHOHWGg1ThvFn8
ST9fzYvFUdM8pJ03p3wMV6riw3wa8wzVecHoXI9b38eZ8unK0+3XszwScVGm
eS2bF+snreyZcbLpgfYcP8y+9dBtXzj6nLv63L33fDo951b5/Kk8PE91z1+G
4xq6xds8f1Eew6lg/t9+t2vn8eepI2JdQfYL6y+wOijWS1T8uR/R3yZ+iN/k
edzey6jeQ6m+i/VmlN++t8sn4w13i/aQupeMN7zKrh/j77IemPJY3m+K22m4
r1v5ME5Lnvbd+r8fP9v5zvrZLR6wc9YU725VXGd4y10+hkNb8anq9on7WsnD
ddqNnw0nMHzMz9vvbpXH+Nh8VbijrOu2fvDsk+lbNHlsf5nGh6wzj/z2Tgq/
q8KhvRbuouF4VziHq76ry6fSc76r4lPhDG/9roqP7QtTeSx/aDj/tl4Mp9fs
wfad0K2e1uqNGV8Z3ezW+kmTl2G+0fZ3q4uu/LbVY3fr+c0fmp6jH86XyWP4
tHbvwzqQ5Dmn9/6r7vXs/Gvj7Rxn+PnTd1vMfpgPTHy16j5u7/1g9R6f8bF8
eOyWera8t9mn3XdM9/0qHiAfW0dVHGj9a+RD/lN5+B6N+Wd798fk6frVio/5
n+q8me9i3G7xyar9gny6erbzlPm9af1kdf/77n3t+eLHWr50tTw511b9CNN6
xWv3odj9OO+zrB7e6lKsX2xV36vdU1u9WdYv83g2j08ND9n0aTg2U1yCqq6P
8j+3fuet95Ls37R4cq//MRxFG2/x6lPzzxVeNPPMRjc9mx4qPOTHwp2u8Jyn
+9oU1/Ro3GCjH4WHXOGRPhU85K3y2HzZ+cj4pL7L+pfp3yr81fgnoycvNMVV
rvxnhQfCON/uO7p8Ht5nHw+nl/X817bn1fJUeMiPhTtd9W093M91P55kH0T8
v8WlW+OfVXEd894f1bju2njIHxU9x2+bPfO9lfhVw/FY1cdteMir8JkfCw+Z
dXe8N9yKk2D5gb3+OXnpKY4x+2Ws33k13m/smHYy5WN0+y4bb99rel7V5340
n2vhIZs+V72PM+1btPGMMytctUrPzCev1jPnfZoPtHjM8LWm+IS8B+G+081P
VnhHds/OODBysv6E+ISsF7L8Q3efsnqqaXxu9y978coqPG3i2MSeV+MG8xwU
uVfhMj0VPGQbn+8l3eJDe6fJ4rrpu2BT/zb1Y3vfLwufLt7d23iDfXzvLv4M
+4Don82/XSvPb/0+PEfwvt78Kv1/Fx8g53GL/6d+zOpwDOfZ/LntU/Zdlu86
Cu83ddf2u0efT/fiIefcugrH2Mab/VBv2fct/jGcAcNdNNxjw+E0ecyP2Xm/
m9+o3vU72n64f7H+s7qf2nrfPfUbth5tHzd5jsYNfiw85Eqe6rtYP1nhKtt9
wSp5nirudNeP0V9VuMGkh7/Vm209X2yVZyvOc5Uf4HdVeOndc7TtO4Zza+8X
bMVDNnxds1uexy0vYecmy9fxvG/7F/dTw1VjnM/1wvsa60er8JBtvsKn0jPn
1/gbH3u3Yus7REedT80eEmcQj2J6vrPz1DSvXt3XG16Q4VuaHzB/Up27t/Jh
PZK9e2h6rur5p/kBO+faPFoeKf6ii6ts9Ckfy0sY7vSq9y633hNRfrsPsvxM
Vz+rcYOphwrHpsun+y5k9FPN+zQ/f1Sef2rPW3Gnp3rmPdreOqvq3o11Ml08
ZM77Vnm2vl/WrSuw/O3Uz5g/MfwBw/U1/C7DDTZcrC7+cPqPKjxk9jEZHrLJ
08VnNpznLp+qryr3EYZzFTu0+/qj8IeNfhQeMuvWpnysTqyL09vFQ2af4LXw
kLf2Le7Vc/e7Kpwr+ls7h67KQ1r/hdXzTOvMbR/p3muEbvsU8V6IY8BzSsWn
qrPKd1V8WD+/Fw/Z+EzlqfqCp3ymeBHGx/ogwucoPGTLL61aX8lX8Hwa/2Vx
wlPpd7Z4w/Rs+0gXx9j63DPvlt82/KuteMi0Z9ZZrcLp3Yo/nHX1VPGQK/0Q
Z+loPOTHwo81v2c4LYYDYzgAzIumX9vOR9N+BBtv8flTx0OOv1rFh/bwqZdS
f+KnvvXGX9j5Jf5+qx1ey54tjz3FMe5+F+uZt+Ihb5VnK87zu+vQ7q+jxA3k
E3pXz+ZnDK/D9rVV/Sl2P8t7rtxDrcKpsziBeCmsp+X9suFwTuUxuzL9d/GQ
t+IYc3/s8uG5uML94HjjH/1036kx+vTccTQe8jRPuxUPucvH8mNm//Ebti6q
d0Mq+bvvQfDeZ+v5tDovT/GQKzyuyMPzqZ13nhoesvWDdM9NRrf4fPU5juPN
n1u83cVDNvwl5tPIx9ZR1gPzAJY/z3zzPuLhc2KN2xw59+Ihh87frerxLO9X
zWOFh1zt78bH9nfbl63+aoon383nZ3zkYz7Z4urqfNTFQzZ67O8TtwLd2af5
eYsD7XsfXkf367oNn9b6rWzeLa42XL4uHnI37qVdbX1PhHweCw+5ip+7fPi7
XVzE+D0bb+vRzpUWz3TfVWQfhJ2bSN+KG8z9a8qH6y51d0fhIW/lEz0b/v9j
y3MtPGSbd8NJtvG2Xsz/Z99nfbjFISY/+bC/oMvH7mHt/bKH6yv6eK3mx8wv
sc6fdTLEBTX9VPiflrfheNuv7d7K8N/snGL+cOv9oMUJq97H2VpXEHkYX1V5
5ueChzzlk7wA153prbuP23rciodsvzvF6TX/UOEhM87p4irvxUMmvTr/ruJj
fdndOHA1zjPv14y/+Y2j8ZDtfbEpXmJVv7SXT1WnyvPpVB6jT+UxPvZewFZc
Sua9rZ86/q37Xq3dy1hfPOvK2C9mfYgWP+zlk32WedS98jBesvMjz+NWJ2zz
bvZs/SlPRc+R/1rykE/OWRnPfTP2zPPdVB773W6fXbXerX9nymeVH5v61al/
nuKwTft0rqXn6b5jfV5WJxC/zDoB62eZ9i2u4mN1I1vlYdxy9HdZf+hReu5+
F+3fcPNsvPUfmX2yf7bq77b8SXUv2e0PrerJrT+UeYPpvaTVM3TnPfc+XfvJ
+L32HD5Vv/Nee97LJ3JO++mmdmLx3tZ4w+Jn2tuUz1Qei1en+Iqr47GnHtet
/i7KWcXPVq97LT1vteetek5ehffvhhda9WPSvzHfa/Va1ftE3f7iChfX9uUp
HoXxN/oqPpaXXiWPxcNGn/KJv0j9eKVn47Pqu6Z6nurHzmVH87G+AHuXoZKH
cYXhmtr4Cjejm68z+jSuNjwK42PyGz7MKj1XfCz/TLr1TVR8uva5Kv9c3d9N
6164z3K/4z1FN09r8UO+1+qmrG+uqzer2+/W8+e7bHxV9851av7W6Kv4JC/P
PqZryTPlY+vR8v/TuG66XzPPQ7+R+tWtfsN+t3oXyepFmf83ezYcm+58JS9k
533zz9N7hKPvU+zexOotrc/a7t/tXGD1HrafTv15hcO5Vc/8Xau7o5zJA7BO
wOis8zE+fN+5Oy/hQ/5W/2zfa+Mpp9WtxY/Z+Gr/quqBYw9mz9Rb9S5blY/l
eZn1ZpV+zI/Zdz2239ia3zD8BPtemxej0y+lrtX0bPHPFB/V6uVsfNduWcey
Na6r+Fhe/VryGN3uC/bKU+0Xj61n4rGTj9HNns0/Gx/r3zF8Y9vvqvVb3Qdl
vVT92pY3MHzC6p2v+HPTWxVXsD7N6OYfqvyz1SdTn7ZP2f2mxb2mZ7Nnm3er
B7Bz5cPnu/v6t7hoGm9M45DpvNu70tPz4KrzKXGtw4f5z6rf3PoIunmzat67
9/KR0+7Hn8r9IONA+hnjY+fK6T2I6W0vH8NJqO5T7LvsfG10s58p7uvUng2/
faof26cszjQ92H39VM+PlX+e5pGOkmfKZ2uev2vPe+crfnKa5zf/zz5l1sN0
6+St39nGE4+CcV1Vl9WVp1vvtLWuoHtfkLia52KbF+vTif9in47hGxvOcJdP
8ISN/14+GZ/8/mVf/frr/77Q3zW84shz0bPjP1POLh/rt7L9xexwihdUrQvu
U8anwgvKeMvfJs6PPNzvurhDxqeS33CZKnkq/t3vMj5VfwrjOsuTW91yJU91
/pryIZ5G9hG7V53Gz9YvMz3/TusKKpyoqn6p4lPFpVU9f4W/tBX/au93GY76
0fpZrWerV+nqZ4oDQz4Zb/hghg+zqo/Gzi+2r6WuqLsPJu7/vls38sHNKxTO
L372xZjPVB7bf99+v+p+np96tvm1upQurmzyrtafPuVj9mz+0L7X6Kv4pH6j
wl/tylONNxwY6qfCweN5lufBKZ5eJU9Xz3bOsrjI+s2NnvOO5YG7uKN8Nzb7
u/kfW7+G12r4xkYnPobhIWS80WPHX/jkqy/54LV9vBjzoTyX+XCcE9ph8I27
eN2xQ8sjWbzatefQ9/LJusi+Tr9heO9Gt/Vl46t1WvmfqZ4reSo/T3lsvNGj
Z9Y/T/nY+jXcJLMTq1+a5vnNX03pxCfcysfOuYZ/aHzs3tz0ZvkHs1s79+X3
OL+2Txkf27/Mrkx+o3O/qHDUjU75Ob57vu7yqerkySd5QuNj9Gk+yvKrzCPl
fUk7b1Z0WxfduIVxe+Jk0/90HzQ7Ofqca3HdqvOpjbf3fapzLsdnXdv7ql0+
lZxbz1/VeWr6fpmd960Ox/DWjA/PoeFjed3pfj09d1v+3Pzw2+eB+36J63R6
LrB9Z3pvRXp1HjR/EjnTBxe6zRf75t7mcz/+sXoD65swPrbvTN9tsbjdzmU2
nnaYe598V/JM3/nYKwnv6mqIk2xy2rnM5OH9bPZf+12zB8tLWx2p+X+bL/td
W0f83pwrLb8xfcfW4iXzw4YDafuF4dEZ3c4jR/PJeMbnRrfzXfcdqMyj2YP5
Pdt/DZfY8HgNH3Uvn+jH+Nh+2pUnv2v4wHyPY+t3Uc+x/6Pksb6Jio+N5/ue
PLcaH95fGP/Iz/Hso6nqls1vVHxYvxE5rY/G+FjfBOfl4X4ox2tlfYX54Uoe
5mnt/Q6bR8sbT/Vj/G087TDr3fYdu3ewfW367vD0fv/o86D9rtmJ4UjbuYDx
T+Ilk+da94NTPllvqUe6HfbeC427zP8nHuj2B5n9k0813vIk1fsC5t/YJ9L1
YxXuffZrxntdebhfzPxqzcf0w/7HrXqu9EP/vFXPzPuxPt/6uK1uucr35nxk
9xrT98rt3HQ0H7uvvJY8RjfcmGvJY7grrB/jOYj5NOtzv90+3vE+ptEt7zHl
Y7gN15Jnysf6dq1u+dp6Zn5gqzyP/V2s907/8pSP5fesjt3WnfVjWj9C9S5h
4u3Mi/VdGp+j/XMlD+2K9Aq3x8aTXvWVU58Zb3ys79Lkod6q+TL7MTuZ6r/C
4d/KJ3qwfrStONiVPBm/97vCZ6+eV8nDezSrB+b9xRTPzfqRp3ysX8/wH+x7
zc9UuDqW1936HiLrRraui6pvcet7GV07rN6f6vKZ2oPNi+nf9tPsv1WfV/Vu
0eduE/Nfuvf+2sdvE05fejLxho23fbMbh4RufsP2u+m6oz6j56cW1z12/PzU
zilZF89dz3ZutbiddpvvMr9tcbvRrQ/d+Cfe4D0v+1INX6Xql1/Fx+49ryXP
lA9xOR5Lz7FXq0Mj3d65mPIx3IOj+ZieryVPZQ+Miyz+tLyTxT82ftW523Bm
DH9gq54rPqxbIB/Dc1glT7e/mHVlxHOw8YZrar9L/D2+T2f3ILyvT7xKvCOL
V6fxhsXDhmN2sb+fuTee9PA3fCcbb3qozq18N7B6t4X5+en7L1bPtvUdmb3y
TPlM33uiHeacZXZl9wW2rm0eTc+Rg+Mr/B+rK+A51/LVhtdn9mz4mXwnl/VU
rGejPwkfy+tS/q7fYP3GNA63c73RK/xDjrfvMj1bv7DlVy3PMPVj9KuVnm1e
jE/kpH3a+C6f6NPGM6/C95gMX7GL42f7o42v7Jl5P9tPTX6zQ7OHrfZMeWwf
pJzxw7FD+y6zZ+p5a35jr9+wPIDlkSo/w32nsmfTM+UxPma3ln+zeyLabei2
L9u+QJxtw82u/NjRcd2Uzyp5jP7we4h13Mt31R87frZ8rM371D9bXt3sv+qH
pT1b/vnoeyuLG2084+2cH01+8xvxb4lDL37U9W/73fQ8aPuF5Su695vde9vo
OeNNP9Q/63utvpp+hjgYPHcbnk93XZjfsO/KPhh9fOalNX3+0/W8005s3eV7
aJ9T/Fg7V5r+p++FTfPqlDN5GONv+Zmufrp5JPKx+4icU7rvDa06f5k+bb1X
7y/YfFkdvs17975yymea/6zqtabydPVjefLqXTaur2le1OS3fdnGW1706Pzz
9LuOzj9XfDJfVT6q0vPePH+FS7l3vkzP3Xs0i+uq8V0+Vd1OhU+4Wp7wsXPf
9Nxt990Wl1rfUO7VPgT+leFiGT6wjU9f/cWu33+93zkfk8fohjM8/S7Dbc54
9gMa3fAZbHzk3MvHcLQMb3aKu2jrwsYbPf6NceaUj+EeH83H+rhNz1157HxK
PhYnWP0z49Upn6790B9W9pPxVX6vi0u2t56/un/v9gFFz+yTZXzIen7GD4xL
ea7fy4fxcxdnyXB1tsrDOnmj235tv7tVnmq+mCeh/dg9ncUDlId5Y+sHId2+
y8bbu4E8z1Z9QJa3t3oVw7cxuvUL2/jEoz/+0jv/4Afvv9bHizEfo9u+bH6e
/ap8r4r9mzbe8AHMb9t4y19VfDje1qPFIVNcQdu/pnyyHgyPpYtPeNR3VXwM
t8r4mPxGN79E+8l9k73TargHHJ/93fq1DefH6jSM3s3vVe9cEP8quFVWr2J0
w7+a8uF5KngLUz75fuJ6WXw7XRc2PvZc4W9vtWfzG1M+8ePEhdsrz6rvqvgY
rqbhA3Tfewp/8/+Jy61Oj3yy37DO3Mbb+o0foTy2f9m9/LQ+weIr4jJV71Bb
PYPhcdl73OZXIzfjE+KnVf7c7Gfqby3+qd4vo382Pv8/e/ePs9lypAd+GeNp
AKGNbks2rV5AA1qEjHZFOtPQcgRCe6Axfg8gyhhzIJI9BEZ3dtCAvOGt78at
uU/xVxFxTp7v/eqS5RQqkRVvnMjMyPj75JYf3b8dnYxzdu895XzZ7XWuO38h
82536ehcn+LnVLxXeIlbOopX6PwKb1DvnkzxnPPd2JzfvR8x9Qc1X+PaD1v/
VHJ+mk7nd0/9tVN+k8alf7Z0tv6g7s339rvrPY6t3112xi8+XQCf7XPZsdrP
svMVbxdum+hovO7RKZ2S5xvfn+WQdEqewiNVnX/2tZXcFP+p+qL0v+rfHZ2y
o1RHJPxh9c1pvM5/+kHqcxR+cubR9C5M4sRm3q3o5/qmPVz8Ky+sd3Z0v2z7
zqQfNC55iv9uXVKe6aeXfyectC5+Mn0PS/th609JL6V9Mr0fU//LL9B84Stu
x6VnJH/tH+EJl3+UflmNZ37nNB7gFL9R78t0dPRdOX6Kzl05n+anw5PM+YoT
Crd5y4/Wt/KJ6r/Icb1nVPXeqjtVvZ/6UPL+3e7b4if7g5R/lJ0m/ZB8Jn6L
+lZUl679oHyx8sJFv5Oz1ld8ah9O83ed/pc9P/Wbuvxg5w9mP77odHUFaYdo
X339/ZQv5az9dirP+DQd4TZ3uATpzwqvWPKRPpnSqfnZ99rdv1N+Otwn6THR
kV0kOhrf6tUc7+5Z6RnFo7Zyvvpd6T+KT9kbiq/KfhZO8pbOtu9eeL9P05Hf
9Cp+NK53lH6uct7WCauOWvjAqn+r303+NV/j6he7SifrozS/7Arh52Td0ZSf
qk849V2n5TyVz6n1yv67Tu+pL0B9YerPUr+kxrMOQe9/ZX454yeK59T8/N5T
dISvKFzZkrPqK7b85HyNKz5zih/N38o56VQ+V3HFkv+0n1H7MOnU+6pTOjWu
uhrtB43X+crv3dKR36T56utR3+irvkty3q57F5+crnvqgdo/2v+yN6T3nsad
1njy2Z3T99rPeoc04/DSzxmHz/hzxmFkp121NzIeKHtS+DYaV/+p5guHquJL
abcI52GLt6D9mX3WuY7T86Jx1UNu6Wz56fzTlEP59VmHMLWf79qZeh8q7e2f
m59S37WVc52LrJd++rueknPqjeRT532rz7v3c1PPF99VD5L53LyntnSEz6z8
b9LJPPJVfk7TKTnnu8kdnfxd9fWo7kJ0ZFdkP2zJWfM1LjtWdpfGp/Kp+Vnv
0dWl6Hencu7qKyQf1RcJn1P3lOzqjk7aA6dwTbt1TztQ46folB2Q9TlTOuVH
SE/KvtV46oF8fzz9X/lZ0idX+cnv2r7LozjA9p7NOqisq1Edvt7XU1w38zXq
z1VdluJ1WkfZvTpHGlfd45bOKX62dEofqa4v6UgvbePPsidfJWedR+0r7Wf1
EatuZHsuNH6XzlX7WXEA3Xfyx6fveGafTvoXmp/xjYrPyL/u3kFQneF0vTo5
dzjSVQ+Wcki/Zkqnvkt0sg9L94L40bnQuOpnune1pv6g4jzbOJK+V/sh5Zx+
sepUVe80jYNJbtP4xnv53VP80qzn0XddtTe68577IXE5pn79Nj6meyrr5Soe
PsWLq/mSj/bzXbuu5Lalc8rOFB31i2n+aX6m7znqfckuvjr1Z7t4b5fvVp6o
6EzzVuVHq/7kbt5TdMpf2J5TvXOR92nWdUv/53nJ+GrqpaldrXyc8lnSP/Lf
hXssvap9KLtd8T3pt+n5mtobuV6qO81173CYZRfpvCvepf4s2b1b/2ibJ+rq
yvLe1L4qvjOOdDf+o7hN6YFTcaSSc9b5KM5ZemBaJ6Z6kqfzg6k3EgdpiuOa
46X/t3iw0nsdneR/u5+3cs57UHH+u3Hap+honzwdf97eR138eZoH2X6X+Hwv
Od/9Lp1f0VGfuPpD1YeuugLNP0VHdWKJs3Gan65OqfRE6f/UGx3OVX3PG1+/
+7EfR3i/wtcSjvGWTsWd//HTnz/82Ndzl58az76hpFP4DMW/xgtf4G0d/+Xv
P+3q//klP6JT+A8dP0Wn5ovOVj6q6xPOW/aVZF4y/YK7dDr8K80XToj40fyi
v6WT/GzlLDri8xQOpPLmHR3VbXbf1eFQKb56tW8i65r0/sipfhnVw+seSfyo
9LszPtPhUOX8Gtf+SbtadLS+d3H88v33q3SmcpZ8pnKe4gHmd03pCGfjLj/d
dwn3bxvnV32m7ED18wo3SeNbOmVvvK37Z3tjS6f05pt8Pt+ztZ/0PnLi3XVx
/qxTUp+4xqXPc37mC67SqfnCGda47k2Nb+mUflAcKevrnuZH41vcGO232k9T
HKHunYIpTqDGpX8yXlrxq+yP7vDq1a8huQlnoOLAyb/qZGRvC/dAeGXyI7Z0
5E9pvsbLbkscuaf3c+3bjMdu6ZziR+OlN3I/yK8/xU+HN5X95p2+SjkLb22L
f3WKTp3T3IfSS6Ij/SA/aNvfpDqNLv+e9QwdHmn6NadwTfNe6PatxuW/C59W
OMZd/G3bN5F0ZG8rb5J0Ko+zpaN7+XQ886n4quRwOk5bcuvw8TSu/bClI7u3
w8udxhm271nIvkq/r+z5jDN0/mkXl8hx8b/1l4Vj09FJf0p4XFu/e4urI3/q
rv9V41N/sKMjfr4eH/gyLr31l8vOvut3b/MOWSdQdeO6j0qvyT5XviDt/7Kr
/tc/rdZv/s3vf+Rf+ZccTzr//A/f7+Av6SSfkoP4qbhlrrviP6XfpnFa2VHb
elH1J0oOqg/RuOjIT9R8veOpfjf1NSi+JP7Vj6n9WfPLrq66O+VzdZ/K3pNd
rXd/ZBelPBMXvcOjzrhTjgt3eksn/fRaR8ltyk+ti+SzXRfd17kPSw7b9co+
yhpP+rlvcx+KjuwZ4RYKf1j4ex2d7n2Bjo78vo5O9gvoPbKik36i5gs3OO2l
xEXXO3pJZ/pdHZ30W7v5ss/lR4vOlh/hjWs830nJutOcv30nLt9Lqvm6d7Tu
oiM5fB2f9st7c/r+SNoVU/mI/pbO9P2pDnddONiar3iXzrviPNt8ZdmHnT9Y
dBQfkL8mf2Qbt5ee1P7UOuZ73JUff1W+UuPlJ7zx+bkeSfa87G3pH513yU33
nehs782n+dF4nrvEgVF9fvb1iB/hQl+lo36r3P9T+Uy/K+9xzde49LP0kupS
tnFj0Zn2IQrXq/Tb03S2eLyn+Ln6Pt00L/NXOX+dTtbL1bj62tTHVO841H2e
eObZl6T3QDW+paN+5Ffxo3HVH76KH61v1neVXlV/k/pfVFem8S0d4SJ2OOpT
OlP8z4qTdziiSV/zlQec0un07ZRO911pb9d+eFo+r5LzVj8Lr35LR/HVp/nR
Oko+qiuY9s3p/eKp3ujqXTs66mPa6g3pMc2/Syf98dzPd+2EjDemX7N9X1V5
c+F3deuY+rn7rqS/xVmSPJXHF96L8Ij0u/XuzPTeT3ujvlfz1Z+uvnLx09HR
e+5pT07fAelwSzSuvoAtHeWttnQSV2FaP3D3u6Q3uv6a9Me/Vfu58DS2dDo8
loxvdPdUrpfG83frHOV35brkO1nvLedun2zXS7gWU3x7vUvSrcsUZzXtmRxX
Pjf1QEen+67UJxpXvEJ2iOoTtnQ0foqO+ppfxc9dOee7Dx9NzvlOt/zTrZ+i
+NUpf0d4U8KVkj7XePee0ZROt59P8bPdP1PcGNWfCJcpcYc0Xusi3ImrODbT
d7U6fJu8R6b4kIn/lnZU3Y+KiwpHbkpH41v8Vd2n6pPSvaZxxRmepqPzuKVT
8kz/tLOf066T3/TR5Kz9sMUv1X6uPIX2c8pNfqj2f2c/5z219bsVlxBOYFdH
NPW7U/5Zt5bfpfhVrkvx87T+qXWv9a13dUv+xW++a6z1zfk5nu8si07xk+8O
Z1xIdCQHraP2lfJ32zhS8Zl0xH/yme/C53rl+FU62s86Rx8lP3g1Xqd7X/pQ
49pXWpfEqb5qb8hu7/yCvDd1j3Tx59RvHd5L2r3be2Qrn+09uNWrp+jo/tr+
rvbz1P6sddzmlxMHsst3T/M7Gae9mydSHGYaN76ab+r6lHNc66v8wqn7TnkK
1T90fd/CwZjmTxVvFD+6Z+Vvyt7Weul8KR6i9dL6Tu2oGpd+29LRftA+Vzyh
w71P+sKPzfUq+orHKm6jvjbxr31S35N9Q1M6GW9R3GYaJ5nS0Xt8hZ9c97Li
P4pzJv1a1+n7WVP9XPtBelLxUuHwa77oS/9ovvz9qRy6eyf56XD/pnnY7h7U
vZ/7RHmT4nMbF9W5Vv3J1Tjt0/Fn9dm9Kv58Kp9yVz7SG1s66sfc4iQkrqbq
oKZ0lN/M+eqXV//OXX46OrKLsl+m+vSzj/htnvu1s7+7+qY1f0qn6xNX/37R
yX7wopP4YBqf0kn5JJ0/Bo7i29/frflRn7vmCw9t2i9f/ePqB1FfW947ipeW
PZl0dJ929U5lf+Z93fGTfkrHT9ePkH731C9Wf00nZ/HT1QlfpaP+lKl8Mg6Q
8lF8I+OBV/svhEsmOuWHqk9W9uoU/1P1wzp3mq9x9ZNu6XRxD/UBqe7rvfnp
6rRTzokflfGNKf6n+vXSfxGd7COY9v1JL3W4oElf8ZltnD/7amu9Er+i8rPb
+6vD/7xLRzgApRfSP1J/aOURSh5v8vojcVxzPOvSc1y4XlM6HX7slE7pVe0r
vf9Vv6f3axLXSzj/Gtf9NaVT8hSesOZP+elw4zUuOsIZEA6PcAOkJ9XXLFyF
LW6M7J8tDonqloXHLr2kuJDoCFcq9UniNSWOkMaFF7SlU/s48dO0H4SjNT1f
2s+Jdzqlo/q6KZ1On9z9row/C9f06nnf8tPpH9kVis9IP9zFNb1KJ+sPu3yc
6hW3fWSyf4QHJTtB+FdbPIoO96PDa8r6gYynTe/BzKfo3UPV0aV9leNbOhkX
zbyV9pXibxqf7s+OTp277n2cLX5sFz+Uny46te8VF1X9ZK6v6FyNi8pPz/EO
p3dKR/aw8qddfVSHO6RzXf2V2/jD1O8u//Sq353ndPtehvxl+d0al3z0u9q3
d/2m5PMune49kSkd6QHZh6f8buGAbePh3Xj69epTkzz/iPdEkn4XT5AcMj5f
80/REX5y7e9cX8Vjp7grpZe2dZ6Kr4qO6pSEiyv7XOPyg9QfketS+aPEdy06
wvnJ93PLHtB+yLqXDhe37IyMD3TvR0xxdOUvaHz7boX83Cmdq+935PzEec44
TJ3H3D/b90Qk/268e5+iw4u7KufkR+/g6NyJvsaTTtVNyb9TX4nsrqv4qNmf
ovmyJ5NO97s5Xn3lwnXM+Vm/muNT/Nj6XdGZynlKJ+Wc61t0OhxU4R7k72pc
uI513+kezHHFAbZ0FA8p/nNc9p7qB+S/bPE5pQfk11e8RfW6U/kU/3flXPJU
/Xb2lVTeOft6OjraJxnn2dLRftj6faf8wa7OIf3x2lepD7X/NV9y0D5JO7Pz
j57Oe+b7Mp+m/ea7H+WZdbZdPjflL/lofCtn6Q3dd13fRI7rfpnSKfkIb7yj
oz6Rq99V/Ey/q9MbHT/CxRI/0/mdnPO+nsZtrsaNVV+q+iWNK4/wNJ0pzud7
8aNx1Tl/63J+FT9Py1l9iJl/v1pH9CkM+F/+6492RNXPFP1pnZLoaPwUnfIj
8l54FT9bnLSuHznzlVu81lM4tOpHe5of4cCoL7Lu2dwP2XfT9T0JvzrHq76r
o1P81HzRF56wfnfKj+Sj78p6s1wX/a76mzo6kk+Ob+/T7EvN/Hvm0xUf1vj2
vhCeQLdenZy1n7t1F+7Btk5jqjc63OktPtt2/lb/qI/vVfaGcL1kFwm3J/uv
s24w95vqllUH2OGGKR6bej7xQPJ35X/JL848vuar31/r9Z8+BdJ++0X/uOyE
6o9If1Pjkv/UPuzWRfgAwk/QPpTe0D2ucb0Toe/V+Cl+pnRSb3R9BMLxy+9K
/Zw4b3VOqx4+923tz9qHtT/Vv/N3nxj/bWsn5/lS/Dnv304/T/1o9dtu6eh+
f8pPqfX6aH6K1l37eSvn7t2Nq3TKzlE+dPq+SYej/hSd+i7hV7y3nLNPKuvT
9D7OFkdC/fVb/K4tncR37fr9n+ZH48Kj0Dsaut+lb0/5O5q/tbdfJWfhZryK
H+E5bPFVtnRO8SN7SfUkW5yWqX3V4cbIjn3bx//ti3tQ/pTsZNHJ8bLHpnRq
vujLjp36EZnfyTj29r2JLR3FG7d4St37FykH2Uvy7/IeTHwV8ZN54atyVh/B
lI7iSNqH6UdoP6efO6Uj+1N+yna9hJer/O8WZ1I4cqk3On/86/G0uZw1X/IX
nq3ma1xymK77r/60i3/9yz0dxZfKL876n5LPFA9QcRL519qfuneuyjlxobd0
Uj4ph/QT5e9/K/lB6Rnth5RPp8c6OU/1Ybefp3QUV1R8SXaC8im6r2Ufbu1/
4YWe0odP2XW5jil/6RPxo/za9L3Fq3mQ6fvRXTyzs0+u5oVPx3vVX7mNP+u7
dI7SrqjzPr13cr+lvXHXv9i+d9DpMb2zo/y48mKSz7buQn7l1g68G9+uOJvs
ENlLNV703u69P1J/1r1Z83V/1e9u88Id3tEUb3n7HpP0ksYzz1v1AFM6im9U
Xf1Vfq7GN3I/p77V7yrvlvwI17roaFx0xM80Llr2RqfnU5/crf/p6Iif7b59
6l7u7ITcD9t78Gr+tHv/K79L8pfeOB0X/bnGn0/lU56Ss+7Nbj8nn1fzaMnn
03TqXuzeqU86U9zFDoc5z1H2a1c/jvCEa/1yvsaFJ6DfndKpPnH14yfOWOI5
Zx9Q8dPheiU/SUf8aDzxHErOHT85Ln7Un7jFqah9nO8sCPejszPv4pn81N7t
cRSnuKYd7of6vPS7GhceqeYLz6fjZ4pncoqO+oY0X/2w8n+fjkNu+yY0rnWs
31M8JOOc2X9ddUfCx0t51nzZzx0/opN8dnSS/7IHMo82lc9VflS/3b0Tl3bL
lk7xk/vhKp3pd23tCr3fp3yc8gvb8yW8nVP3l/BLZY/l+a39Vt+r70o9UHH+
jKeVPDPOk/NLztKfwlHUuO4R4daKzil+pP+lP4X3ontni0/Y4TRO6ahO5i4/
+b5M7lvJJ/d/hxsju13nSH59xS3zHt/iXYiO9KH6spV3U9wy5SlcoO49LNUB
1v/Pd17qe6bviatfNfdJZ5/rHlF/t+Ssc63zJfxPjetcaP5Ub3R0TvGjcZ3H
u/xM5Zz2mOxMnXedC+EE1jnM363xpN/Rmcb5tW+lT0pvZH4qz2Odu7SXundL
he+UuB95vtLuFR3luSSHDv92un/q/KueX/aw3iHVu70ZN57i/XbxN/XzSg5X
8ztTOtqfOnear/H6runvnqLT4UIrr6Q4rfL46vtQfFVynr6PIz9a+qSrh1Qe
P/0v6RntW+kN4Z9r/NV+d9ZjnOKn89/zd7v4Z+4HvXd8yv/K7/qpP/ulXdrZ
Fbn/hbN6yn/X/Hy3seIG2/i84vyyw4X/KftN+RT9rvwsyVnzT9HJ9x9LnsrT
SY+pbjP3Vd1f8st0rnXuxE/ZP3nu6v9r3fO86Bxt6WifZ/6l6EieiT9T8hH9
LV6x3tlRvcEW97iLk6QfqvNY9LMfs1uXpCO9p/Ht94qO4jbT93E6fpRPl1/z
tJwV3xD/0rdbvGjtZ82X/aZ80DZ+rj4O4TBPcSCn+I3Jf4dzqHia8mJpX23p
dN/1FB29pyZ8Y9FR/a3oVP3qtM9FeL/KL3T1nLVPOnlK/9S/83ylffWvf/v9
DWW/VftW9rP0jOLMkkMn59wPmq980DR/JDq5XsKvk/0z3bdX+ZnqE/lfig/I
/5I+zHhanXf50Tme/YDCHcr58q9Vd/GU36R3FVWPVO+2qB5Y95rs8E4fKo7R
ybn6Abv4p/pDc7003vUB5XyNa3+e4qej0+n5jk6H29/Jp9br6ncl/xpPORdu
mOwo7Vu979bFezPe+K3j9L43HnLGx3QvpN/0rcv5FD+n1utp3OmyBzJumfGN
tMeequs7hcf1c8FDvirn0rdJp/T5XZy6q3hH2e9cdR2vwmcWHdVtZj/FFD+2
64ea4g9nXcdTeMjqz9ryI30oOnfxkE991zQ/pXuwwweb4jrexXnu5Dzdz5Jz
yif156n1Uny763NX3bvqb3Ndtv104kf9+11/n/RG2mlPv78g+ag/eovDLFwU
0an7Lv2gLb6f6Cj/1eEgKZ6pPFqte53T9LuLjnBIRF9xco1Pz0vXhys6iQtd
37XtZ9/isE37cDv98NHxkJ/mp6Oje3CLeyn6T78vkP3+p3F66/zm/v9L81Oe
xjG+S6fDj/3oeMhdX/kWR+Wj4E535+vud2n/yO+o+Vs85Fftn+1+7u7lrIuW
HXUaDznrnLfvmOh7PyoexXvjDz+F+5H16ne/a4qH/DR+kfBg67u6c3QVZ0y4
eZkfz3MkfDz1Zym/v8XxE86Y7Hzxr3Mq/d/hIaefKz2jce3n7bs223tN4++F
O51ykJw7HLOM22/fQVAcu7OfM36l9RJ9xQFyn9d3dTh4qmeb6o3M41T8X/6U
zqn0wLeCh3wK71dynuI3XsVD3u7nknPqyVfJWfo8z1fVIUzzVq/GQ045X8Wd
rvOVeu+98JBzP2/Pu8a3eXDpc90jT8e1JAfpbemT6Xua0/hz2mmKn2uflz7J
c604kvK827jo0/ncU3jIW7zZLq6YdoXyax1utuq4ZCek/X/qnZQtvnfeI939
0n3X9D5NOVfcRvZnZ7ekXSe/T/pN35W4wYU/rLxP5++kHd69LyB/JPnRuPJ9
nTyTH+l/5Rm3dovoKB90CsdY+Rp9r+iXnq2+s1PxjdKTW362OMZ1flLOtZ87
fq5+1xYPeWtvTOt2VOcgOjUuPqf3YK3L0/VR23fn7+Ihb/Owp+lM9cNd+yfz
Dtu4qOL8V+PG742HfOo9PsWRZNdp3Yt+rtcW9+O98JC7fFDm64WHLDo6FylP
9bmo777m5/i2f7/DDc6++8Q9rr77Ld7vKTzkLY7xFlf5Kh6y1uupfijRkX6b
4iFX3vYqbrD0ed7jGi/9lnZLR2fLz9XvEl5K1n19a3jIdV/LfznV7/BUPX/X
N9HV9U3tH/nLWb9UcSrVRYgf8a+4sfJEGt/SEQ6J+Nc+0Tpu9ee2P/SUXn0a
LyhxbN724/+gH3SqDyjzfeWvaV0k59rfiach+zbrtJU3L/xh4RIrvqF3rBQ3
7uLDU3kKDzbjV3Ve1G8uPa/+1g7HOPsghKetceGqyX54bzzk2ldbOiXfKR6y
+C86iYOkOpz83Xq3QjhXWzzk4rvodPgVWzxkzd/il2a/c8V1dY9M+02Et9nh
tQpfrvSC4rFTXFPVM2Q9QOoN1QXlePqh2Q+S8yU37XPJp8PlSztT86d64xQ+
81U6Jd/yX98LDzn34RZ/WO8u1fp2cQ/V9SWfoqP1ld8h/P9tvlvjOhfCY5ni
LNX51b0pvSF9K/lvz6nsCuFIbHE+t+8uTXEtOjrb9xG2/Gz9+mlcNPM7Uzq1
voozP0Wn01eZb+3itLrHp/HVDg95+h7ftg5TdT5Zb5D1q9I/nZ3Q4VO9Cg+5
9Pzdd4g63PWn3jPaxtM6Oso3Zf5U/oLiFfX/8z0O5VlE/1XxjQ4PufyXjo6+
a+t/Kf6vOP8Wx7j0Y/plHZ3Ms2zp6Lu28dXSh1kvrd+VPsnzlX1keV+In6oX
Sr1X/z/jTnVu3xsPWedd9U76rin9woc5hR+rceH6Cvc4x8t+S/4Tfzjv625d
tnjIaSdLnlfxkJNP+UGSp+QjPd/hIWff6FU5T+l8NDxk6bFTeSvhg0lvlJwT
N1v7U/FY1Zeewh/+6HjIGR9TX578dNnbU366vqSMW1a+TH0B8juUb818x6nv
UpxBdUTS/+JHuJp6V0Xvkoj/knPKZ4uH3PWXTfubxE/Hv+rMp7i++t2r/GS9
uvq8FCdRHEm/2+3n9MeF4zqVm3B6S8+IztSPO51fVh5Wfdbqo1H8P9er7s27
cu5wp6VXp/jD2Tc35Uf0hdO7pSN+trjBigtp/hQPuaPzNM6z4t7ab9M4docH
pXHFCVWffKrOeUtHeHRP87OVj/yXp+Xzrct5S2crZ62jcOrkNylOnnVxaSer
Hin9DtXXdfyoX/UunXzHaiqfjp9OPlM6iR+Y81X3taVzip8cLznUuUh7UvtE
+zn9lC6vrfEtneyfqvOYefMtblXGUfN3t7heGT/Z4oxt+en0z5TOFM/tvfiR
nLt+ui0/ui+2/Udb+Sj+eUrOW3tD44q/TfuUlQev9d3io271jPZJ1+88pa/8
y/Z9BL2vd8p+1jvFXR5Z9kyul/AH8nc7nAqNX6WTfrf4VHxYffqquxZuhvoF
Eq+4xtUXsO3blV7VOqp+rMNVS/tE93vqgc5/VF3c1g/d0pH9r7jQVX4yrzft
l+/6cKf3WqffEm+k9IbqfLq+GNnPiQ/zUexn+Sl1vr4VPyXXsc77tK95aq92
5yvrXfMcKQ6s+RoXbs/TdLq+0Y5O6QHJM/ExOlxKjQv3Y0tny4++96qcs25c
dGTvafzU/lE/l+brXt7ig+m+7vqV0o4S7scWD+HU+dJ6dX1z6k9RPUn6ZR2d
5GdLp/Ry1nWIjs6dxk/RkZy3dOT/TunUPhSd7n0H4eMpr6T7V/UVaRdt5aM6
H33X9L2Yn9b7zb9L8tH3Zpy/1kv7UHpA48JvkV6a2kVZF53jW35OfZfm6zzW
/DwvWt8uX5Prdcp+Tj9CdWXZ36d6pMzPqi+y88fz3hQ+uc6j5Fl+/fR81Xz5
BdP8b86v/G+Hlzitz5Edory26Kecs14u/R3tZ9FXf9k2H1dyznUXLndnp6le
aIo7cdXvTv3W+afvnR9UfFLy6c5X7sOOjuQ/pbO1N8S/xqUPt/WHqk/exrWm
cQDFo7p4guqvdB63+1n7VviiGlfeP/EJq05ecRXFT7r8xVP+u+yB6TvUJR/h
/eoe39qryhecsnufpiN7I+mk3TK9B3Wfbumorlj6UO9mTu35OhfSh1O86MTB
EK5X8lPySjs8+xe2+NVdvXTXvzmN60oPb+1MfZfoy5+9GwdQfKNbL8UT1Fei
+Uk//dzK5yY/0/hG912KG2Rc91T8R37otN5gW79xtW6nq9O4+p5Rxau3dQW6
x8X/lo7Gt/nBU3adxvO7OjwK4Tmr7utUHraTQ8pZ+m2aB0n76m7+YktH8efU
b12dTOb3O/tzijclHICyn7d01F8zXferdGo/px5Wf6vyocIrE76B5mv8jz/0
z//jpz9/+LEvpuyhmv+2X0wn+Sk8xsQTFp0aL/2VuI7CJRb+gPAhRUfjU37y
u5JOyfnNnvrDD39/x/nqexI/mr+lo35/9XcLDyfPRdatpf+YdPJ8Tevf1A8+
rffTec98fXcvqx5P9VcVD9/i7aiuTDgJHW5PxuG/1TqZ03FR0Zf9qT73030T
V+VzKt477Zvo6r6urvtWf2q8+kVLP3+a9pvvjunVU3SEM1x6I/fhqXWXfyp8
G9WFSt8qb9LFJYQnsN3PorPtwxX9rl81+8SnfaAaT5yEjK/m74qO+kmVH8nx
0g/Kj3T4wOmnqF5X+MYaF95dNz/tH9nDGV+a4l9l33qHW3WXTuqZ7K//Y+Br
yR7rcEdz3YUvoXHhHCpOrvMufP4OdyjHZQ+nX5xx2hzX96oPfYpnXnSEO110
Ohz1rHPIvJvwLafnNOu7rp7ToqP4zFN6o8NpF5/CvzolH+Flbfez5qefmDhX
Uzris/TnFKeu8hp5r0k+8oO0vqq3kT0gnKItHeEESp7T/Vz7SuslPV96IO15
4ZoKT1X+vs6R8I2FX7HFq+9w/JQ3mb6b0PGj+Pk0LrqlI7lpXeoevUtH50ty
072v8at08rtyP2T8OemoPlZ+gfSA6iJER3pP93vm8Tt84ylOafYNpZ2gdwP1
fpnoCK94y4/sMdHRvkp/vLPDn44nyO9IP6XDB35VfEPzFecXncS9LL8sv7fs
B/lHotPlIz7BNv/N53xK7Yeko3HJQfycoqM6c8X9vh4P/NIO17nQuZa+Ut2C
4odZT/jT+PmXfq7sc9ml0gOSZ8q/cMu7fEcXb684jHDw5B9pvOyM2j+1T7Z0
ZF/J/tS4/A7hG6ccuvehlD8SLk3RSX9kiztd5yL3j+wljZd8sl9S8tF4J5+U
f57rqZyTjubr3N3dz5W31Xzl9U7F1VXPr7oRjUu/ncrvbPtZ0u6qelHhG+d4
9rFmHHtKp+bLvxadfAcw/fSu/6j4F85njSt+LjlP/YiOTvatKF6hdZHcJB/l
C7r+ze27kDl/+57U9L2YqZyn5+VpOhmfzzr83A9ar05uqTe23yU5J/3ufMn/
7c5jR6e+S/OV7xCdjD9UvevT/pfy3VmH2eGtbevidL6mcu70Xoefr30ufdLR
Ud6zxjNemnpDdDp+pFe787v9rpRzpyffW87qT5Gcs55hmgfJOGfGe/UOYN47
W7y4p+moXvdV/Ghcdc6v4mfaB/dzl/O27m77XsyWTp33rr6xo1Pvp6vPN/Nf
qvcrvynloz7Wp+Xz0eT89HepznNLp9ZR/eA5rvyy+pu2OOqqQxYd4ayqfjX7
DRNHNOWp/j71LYqO5NPRqfNYfG7pqF9GfWrT71L+ayvnrLfp5NzRET+qV9e4
9o/mqy9M96nWd7ruSaeTT42rH03nK/mp/bzFp8px0enud/WZSm8Iz1b6TXmW
rT7XfhBugOKlWztH41PcrZJP1/cxpaP7QvtkiqtQ4+Iz48bpx8lPn+Ied+sl
/CLl76b2xt992vi//eJdMNV7d/Zt+o8dXlDSUR275LPF5db4dn+qD3RL5y4/
3fcq/7Wl8/R36d0N3SPaD7mfp/bzVD9P7ee6H//S/BTJ/7SfkvaDfrf806k+
2fb3dbjfeb9k/1HZ29r/wgPU+drGTzQ+xaMo/mUny1+QPazxLR3h57yKnynO
WOXTp7gf3b2gfa48tfAe6xxJb8ieUZ5L9Za5DzOPf1fOWe/xqnVXXdYW90N0
tnhHW340rnq2LR35ZXfpdLgxnX2b5+Vt3n/74lzkeIcTpT538Tmtw+nwcCSf
7j2UfEdG9diSj/ypKV5c58/qu3Q/5nvuGWfI+Jv0oeTW4Snle0l3cZmyXyPv
cdFRfD7tqHwvNffVqfjzNG8i/IEcV1x6eg/Wfk57UnbgNr6hfSU+y+4tuyDt
8Bp/u/+Mj6rfFf3002s/iI7kljiKKefUn53dnvykX/CrP/2vX//SfGrdt/u5
9FL6KVpH8bN950LxnFfnB3NdtI6Sg8YV99vSqXXJOMDTdLb2+dTe6PbPNn6u
e2T7/q/uKc0XnrDuBe3DojPFCxXu+rauQPkdzVed+TRf08XfFPeevmcn/Vxy
3uIVK967tZ91v4iO4uqn7PlTdCSfDudqSifH8x68SqeTs/TeFh9McT/ZP+JT
83Xuprivpd+2ctvaLclP+cvb95o7+6f+X/GjcX1XF6+7Gt/Y+rmKJ3R0hCes
fSs+737X3TjSNC66vde299Td+g3dp1lHkfbG1bjfNM7WxZ+TzlWc57txftWx
T/ODNX4qX6lzJzqp97r43nt/l+S8zcN2/Jyyw0VH+W7t/+075vqu7fvsJefp
u+GdfMSPcBuUj9O5Tjkorqs+6OzLrv5ljQuHTf3dolP9pf/x++3ynz/jDGi+
8BiFD6D5RT/7tUVH8ysP9Kanf/eDfWs66hO/yk9+l+gLz0HzNa7+pimd2m9b
PA3hJ2ifS59s31Hd5k/VZ73lR/On9Sp6P+6vdebfZp1M55++V53MX2o9kup/
7upD6efCsXlv/Zy4JYlTpD6dU3LO/p2MH2Y8cFunt9Ub3fnK/VDyyThGxesy
LiR8YM0vOWR97JbOVX4yjpTjmR/Me0p0FI86pQ+796PTfxEujXAdt/iEwqVR
fiTtnH//H77XEP/Pj3ZG4glrftkZOS48rg7vVO9YZX+u8GyFs9Th6+a+0viU
Tva/57j43O5D5aEUX5L/uMUhUZ288I1Tz0z75bd0cvyn9QGf7Q359ZKbcE01
f0qnzvsW11Q4sU/zo3H5TVs6whOu/ZdxM9UpSZ+of0rx5y0OrfKkxd8vPimy
z/qwewc8z3u+d1n7UHHmxFXI/rW8v/Tu9haXSXUCiotu92HJRfFk5c2zrknj
P83ff/5drZf0ifB1r9aLTnFapK86Ohk36PRkykfronHZA1s6xU/qgafpSF91
ceOMr2p8G6edxp9Lvyk+rPtXdkudd9U5pP8iu0h2hfA8Zc8kDlX2CwsPJOXQ
vecr/I28L7Z0tN/0XrbWRXFOxVHr/v6nTwC4v/uBnt9REp1tPEH+gr6rzlt9
VxfPfzq+saWzlbP6F2RvCM9W8tF4xWv++R++32m//5FPrdcWh1m/q7h9rnv3
Xo/yHbKXlH+seRm/0js+ea47e0O/u40flhym725ovL436agvTHpP+kq4KIrb
yD7v4h45Lhx1zVd+fPsOQuKMlXw6XOW8r7W+yhOpXkXj0ifCVdu+j7N9p6lb
lymusuSjepiUc8W1JJ/t/tzibGs89Wq3n4XX8a3nU16VH+zypOrvzniX6loV
f+twF3O+4pbCPRad7bjiGBoXjnHOT3nm716NQ3ZyTjpTOWu9si+j+lAkH/2u
/K/KvwjnJOMYoqPxLT/bdezqzKfrIn7q3Kk+XOcl+zv0/qbwhPVOaPdep/RG
Ryfllni8+l3htws/WXpM9vPT+W7d113+SPW3yispb9LJefourfKzuV4aF53t
PpTeyPndvpIeTv71Tm73XTqP23uh42f6Xd27wJ2cq59d/OS+rf2Z78DWeVHc
TPv/r3jIz+D0pj/1rct5i6v8Kjzk9Au6fupX+0cd3mDGlzLffarvVX0fqjOZ
4nXkdyWOh/pqhVeQdRHZ5y6836Rzet1P4bll//6r+JF8FJ8Ubva2X1j6Qfn9
ru/jbp/XXdzgLZ363o+Oh9z119T5zHfWtv1iqgO5Sif3j+arv/Vun9dWzh2+
t+KT23tW84UTqHHJQfgPskt1X3y0OGHd47VfhA/cyU12i/jXPat7c6o/tV66
f2u8swdUj5S4EB1e1hRXWfzneqWfqPfUMl4kOtKTT9sbupf1u1ov4ckoXqf+
/RpPPEbt/6f6cK/2z07pdPbMtA/3ar/q03RO4U539nyH/9adl7+0Pq9X+yl5
fr9VOZddITrZZ5T1sdP3p97rPZHsv8v49vQ9kTy/RWd63rd4NU/jeim+oboX
fa/G9V1337ko/mVvSH/mea/7OvFz6lwID6r+PfU3JZ9Tcv7W8b1P4ep8Hffp
PB7y3fr2KR3pjbu4Z90+F06a9FL2vVYd0RbfaYsXrfFpvEI4BkVH+kR4d9t+
TMV78z5VfLv43/bbCgdJ98ir8JCL74x3SZ66F07176cfl3UC03ft9V6P+ok6
POTkv/PT0w+V3KY4q4n3m30QGq/zlXb+Fo/3lD6Uvy88QNWr6Nxt8WxP+Smy
b6fxjay7yH149d2fp/zBTj/kekkOPxc85Om50H0nfaL58sumfkqH87PFQ+7e
N0y/o/aJ4qu5DxV/LjnnOm7zNfJnp/mL+t4OtzbPhfTGU3bmVTqqt3wap3eK
h9zZY907g1196VV7fvtdknPmNbJedMqPxqfrdVfO+bu673Q/Csc44wwdTq/u
U8Wfp3nw0ifTdyU6u0V6VX634gCyczr5pJy396n8wS0e8l0/t/zTlE9Hp+Sc
eMii08V/7sY30o+uvpvtO0F36wGuvq+t/Sx749Xxui0ectcn9V7xwy0O5Pa9
eO3Pp+ncrZPp6r5O5XOfxkN+Or+8jaPqdzs8im7fdnkZ4X5cxUPe4mOoTiDP
qfpWEqf3jd6XOMZv8n0ODzn7YnK8w0POPpqOH+Ehn6KT87d4yB0/T+E/fDS8
zS2dOs+JY7DN653CQ9b9uMXHKDtZfsqr6wo+ev1G2o0/1/qNV9eLnqrnf+/9
c2o/qy/jW9fP9f1pj6V8uv6jrZxP5R269+sVJ1fe6ipusPDE7uIPn8JDzvyX
cIy779J6ZTxK8fnteilfOY0/13fVvzOuvsVDFs6M/IWik++nC4dK8Qrh8yQO
T9bXJb6T+qM1nv3IHS5x0VEeSu/X1z2edWXZN/EUHnLXZ62+MOXR5M8Kj0h+
q/Ke+i7Nn65vJweNn8JDTjmU/3sXN/gU/nCHq1znLevrnsJnvvpdtY9TL13F
Q+5wjNPPyvG7eMiJH5v1YF+v9/jSL1Ncpcu/6x1zxRvze7d6TDgzXR4wx4Xz
KTmL//re9BeEKzjV/1M85NyfmQfv8NXfCw858xqqk9/iKqedU/tN507zNa4+
zS0d4TOnfK7S0Xyt7zROm32vWzzkbfw594NwgVQfKHybzj/K89XZt2mvCt9P
67LFHz6Fhyx7XvtE9f/bc1H/TvzJp3F6T8UTZA9IvyWfFSc/9Y7eq/CQNV/n
QvtH+MPKU5T/mONX8ZD/GDjM4kd0FJ8vOzXpaP8rb/J1e+xLOef8knPiIf/r
336/gtarsjfqPp3iISvuITmUvfIUHnLWU5V//XXcxS/lLz/uVfixOV54Hafw
kEUn+6rqHqlzscVDTj9R91Tqmfpezdd7EHmuEw8558tfm+IP53dN7YpTct7u
w1P7ueRY90XpSflTsvMzH9HlLxTPl95TX0zid/30/Ysv3zH8ueStpvmmtKuF
B5v9O6k/r+IhKy43fRep6OQ+UV5giodc8lE98Ok45Gk8ZP1u9qdMcZslH9VF
S86lB3JdND7NH13FVRb/Wzxk1Q9v+enwXXP+FA+56Gi8wx/u6AgPWXSKf+Eh
K/4pOvJbn8p3V92X7Ar5+3k/lr+5jbdI/zyFh7zF6d3iKieeYe5nzdf3Sr9J
b4j+Vj5X8ZA7fq7iPEs+HR5y8iN9qPpM2YeKNwpXVuPd+5Kn6VTeU/6s6pyF
S3yVH9HJcfkXr+JnKx/5Lx2dp/aPcAPy/dCi0+E3pp2febfsG835Gtd9kfWi
FTfIOFjtE71PrfhVjpdf3/mhHZ0a1728pXPqXSfFbTRfchC+zRZnqcMRzXyi
cNvqXkm9p/kdHqn2s85F0u/o5Py6t5RXnZ4v5cHVD7XVe1k/X3EV7YfcV917
9Ff3s+hkvdY2vi09efW78h030T+lN+7qsU4fJm5z5gVSPyveKPloX6Ue0/7R
etV+0PuY2v/qXxOfun+FRzqlozyp3ukrOopzbvGO7urnoq/56gfROspuV35h
i+M0zft0ekzrKPtNfaPq7ys5Zr1Z971Z15H0q09Z+Oqik/x3dTW6j5QHV72o
7k3tc51rnV/tB637Vf8i94nWvXufNMdlP6tOT3ajxpUPnb6vWnTyHuz0s8a7
epKrdDLvlvO3euMUP1N77Kfv4Hy57lv7/Cn7ufvdq/az/IK79rz4nN6D3X16
lZ+pv/C0n9LhIWecWXgdifeScaSsk5FfoPHTfkrqt6txpPeKH3Z0pN86Op18
Ss5bfrZ2+FR/Co868S7SDtG9o34l6WHhAHy939n19qqDuktH3yU/K3FxUz7T
OFj69flOd87f1geeko/O9an1Knsp67jSD0rcocxbaTzr/LOPIOcLZy/zmyVn
4SRLbqnnq86wo5P7rYsn5/yst+zwE0RH94X8ptN+t+7lXMev10d9uT81rjpY
ze/qY0Un43tb3KRt/kJyFq6R7q8tPqfOo3Apu/Wd9oMoni/66gtQP5fegVId
gvxixU8kt+zLqPyy+Oz6PXO+7IQtnY6f7Eeu+VP/q+s7E/9dHGZ6vrb+TtKR
n6I4ldal6GfdmuSc87tx7Wf9bo7X/hT/6TdlPijvF8VnpD8TZ6nT5/KnZLd3
8dW0zzUu+3Obb5XdWPsq5Vl20fRcSP8rHiv9/LRdp3HZCa/iZ0vn631V78+P
xtX3/dHlnPpZdk7at3f5mdJJfa77onvvMu9l/a7snC0d2S3Se9v8Rdd3n+uu
eLX8ONn523dCZUdpvsZ1n4p/+d1bf1B+q/zcbVzi6ThSrnvdm7LHdN8JJ3na
H9TFaWVv6HsV15I9IDl38cBpv+HTcT/l3bb9j913dX56R0d6Y0pH8cOuXmVq
N3Z5xjrXJc8616fylVpf5VtVz6O6r45Onser3zX1CzR/u28T70v8dPkd8VPj
mW+quJb0quoHkk4XP89xxTPLbki8ROEJv8W1fveD/viXH/T9dz/S+cdPf/7Q
0tH4KTqFI/wmr//7h/39/97m5239vmPfTUfn7f9/pjOV86dT+T9NR/wIDzPp
fNq+v9nT+V+//2//5vc/7PvPctZ80S+90/EjOt0+kX7o7OdpnHl776h+suaV
XAt3YivnzJtXvdPVPP7V+o27dQWn6jem9QmqH3uqvuVVdeZTfkpuqv/Z0tnW
i2b+a1vfcir+fErOyU/6QSWHU/rwrn6ucfEje7L6AbPfUPGNfN+t5JPx7e5d
DL13ljgMyY/iM3pfO8d/itv7Zb4p8QpER/yoH1/0t99V8hTObZcfkV7NeJ1w
XzN+qHVUXFH9rRrv5JPz67uyH3yKj1R2heoi5BcIfybj8JlfkB6efpfwfPSO
1bTOP+PAOu/qb8o8mvZDfWfma4TfuM2PZ9y4+Ek+1Udcej7jSOWXKQ6mce0f
5XmVR0u8vuzvy/Or75U8tT+lP5NO4kamnVD0c1+VfBSPvSvnp+nkuz+JF7fl
J+OcRSf9FM3P8br3r+7njM8kPxUnzz73+l2N67vUR5Pzs05e/kLu/64PMeNg
0sPq68n7peKKdV+k36fzKH3YvRec50v6Teuida/vV59XyiHlX+OlxzQ/+5tE
v+tnUdxy26c57bsRzoP4lH7Qumy/t+jk93Zx0RyXvbSls+VH39vRmdbzd/JU
vLern79Kp7MT0g9Vfa/qHtOe7+oZpD9TH5Z9nvot+2rVh5vf1eESZ390yS33
Z52fNz4/vw+49bt1v+sdhOLvje/P+FFb//3r+FG/+0Gen+PPWzrip74n83p6
10P64en4xtNx7Fq/ivPXfK2v8s7CVd7mUxR/1n5InOS3+IPp/+LTAn3Jj/gv
+jku+jqPJf9PZP7m8+8K51nvfib9WhfxX/ok86Tde0l5v2/r1bV/NF785bi+
V3KWnZn6v8a1vrJvi/+MnwjfWOO5z4v/LZ3SU6qjSD9CfUx1D6V+E06I1kX6
QfeLxvW9mt+tV+6rvE8zH1d6oujndxWOvepYNC7/VPNLzqX/JOdun2i8iwfm
fpDdrvtx618I/2GaT6k4jOxPvbuk7xId4Vt29b1Tf7bLD05xTqZ5q9N5WMUt
5V9v45+aL3t++65NjStfoPfyan7iBqi/qXuPJv2dXC/FM3Xf6buUf1GeQnWw
mq9xfdeWTvceovJHquuWHJKO4sZX5TPtA9q+/5hxttoPnRxyXN+r+ZLnVm7T
OHxHR/yUPZ9+xNaPKzsy6766dxMUP1HcaTpf+lbr1emZuheu7kPpqy0d6ben
+OneVdnKZyrn9+Lnrpxn/RGf7czCQ5Z9rjh29qGov6bkpvr/nJ/9O1fp5P07
7UcQnVP8aFx94q/iR/l6zRd+79Ny1j6sd0MSJ1z28913Vd74+vx+RMV1ss4k
9Yn2p+QvXJ3tPhf9U3SEL7rFPUj65ceVfkt/M+207I/O3835id+l+gfR0f01
rYfR/lcdlOri9O6P3k079U7Qlk7VB+q9m/fmR+Pyr+v9AtXjpV4S7lnuk8Rb
mOKmik7WM2dfee4f0RHeiPjRfNEXTrL0hsbVz5t6ptM/Xd1pJ+ey87d0NH6K
jvqwtC6Kg3W4Ol1d6JRO1oVO8T06OuJnK2fpZ33XVv+Unkm7Qv3pGtf+13zZ
A5LP9pyqfkD7sKsrSD717p7WS3XpHR2965f7TffCVs6yi+7adR0d9cOesjO3
70xN6dR3be3np/nR+NNyvnqfPuWn3JVz2TNdnXnqPcXrOhw22Q+pr+SHvsp+
Lv+07JTyW6uvRHhWeT/K7s3xzC/kuovOW97xSz9aelv+uORQcks+NV+4apJn
+lmn113jwjMpPlM+KYfsAxL+29Se3/opW/3w13jd+8RFO3s+7RzRSRyeip9r
HwrXLvezznXmhYVLmXpP+397vxfd9LMyvtT5iaJ/yt5QvZn40bjwObd0tn60
cH7kX5S+zXtZ43Uf5X57209fvjuscb0Lc0rOwuWTHISrr/nCe9nSOcWP+tNl
b9S9nOur+1p6Rn6f+BQuvc6v7P8tHcVJdP9u7Q3VKcmuU74v+8RLnrKf65zW
9+W7vble+Y582s96zz3jANoPol/zi89uvsZ1X2gduzh/ylO/W3Tq3nhbZ9PJ
+SnnOt/Vn57r2PGjcdGRHLSvdO/n776XPS86+b01rnxByT/9lK2ct/tf410d
5jQfvb0H5Y9M45BZ/9n1SSn+kHUmT8XHtnEk6W3tN+3bsn9yn8j+nOahftrH
/aVe3dpjp+w6xY2f5qfWZUtH76cnLsQp+XwUOW/t+Zq/paP7UXKuc5f6Wesr
+kXn6ncVfeEM13mvc/yrP2mJX/9ybyeIjsan/lrZgfIH5Vdm/LO+V/fX1M/q
7p28F8oePiWfnC+7rrOH9V3KI+e9XP2bUz83+/TvxhPq/ti+eziNF53O56rf
JO2N6X7r7tltPErj2ziSzkXWE27jY1fpqP6ko5O/u+VH8zV+Kl53at23dITX
rbzeqfqfLR31x03t/BrXOd3mGbd0tv7R03VWqs9Rvlj5tbJb0v7X+Sr+En87
+1irH1P9s0U356tPfEun9n3HT9XtJ153R0f98ls6xU/2q3Z0cjzpVN+B1iXl
/LYfvmvp5O/mePURZ3/Elk6NCxdiS2fLj+yx7b2jd3Lv3l913vXOwl05J45K
zi8+Evdmm6eWHaj5sqvLn835p+OH07hNF+c/3TfR1aUrL3O6TuaufLb86HuV
T3lV3ftWPinn8qO3/MgPeko/l96o/Z12tfRY5jW6uLrWXXaO6OvdwIpHZRyg
7KWMG+R4xW2STsbTcr7G1ac/pVN8dt+1jUNO81/KS+pcTPWY8oNXv0t4xVs6
FZeY8lP8q89uuj8rLpr7XPx0cVGt+zTPuNXPXZ5R+0px4+l3pX6odZfeUJ91
hzee+0r1VPn+eMbxhMOZ48JR3NL5Oh7pl/WiW1xx5VW79+lSH4pO7pMa7/jJ
+Xm+Kv8uXN+tnIXnc5dOxY01X3iYWzpTfvLd9u1+TjknHkhXtyO8I82/Syf9
oMTrSP1cekz5LNHp9r/OS+q3jPMUrpr0mOoZrvoXaScI30/6U/on8VKy/jb1
tsa791KF55Dj+q5tXuwUHZ07zVf8WfxknL/WReOJf3WVjvTbFqfrFD/SD8LL
0rsDRUfxoowPa3xKR/0IRSfxfErOqvPs6tA6/6vzm/TervoOEse48iY6F8I7
Unzs6bio8llaR/npT8dXhe+6pSM5b8+14vPbuOgp+Zyio/de6/un73dM8ykd
3qbGhRus3y06f2xwVouftGc6fvJ3hUNbdlHmTSqvNKXTvTMiPFLdI7I3Mr9c
+k32WNl16e9M8VS794hzXUoONf7n8eH/zy/qi+QPis7VdyX0rnH2cQifVnaI
xsWn4gMa1z2l+i6ti97l7OjnuL5L8xV/EO5xzi+/VfZq913T9zK670q8xK2c
hbvY2ecpB+H6ik5nP0/9C9VXbPMp8vvkl3X+keo0ko7oy76S3519E1Vv+XR+
8Gk6whXRfSS9rXHhymp++R3T9xmVN1FcWvS7OEyOX42LTu9B5Qu6eLhwD6Zx
dcXDr8bnu/rwLp/SfVfO7+LMV/MOyU+tb8b9Ms+iccXJp3RK/2zzRxpXXFG/
q/fatnTET8Zt6j666n9l/ZjwIjSueyfjKl28Je/ZuselNzo55/zM92V/aI6f
oqP9rPyj9sOUn+xDkd7Ic6r5U33e0RGfHZ3MI4jOVs7iU/aezpHssa0dIryg
p3F6t7gffyn4Kt8a7rRwV7a4Q6qzUn21cKKUZ9zikHx0nLGOTtdHkP71FB+1
O+8dHnLWq3S4ynkuSn9N5XAKD3lKp+SmOMkWtyrfkUm/WHnkvK81/nT95NP+
9dN1qtI/woXbrq/6lU7hGG/rybd4yFt+1Kf2NM5z9m92uNOn8JC335W4Q7Uf
FBd6Gg95itOb9ob63UTnLj6z3jVQvFR4aNt+221/X7cfpnjI2/iw1kv32qm+
vOwDqr5F/W6Hgzf1UyTPb9Wu6/qYtvgqwlve+gtT+7nDxf0ocu6+S3Le0rkr
Z33XtyZnnVPp58TdLbtU9u2r7NWt/azxLS7T1b7y6fs4T/e5b+koT/0qfqb3
YIfvvbV/pnZFxs+n9oPs0q39PPVTuu/SuPTbt/J+2VZ/dnG5u++baFz1tNlv
lXX1Ga9QXWtXv6o8YOa5crzqrxL/uX5X/QLl7+e45ksOGbfMOvm081U/I/tQ
5/EuTu8WVznrpqb4V7leXf/gFGes6zfcvrukcX2X5NOtV+YdhA9Z+2aL05vv
quu+u0onx7t64/xdxfnVL9PhfyrPONXbWzzk+r2Ug95f07nOeGMXv0393+Eb
676WP97hIShPPV0v3RfiU/fCKTxk9VnLLpriGHf9Gjlf9VQd/p7o6N7s6NTv
Vp/IVM61H8S/8I1V16e6slfV9elcdPmapJO4fGW3iI7wclPvde/IqH5b95Ts
yavx8M5PmfqDaf+LzvadU9mN2g8d7rT07TSfLn2u9e3slg43L/t2U86n7LGP
gtO75afDqdh+l/yjKa7y3e+a4pxM5Zx0VK/V1YWq/vY0HvKWny0+s/SD8HXr
XKf+Ee7xFqdX9skWV1n+suK68itLv3XvgpX+Fx3Z1bLrpOclB9lXV+26lL/4
6fzuu+89bf1cybn4T/1w6l3arV2n+1T3vvLvqot4Ws6av8Xp3eL9nv6uq3jI
iX8yrZ/Z8vOXioc83c9b+SgudKquYPuu+jYPsvVTtvmUu/zU94qO/B3lT+V3
610V+QUdbvAfL+IPb/GQ3/i8joecdfjC+9V84RILj0J0pnjIyc9WzklH/J/C
o7iL21D4yU/jIdd47Z/63ToPiQ9wCoc/9Ublu7u6tT9/3r/ET3hKzldxP5Q/
ultn3t0LkttfWv3z1fhq+lPTOpkunvZqOec9+K30lZ+Ss+rZpDcynlx6pqsb
yfO4xbNVHkrxlrv4w5lP6foTu999LzzkDqc36Whf5f5R3CbjhJ1e1fp2+ZTs
u7wa771LZ4uHnHHFjh/N1/gWx1j1M6KzxTE+FbdRfOkqP9P769R9KlyU9ONU
l9jhT57CxT2Fh7zt4xCOxHvjIad+S/pbOlr3U3I+hT+sOlvNf2885Kt0Su4Z
r6tzO62P6nCMk07iadS4+luFg6F9pfcOMg9V+zb1ZOZ3hGOQ+1+4HKoXVV3W
Vq9m/KruKcmtwzHO+szio74r65ATB0m4x8JxSrys7G+a4kFJz1+t83xvXGXh
19W65jnKdcn6kxzXudvSkX57FT91PhWHz/hw4vRu8ZCzbv8UHnLSqX2f738J
90b+TumH9JtU/7bFJU69V99b57DihK/Gs9V43X9v+uN3P9KRPi/55Lqcih8+
jYesOL9wHXXuZKc9HRd9ev90uL6/+CTAHtd3ig/cvS+5paP3Jbd4yHV+c9+W
vk5+anyKk1xyq/0jPGTlcTr5b/GQZad17y/kfNlv8vvEj+xz5dm3uNnyB4Xj
JzkLt1bzOzzkHH8aD1n+0V085Ks4vXfxkKseQPNlJwsPWe/v6B7scIxrfq2L
8lxTOvW7Ou86d3r/XffgKf9C71nrdzWufbvNWyleLb/sLh5yhwMje0P6Ksc7
HA/hJ3+reavs95zG5bZ4yBovvtOvUZw/63KzjjrjEvJT9L1Px0XTn7qKh7zN
X7wXHnJHZ4uHnHW8WzzklLPkfwp/eIqH3OEGa99277UJh3ZKR/G3qXy67xId
+QXd+ztZh6P7osNDVj9pF2/p6iG1HyRn6ZkOF1f7p6NzGqd3uw+/NTxk8XP1
nNb4VM7Cr+7WS/at/EHZGxpXn3XXh5LndIufJpzhUzhsp/Hc0k95FT9Py1n1
1doPuX8qDyV7VfgGwmUSPozGFZ95mo7iGE/xk7hPUzqS8xQvWvUYV/HltnSE
M/wqfjrcjHzna0on+0c6ftSH0n2X9EbWadd81V2rn2J772zvr9JXyf/dezD1
WN77Gt9+V937yb/kvMUVlx7o+qpyX0m/ab7oqz6ko6Nzoe/K+eqnEz/bfrqt
nLVeOo/aP1kXmvg2eY9v7Q3xr/nKp0zrn5OfKT7VXRzI3M/TfkPhkao/TuOi
s5Xztu+jwwG7a5eWnqq+tPJTdB9pXP2YHZ2PZtelnjllH8pP/LnZz7J767zc
5aej85Scr9rzr97Pd79rq7c7u66zx+Sf3rUPc7761LZ0dF+8Wm9Ij2318109
L3/26n2x5Uf10t+Kfr4q58Sx2cr5qf1TcUnJeUqn42eqxz5aXHTrj2hc+N5b
v2Zrzws3WPFJ3Qvyr5V/yT67zHvmeEdH90uOd3URiXe67QfXOzUdPrz898zH
aZ9Ij2mfC3da697hWiuOpPyj6thTPwgPRN+r8YpXZN1Uzc8+IOWDsr/mKq6O
cBu2dVCqf+vimbmvOhz1u3ad4pn1Xan/pU+mcZvat9pX8tOn77Jl/DDHu/hw
6gd9V9bXdXU70p+p35L/7D/KupHKt17Vz1M9r34l1bFoXDiiWzpbHEjhK17l
R3UFygtM4+oZ56/9fyrffYqO+gS37wcJj0XnvcMBm+abVJcr+tv8YPdOStot
0lfS/1094fa8S2/numv+Vr8Jf173aWcnbO2Nsls6OvJntR+klzTe1UFN6dR+
Uxxmy4/O+1N0dL+8ip+p/fxzlXPZh6Kj8769lzV+197o3qc4ZW9Ij8kflN8k
e1h6Kd8lKf9I++EpOV+1xzQ+fee35KA4mOSc/l33rqLi0lr3af3GVbtOv6v3
xGV31f6Z7sNOzhnHEx3513pnR/M1rrprze/iG9PvOkVHeeSn+Tkl51et+5aO
4kipb6++qyU5TOslOtzpbTwq42Md/+Izv0t1IPW7uge38lG8bhuP+vr4l/qt
9lP15xaecPmNNV593JU3evuez+PCJdb4lo764otO4T+83Q/GAdb4KTp//KG/
/e0c/eHvP4nxN99xvnAMTvGT+BhFR78rnOEtHY2folP9SCnnDs8z+9mndlSn
n3Wu812G7D9K/DTZgXkuXiXnt78t5+34VM9nPjfvQb0/Jf35VD3J1ThkF2/J
OKH6Ml71XcIZflXdzlU/RXHsrXxO0ZGc79YjTXHX0+/r4vxX+xbV36c+1mmf
YPUvi07Feab9zuqv3PJTcQzFl6b9j9kPm/UDKX/ZmfIvVId/NZ6Z8q99qP5Q
5SW1H3JcdKb9s7mfE29h2p+efbjT7+r606f9xXoH6qPdg+/VB7SNR3XnqPhU
PkX9p8KlEU5s0hEuUM3v8IIS10h4QYqrqG8l43hvesv4HsIz0fyf4o981nvq
6+9wmHNcdMSPcHSncu7Wa7ru2j9JJ/GXNH+6n+/y052Lko/kXOdQ/l3O17hw
tzRf/ovqgqS3Ozwf4cZs8VWKTp1HvR8qOVyt589x5f2V51W9UOKN1PzESa75
JXfVqYpOjuf80j9dv5XqEnM88dNUp51+sfDPVT+gvEnS1/nVfJ1r4ffmumQ8
Nsev0sn4dslduIJP8VP2WdrVWhfNLzmrTnVK5xQ/Glcf/RRnpvSk9lXGsRPv
NO9fnQvlfYR/+6q4aH1vxecKl0nfKzzGU3HjU9+1lbP2g/Sw5PB0/PnpOK3o
5H4uu0i4rDle+ReNK18jPrf0az98gsf+mz/8uB/0u8pnbecLr1h4aHWv/Hmc
3s/veNa65O/qXcvEi0760gPClZWdIzyWu/nElE/qpdqfOb7dJ+kPZjzzz+NA
mp86L/Vd0quaL78pz0Xxr/ka1++mn6660Fpf6U/h3Ob+r33Y4ZvlPpQe3tIR
/3kea722+NJTfmq+xmtfZt2L8j7lD2a9k+qiu3WfxhOER6E+yvou1ZmoXzXH
xaf86K5vRTi3KWfFGbJuRDg22f+o+nn1QwnfMv3B4jP78UVH8flpPvFVffRd
3Lj2Q66v8h2Kq2hc6yXcVMVhuv5Kvdv7VFy0w+GUnDWu/s0pHa3Xq/jZ0hGe
85aO9pXsFs1X3k12keZP+anzrvmnvktxvKf50T019cvq/Rfh6nfvAqhesavf
ntLJ+bpHOtzv6T6cvi/Z9ZnKf8n53bm++25mjSed2oean3qv4vBbOlN+pnKu
9So6p+Ss+0vxN71v9fR7Dd07Dnlvqk9hiysie17jp+gon7ul0/kvT32X5Jy4
IjVf7y9v3+9Q/36HH5v+4FWc3vzep+moPnZKZ9pfPD0v2Uec/lHy2eEnlD/S
rWPOzzqrpN/RSbyX7Bfo5Ck55HjRn9LRd9V4J+eUp/jUfrv7Xfnug/rsMo6x
5Ud1L/Kvt/eO6mlfdQ9u6Uh/nuJH739pPPHqi5+p3qh17969yniR5m/pdPtZ
OL3TczE9px0d2UtP72e9x93h6uQ9rrpoxXOm+GbZj5DjwuUQP7KLVMfb7ecp
PnOHT5Lj2/cpal3zHtR8yUHfewp/T3bdlk6H1/QUnc6ue29+3kvO0/P7XnK+
i6N7is5pOU/9i7t0rsr5Kb+pk4/6/r4Vu67iqBn3UH2p3gm6u+7CO+3289V3
ZE6d0/fWz6f2s8aV7376fG3X66reOHUP3r13hI99at238ZZT8botHdnDoiM/
a6s3nj7vssO7eyTlIFxTxZ1Sb5dfrPr87EcoPd/haOW47HD1O+R44gKlHDRf
9Lfy0f7Z4lpn/iXHpzjYqkNQfFJ0VI8hOagPXf74R4sjnaKj+paPZtdpXRQP
OR2vU/9dxkNkT+peUD7u6vtceS5KbpJz9udqvvqtEm+2frfyVvUdb/vL9Evf
Zt+x5if97H/Pc5fzf/Wn1fz1L7+kU+PSS0/RKfmkXs36tC0/3brf1Ru5n5/W
G9ID3b2f95rider/zX2o85L9jFlX0OmTKe6u6hYkT9kzOl/dOZ3SUVw9z/td
fpLO2778b1/M17jsn84+kR07jRtv7XD5NdrP3X2R3yX5yE7eyln1vVM6Ha7p
lp8tHe3nKZ1TchadDj/2afnUeOLGdHS6vu+ur1z6oe6Ru/ey6EztjaKjcfGj
393SkTyndQWdvy/9pvcX3lvO3bp3cq59VePb/KPiG1oX2W9P+1+6LxQ/n77f
rX2leHiNa39KznpnebrPO35OfZfwY7fvPm/lo/Htd6Wcqx/tlHxeJeen+dnG
k1UXcSrOv7VXNZ54wl2c/6k8Wvcutu414a4rDyJ8VNXrSj/LH9S+FZ6w+q9V
l66+8qRT80/Ryb7yNzl8iQNcfSj1u9knrnHhQqj/vfjMceEJi47Gt/xoXP07
ml99v//0CYDgdz/sd+M8JJ3CIcnxDidh+121n//5H74/ab//Id71HesDt3pV
efyMI3V9o+Wn/Pl+0i/P3Sn5nKIjfJJT/EzfY+3sENU9bvOJU1zlrh57O657
RHHLj1Yn0+Wt7saNT+et3jv+/Ko6c/mDOd7FAUqPpb+scfWZTumUvyw8Yc0X
feFuZTwq8ykZf5jS6eJjGX/u8mhFJ89R2ntVv9HVq0/7JbffJfze2lfKD2b+
XXSe5qeL82c/xTbvsD2nnd6Y6tVvra4g6ze2dJRHkxzUny584KKbdqPwdrZ0
NC7cmC0d4fxofuUFVFeT6y59onHhdZQdnvlZ9fVnfKOLVwhHSHWemn9KzhrP
3y08nJqfcYZT+2e6n0/zU/sp59d4xq9qX+Y9qPmKz6hPP+sqy/7PPEWHl6J7
J/3Nqh/o6nOUv5jm47q6xPR/t/pZ+kH4xsIh17jwUjS/+Cs9r/7E7DsTzlKO
C98454t+jevcTd8PKn2YOGbCRenem+vopH/d6RnhRCUdjZ+iIzmf4qer5894
+BY/LfHrKl59FYdN7412dPRdRUf3heRZ/64437/+7fdfaJxM3dfat0U/cY+f
iotejY8pHi57oOhnXFF0no4fnoo/C2829X/WU6U9r3fl3jsuWnHyU3JWHkf6
rfZNyaHDQ9b+0e/epZNx/mnequ6t3CeSm+bLbtc+lD7JPE6Ht7zFxU2c5NKT
WvfEpyq7RTiosuvq/2ceX9+lvKS+K/dnnZev4077/a9pH5/Gc32LT/VPqX9N
OORaL42XfZn4umWHpL+T92DZCXr3RDghRVd4++l/ib7GJX/Nz3xQVw+g78r9
nPzou/JdIdV3CT9W56urU5LffTeOJBxgjQunuvMv8l7Wuyqqb9/6m6oDlHzk
18i/U9+l6HTv/qQeK/mozzH9xw5vtuiVHO7GezNfkPLXO3fqs6i4Ssb9VPeS
/S8ZP8z5Gtd6VZ4i8SoVz1He+evvkvi9NuEYZ95E6z593zP7PvROTa6v5JDj
WWc+fedLdDp+kk59l/IjUzpaL9HR+5iS/zQvJjo1rv2g3xWdKT/d+57bfF/G
8br9f/V9UuH65jrKX6h/p5+yvUe282s87Y2OjuI8Xb9Yt0/yPdaUs/LpHZ3u
neWn+OneI5Z8RKfT56IjnLekP+VnqzcqHzF9j7iTs+Ki8tdeXZ8zzbMrPyL7
8FvHQ34a51nvEXfvtr93PUPl43KfyI9Tfk11O9v6/1O4Q0/jIaefqH7VxOlN
XOIO1zTrNq/iBgsPuasLFZ3a/+rD7fDGk84Wt1z9yFfxkHPffjQ85JSz+jtO
48fqvMtfTnyVbw0376PVm6m/RvpT9WMdvu50n1zFoU062z6+Lc6z9rPmKy4k
/fOqflXRUZ2t5LntLxAe8hRXOetbkk72/dV+ED/aD90+vIuHPO1brPj2R8fp
vdu3+N7fJfv/o8v5W8Wd/tbk/FH289Tf+Sjvtgj3VThsNf5q/KusO5XfXXZP
1gmcxi+6i1/9rbxDdFVvbOsM7/LzFO70Vs6n6cif3dJ51T34NF709vw+jYd8
Nb6R8dhX6Y1v/R7MvowO9+lpu25673R+t/a56k+6fZv3pnAmNX4VVznHtS7K
awhXLfFay68XjuUWz+RbiSNN8z4fNV6neIvsCsXBTvEjPA3F2RS/Fc6Y4hga
F+7cNj+o/l/FgUvOV/v3OzkrLqfzexc3L/l5NR5yfW9H56m88BaPQvpT+ln7
VnzqvtD9qP7EvAdzvvA2hZ/QfddVvN+8x6/279c5fQp/uMNDzvXa0unwKBQP
n9KR3aL5eR6zbif1v86Fzq/uL+1D1aOKjvbtR8FD7vB+X4U/XPv5Kh6y5HPq
u+7iIct+nvKje0p0NC48NNk/dU9N8WzFZ9LJe/A0Tm9nb+h3NS468vvUDyX5
f90vdv3z1P7R+FTOaWdO5dPh3uT8bX5QcYwtHrLG1V8g3M6uzv+98WN1rrd0
hIe8pfOXhtP7VznP+LkbP1Td4BYPeUvn6Ti/+oOeyoM8tZ+zL3JKJ+P2wpHI
e1Y4wxpXX7nmq6/5Lh5y0hH+Q/atJx7ym5z2dLZ4yJrf4fRKznf5+eh4yKfx
H5Q3Kb2R/eCJ26Z+5LJzTsWfpd++juNxHnf6W8NDlt741u065dcUVzmFA/nX
+udZ/Dn7CL4VOadflnHRDje4wzE+RafDQ864yl0c4y5+uKWjPr6UT8VvT+Wt
NF9xBuH+dfFnxQGmuMFbOp2cM2+Vcf4u3rKV86m81beiN741/Zz3oPoUlH8R
rukp3Ji7+LGn+LmKq1x2ifCUhIcsHK20f4RflPZ8h6NV9lbiL6U9We/gdHQS
r0z0ZZfm91Y9Rifnu3jIp3CQtnjO2s8dPvNdfhRfEm5D6YuM16nOZ1tXrPtl
i2PT5btTP+se3NobxU/ST5y0kr/yzlv7OfOeiWOcdGTPCAdD+Kuis8UbOYWH
LNwqyWGKM1Z1uVdxjLd08vzWeqvOXHomz7XoaPwUnVN4yNJLU/zhpKP4g/CQ
8/yewjEWHenn2t8Zr1b8VvGxDlcz44FaF+EZfpS4aBfvlTx1b5Z9k3y+6j21
LR3tk+k7BaU/Ze99K3FRzZe9KjtT+q3Oz5scP//uNr+jd/2exkOW3hBeWZ2T
5Cf3yb//D9+vpOV5Fw9Zce8OD7no13jxOaVT/MiOkj0vu055Fq2j8unaz7le
ud9S/nl/yY7qcI+Vb8r1Lf6ndOrcncJD1j6RnSb/q8NDzv1Q50t4yFMc4y0e
svoWVe8tP67jJ/NEqivYxru289V3/PS7WnfxkGu9OjzkqZ8i/MatnJV3k3w6
HOPUe7JDZJfqfSXhU03xkBNXTeN349hTPXn1XYAuXpfjijN0OABZD6B1F55w
/W7uN/kddX/94tNG//y9OheKYyg/pXempjicRUfjwrNV3lB5IuEhFx31Naiu
Xv1fqjNXnGpKp9sPKben8IeF91vjei9sixt8F585+7CKjuSQ+Z3cJ3f5yf3T
8VN0Mo5a6759p6nDQy490MUnp3S2caTKa0j+HW7wKfzhKU7vFlc5+ZniD3d4
yN13bfXwFJ9Zcu7O1xZ3erpeOl95T03fr5Fdp3G9P/I0HdUJJJ28Z5UfEc75
tH9E44or3q1Lv8qPcE46OSde6FPrXuslf1N08h2QWsctP7VPZG/o/VC9E6e8
qvK/emcw/VPlVVXP2d1TT+3nKT5zx88pOopvnDpfytds6107vKDMJ3a4TFf5
2X5X/W6Hf3VXPtO6go6O+iuFp6E+vqv6UHbC6Xuw6Cg+s93P23H1EUhfic+t
fNSPkPW9Zd/KTtjiXOm70u7q9rPsE6279rPoCIdKctjG/cSn5Fb3S+q9ojvF
o9Z+3s7v+rJLv0nOV+26bv/kuOQjO0T3i+hsz/spOuVvZ/5lS0f1V09/l/Bv
P5qcled6lZy3dL4VOf/c9vPUT8l7U+NJJ3Hap3SEV9ndX2lXZP697q+tPs/+
dNUH1vy6BzMfnXm0ih9O84CS89X16vTG1XW/ys92P8veeNX5elpvPK0PvzV7
48/XG7z/fpZdJ7x02dVTPIoOz1b9PukvZF4g4+H63Y+mN7b3jvLOkv/p71Kf
Rd4LJefM4+ucdu/y5D7p4qUZ1xVeovxQyUf8dPjeuZ9VHzJ9HyffL8i6mpqf
3yU5aL7kXHZL2ReZ78j50zh/F0c6nd957zh/l3e4Gq/r8hd6f0H7/1X5uCku
fdaVdXo48915jsTPFodWeqA7F5nnzfHMw+a6Cy8uz2nyKTlM8fpKPlrfKR3h
PWr+1B6Ynq9T5zTH5a/lPZX3V+6T7l3LHFc8UPsz+xCLf90XXT1V1gkIV0H7
J+cnHdWN6LtEX3nY3D+Sz1U6ugd1/07pdPzkfta5Ex31M27lI3sy9XnWP6ee
3/oditdt7Xntt62cNa564y2dU/xs6eh+eRU/H03OOtfKT+X+Lz8x/dnqG9K9
8/S9rPFT9sYpfiQf6RnFZ6Q3tnx+FDlnXWXHT9Yl5v6X36G4mfL1mr/FC9V9
Ud+Z9DWuPoUtnVP8bOls40iv+q6/yvm1cu76VtL+2dYzdPfd1fxg5q3uxudL
zh8lbyV+Ptp+Vj5R/RTTvvXCg1I/e/Wb/eOnP3/4sX9/Syf5SVzimp98vq3T
5/Gi8xaf6fGNE3/gf/+hL77ovN2rPR3xueVH4yXnN3vhD3//yZ36zXecLzyE
2k/Jj+afoiOch1P8aDzrVOtcdHUXdb5+apfO49iKa2UdQo3n+a3zflfOtZ9f
te4a/yTGf/vfv9jPT/MjPflqeyPfNTiVB3l1PuUuHb2Pqfit6Hfx/KyDVZ5F
dGRfTenUuPILFb+dxrGzvj3jyTk/+x8zr5r8dP13KR/1gW77BMVPRyfj5CWf
lKf6YfVd6l9WfkTvU2Q9duatun7DjHcpv5Zy0Hjxmftn2n/dxd+6+3Sbh5Xe
+Evpa3tKP0/7U7q6gqv599R7nZylP+W3CgdG4+qPEw6M8H+Sjn636MifndKp
3xX9KZ2OfuWZEtdIOJm1rul3F93yp7r3dDS+pSPcPNGpuEDSyXHhbv3r334/
c75enZyFZ6jxKS5ix8/2XAg3e3suOn6yPlz4hxqv/Zq4dppfv5vvWOl+V19V
3r+VXxBOsvSh4odpJ3T6WXUCwgEr/tNuF5/dPTi1E9S/KbwO1fX99D3LL+Ou
aVdIjwmHQXgj4lN0ks+an/GNrMvNc5e4JRn/zHGdR8lT8hHubvZBZPxZ/rvo
qJ48xzs6WUeh8VqPjA/ou7q6d81Xn6nq96Z0pD9FR/LUvVD/f4pXnDiuNa54
V/1exp8TRyj7lP98Hv9LvM1vJS4qO6Fbl5T/q+J1p+go76B7XHhT33pcVHkK
9ZUrX5l2bI0LZ1j5JuWntnkrzVceSueu7rNah7LbNa59JTtfchN9ncda36mf
stW3opP8Cze4w5PZxh/ET903U9xj3Qs5v8Od0zrmeSl/IcfrHhH/oqM4QPFX
eqD41/wOHzt/V36Z9KfsNO0H7X/xOcWjTpznKT5J1zdR82ufqz4t/T7lF94r
n5L5qS4OsI1LaJ/IrtZ47UPVAU79C/kp8muUZ5nGRUv+HS502tvCy+3eSUk6
2/dWxKf8So0rvqc8yNdxlr68N1WHk3ZO2QOn4odf7yN2PDzrQrW++R5c6Qfl
uXROZf/oXWzhRup9K8UlxL/yg8qXCR9V85WnE06v8mLduPKAWzq5/zW/W5ep
HDR+io7iY3f5yTz43e/SOtY+ebWcu32i/dDhFavOM+Mzmq9xxRVVv6r4sPCZ
u/OS45nH/6m/MKej+ocpnVrH1Fdbfq7S0T6Z0tE+PPVdp+Tc1V3oPQLFUbfv
Nejef5pOyeHuu8N611J+ivBJ1N+qPpScX3kT0VEdu/ro9a7xq+T89P75qO9o
p/y13/Q+tdY984l139V45uNUj5d0sr8785XCud32iYufDs9kei70u1l3mvnN
KZ0cT38w/dBuvXK85Pzn37uc0+n4qX2ypVP+rOZP5XxVPk/JWfn6jo7svdLP
qjdQvWjeO3o3+ZR+Lvsh7zXlYbf9Vhn/zPdKujrhrq7jo9kb0vO6l4W/rfpk
6UPV25/Sq7I3puei2z+qs9ruQ+FlKb4tfSg7bSrnq3ad5n80OW9x1O/qjcLN
uMpP1qU8/V25Tz66nPWe1Hvz83OVc/Zb3d3P7/1d76U3pu8OdO+xppz1bqPu
Wd0j2/EpHmnxn32XJectrqnon5Lzz01vdH36H0Vv/FXOfz4+f/oefLV+fvv3
l3in8i+6fsmMG5c+VFy0zv2bXWz8n+Sn5iteurXrtng7Uz1WcYwtHdkb2oed
fp7GN+RfZJ69/IWsD6lzJz9u69917+ko/6j3lNUvqf7WjA/UeVHeZOpH6xwp
bqN7eRrnyby/8OskT/U7S27Ks2ccWPx0eKfCY8zxTv90cfLso0k9qf2zjavn
uxhdX6riSFv7rXu3qztfeS7UxzSt29H87TtNqh/b5lO0fzo5KH5YevdXf+Ly
17/88h6scckh6yvqd7WfhSes+zfHUz7dvVz8S26ST8UtP0p+UPLs+sq7/rt8
l1x6I8/pVbsl7YROznnea71y3XN9t+tectB8jUtvbOls74tTdDo55766ys9d
OsJt1vxuX03xW6TnM99Xej7rbLt3SHVfTPOPda7l76Qc6rxIPsI1ndLpcFa3
/EzppD+oevur/Jz6rg4/9pR8tudr+u5tjctfkz7p7A3da7rfO7sl87x5r23p
iJ9alxyXfas+ka5+MvtoUs+UfhD/Kf+tnBUnKblN5Sy7bhpvyfnS59Kr0ufF
d+I2SM9v36E+RSdx56ov5lX8bOn8Vc7vK+es8znFj+KHXX2C6pGyvq6LU03f
rX7K/yq9JLtR+nybbzqVt1K/5FP8bPdPvRslu1d5N/UjC38p+7y6Pu46J1M6
6n+f0in+heu75aej8+f7wr7sKxcd/a7od3RyfuJ+1LhwPzRf48JPeJpO9bX+
05+k9O9+/7sf9rtxHkRH57qLu6Ye7vRz3iPKvygfoXr1OufZ/57f+7YvXyfn
p/eP8CimdK7KR3p1e+/oHlfcT/6R8mvpL9f+kd+hcdXFab7iToqLdu/EZR5T
fdk5v+ioj29LR3wWnel3abzss7Qzs09t2jex5Sfpb+moz1Hyqf0j/F7FbRRP
mMYz1WfdxT9TP6uvX32FkrP6UkVH95TwD7fyEU7y1Txs4tye6pPa0hFORVfv
9630tWVe/hQ/T+cvFP/cvt+qPFfqq+4cqe9VuDqar3HhwDxNR/hCwiu+y0+H
S7mVs/qXM09U/MtPrPs+8dlkV3d0cn7ak4WXlX5oRyfHC9dF63hVzuW/dnib
772fr+Kabvez7BbhdBWdtIdlJ5dezriocJ/SXyh7QPRVv624/fY+Vb5AdLq6
0+n5Vfywuwfv2hvb+j35d3q/VXlM4UF1drj8gqTf2atpz4ufkm/W5Uo+oiM8
MeGcyF/TedT8Ts9M/cSOn7t0hFul+don0m+a39FRvDr1j+SsdyWkJ+v38h1h
4RvX/A63s4s/Sy8lfledL9kt30pcdHpP1Xop3/dUvC5xZTPvIDtqi9spuyLn
Fx3pPeHvfd2+vR4XrXjm03F+xTnrPGSeWt9b+voXny6AHqe3ww1OuzrH67uE
+yf9oHGdu9oHtQ+Lnxqf4glvcWi3/k7mlcpPedpv0rvwuncUJ9/adcJL0Xcp
T1r6J89Ll1fN+Z3+6XB6a1x6SfOl3/JcZL4j52s875H6XdkDWxy87t2Z3Id6
d1L0Na7vVfzwo+FQyZ/a0lG9ytNxANmxGtf+7/AYs45C+Mnbfq6tnGXnC2dy
mqee5tFyvvJiOo/TPEiNi5+uLy/9a+nhqb+W7/50dqPw52tc/k4Xf1C/nvq5
cl9pvva/5Cb7R/at4kWKw3fvot7Ft8z5HX5sh7eZctZ7oJqf+YvU59oPSUfv
tAoHW7i703dO873Iq3Sqb0h4wpr/FD9bOsVP4m/XftvS0fgpOWdeuPoHtd80
LrxxxQ+3eMuan3HCqntUXFF1Bdv3dvN85fvLkrP6oLv1Sr3R8dO91yy9p/lT
PZx00u7VuOhIDqpDkJy797Kn8tH+1z5XnUCO17lTnmJKJ+uspnTyvcg6d6of
uPpdaTd2/Ofvpt1e+QXFnbb11a+W89X908ltS6fOZ8rtVfxo/9Q9mPH2uhfS
T1e8KPs46ntzvO4X0ck+qav1DJovPksvT79L50J0ND9xpTLPPuVH/WWql875
tS7qxyk5ZzxN8zU+XXfxs90/NX8rZ8lT9BX/3NKRn3uXn+67hHcnPC7tc/WH
6nfLn1Lddepz4VYlP8W/cKIyX1ByFq6s9HneX929/K3ZG8mP6l6k3xQf3tob
He7lVTrdvSP+lUfQflOftfSS5mtc+Y6tfDoc166+K+PMyi8k/dqveY+XfFLO
oqP11Xppfo5nHiT1huhIntP9Izr6rtKHwntUXcGUzva7tnRqXPlc/e5WPt3+
UX5qul5PyXm77ls56x48Jeer37XVG9v1muqNTs7iU3LWuw9TO6GzN2RHdf3R
GfeTHu7ur9Q/0kuy6+7u53yv8+p+ru/a0pHcOr2R7wKf2ofTe7C7T6f34FW9
MV33tKO292DW59/dh5Kz9k+nf/Su9137R9/VrZfy16V/Ek9SeXPVaSeeRsbJ
M1+j92E1P+srip/tPbi1EzR/S2frR2g/TOvJu3rLKZ30p6b4ABoXrrL8U40r
fqL5U9zp7BtVf67eMdQ7sMKFVt1I7qstTqb8OO3D6T3Y6Z/uHuz0s/SYzkvR
UXxV+0H3u9Zd9pjiNt0+Ud9Kjss+lNwkB+FGSp7Tup0urvL1+nzLIeXZ5Rkz
j5/5kRoXrn7R6XDOu/fNdZ9qXPqhu0+TT+kB3ac5XnSEU6HfrfHkU/ow50/j
ol18NfG9FXfVu/O5vh2uxbQer+6Xsgd/2m/4pf+rc6px0Um9V3wKDy33Ye5n
rXuOn6LT7ecpndzPUxz4jo72c83fvguwPV9bfq7K+e77C/k+o/Rw4tskP7pP
FQ/ReRc/ko/obOXT6Y0pnalevUpHuIid/pzSuctPzde45Nzxs9Vjut+781Vx
OdVvaP9378V093vxKXyqqd2S/rjORcdP4gXJf8m+OeWpuzyU+hazL0b+11W7
rpNzFyc5JWfxo30l+Suv2tUVZD2D5ndxtm3cJvnXuPryJAfRkXxU17GVs+hk
nU/2u2m98neTH/U1Jz9PyVlxjI6faf3blo7q1rQPFX9QHED+ju4LxR+k96Z1
aF0d4DRvVXwWfdVFZJxnu5+vrvvdeG+3n6d0nt7P6mMS/oDwH4Trq/FTdN72
xX//Yf/8y99/Un+/Oc9P9a2/1b3/jy/Gq59deAL63dofb+vwh7GcT/GT89Wn
/7Y/f/fDefyXv/90/P6n52tc++ppOp2c//kfvteQn+Wj86K6R9kzXd1XVy9a
dV+iMz2/9V2ST+m7Ok+FX1H6N/vc695KOzn74gtnQ3yqT1w4KtN++a4PvXAc
3uT/WW88vQ9Lzm/8/u5HOW/1fHdPCYct83fq553Sybxbjgv/aspP1nm+93d1
uAqpB7Z99x2djF+Jjvb5aX6eoqPzK5yTq37utA4h46hlx2o/CIdN4+XPZv2t
+jSFtzCl0+3/bZ5R4996v5XeHZCeUVxxitdX69LF8abfNc0bFp1tHKno1PdV
XEt99MIZ0PiWjvpbhb+h8yh7o/Prpzg/pdcSf29L5xQ/Wzolr/S7X8VPhzuX
dLKv/6c4D1/ipMlfE86bxrd00h95O19f+o/l94lO2uH1XafknO8f1X7WOXqv
/dzVF3X7ufRp0tF3Tf2ULZ2yK7R/Sv7plylfpvyR4lTaP929rPyd8t2q30ic
gQ7HW7g6T9kbeidXfpnWV/bw1H4oO7D4U/3e1A7p6kUzXlH2gfAt006uOEDG
Dbb4culXdnXvwlvTeVS/mPz0LZ0O73eK0y46qd8qjpR1v7WOub5ZV6l8XO4H
+Red3kv6ehdAcaq6x2t+6Svdj4rP1LpWfKaLG4sf4fao/v9VcdGyRysu+va3
48ayl3T/5j3S4cHKzqn76R8//fkD8ZCFv5q4rxmH1HyNy/7Zztd5UR+u4lQ6
R4rHSs6n4vw6L8oz6lzoPAr3uPCRP7HzN30+RXQ0vqWT8d4az3NXfJa+Sn2i
8ZRPZ/9v/Z3Uq6WHa39n3mRKJ/mZ+k36Lt3v8i+29mHt2zynWhfdCyW3Kf68
1jfnC5e7w83WftD7O0mnzmmuV767Wucy8a7zvGe+KfWq6rjSrpD9o/xRyqH0
5PR+KfoaV/3Stl79dFx0Wk/SvdM67V/OfuQOP/ZUHEn+V42rHin7jkWn81PS
H9T8ut87XJoujq17VnpSfpz42b73pPEOv27qn4ofzRf+lfSt7BPlX7p8aO4H
6WHxo76zrn9K9eEZb1G+TH6N7mXZb/pe5fv0u9P3ntS/o/eeSo9tcbm17oo/
5/s4pf+Fq6zfFY6r5ivPkvLMfZVyEx2Nb+kIR1f7QfM1foof0RHu8XZ9p9/V
rbvoqA485Zz9MpkHLPtBeOa5/5XXy7xknUfped1fshOu3r+KA3dyru/SuOSs
+ble23VPOlO9ofm1/9M+2dKZ8pP9YpnXru/N8amcu/Oeevun+UTnqdOu1jsX
ei+y8Jmzr+RpOqo3SDp13jt+cvzUdynPlfmpWq+3eV/y/5ScUz45X7jHr5Zz
jqec6xy9ih/VvXTv73R1XN27pRo/RUf4GK/iZ0tHct7ikGtccfItHfXpvIqf
LR31Sf3c5ZzxhFN0tM+3OE5bvNYcr7yq5K9x9b1qvvCd1L8sPVz3adnRWX+r
Pu4pHvL2PtW4+NF9oXHFn7d0tN+eprPFE5Oe3+JIa7/pd1V3sa1jmeqNTs76
Xn2X8PrUT7Q978JPe1pvdHnqu/xs6Ug/P82P1v1pOV9d99z/WzrCwzwln1Pr
JTm/ip+7ck574+nzlftEdISPLb/7aX9w6y937w11+EsZL+r6Djp5dnLOOqun
9ar439JJfMVOb7zq3lEe+VuR8/YenNpjH/UePPVdiiPlO6T1Ll6H25Z6rN7d
kx4r+vne5XS+cJw6vdHFB9IeFg6qcEju+lnCNZUdnnnwjr6+V/l0jSveNX1v
usaFD7alo+/N/oWar3O0lc9WzsItVN+i6NR5yfiD8LWEb7P1K5U31HzhdtY5
n9Lp/Ny7dGTXSX9u4wA6p7KjEqcx9XPGeYTjKr2qc5T1VHUuhNtT+0x1Vjle
dnbWW6puUOuV/Jfc0u6tc1FyUP4rz1HKue4d1Q8Une7+qvtU41fpFJ81Ln3V
xTNzX2XdVMlH82v8lJ/S5WHT3ki9p3u5wxFNPvN7S87K+2tdpLdVx6j7ZXsf
FZ9Zvyr5TO2x+q6Sz/R955Rnna9Ozqknt/vw6n7engvt564usaPT8aN9Kzq6
F7K+5bScp3UF0tvbfIf8BdmH23yxzrX0ue4vzde41v1pOlv9+arv6uyE1DN3
/dNOz2/zTbKLXm1v5Lj2g+Qpfah7cGvPJ16N3s0p+1bxGa3LR5dzR0f+pvwX
+QXan/KP1F8zjRM+7Q9O46JX36VVvYreDd/SUZ4i3++r+o3yy7bfdaoORH3E
V+V8l5+OTu4T1SN17yZM60zS3+nmT+sYU4+lv6z4g+S2jYds94/286l9eIqO
cJuf5qfWKXHLS89W/1HiSGRfkvq+OzyKrv9auBbqk6r56hf+I3AS1Ged9LN/
Ofu29LvqExcd8dPJecrPtJ/6Kp1P2+3/179f+LGv4mdLp+qJc9+qrqB7h1F1
lVN9qPG8B6vvUu/HnZKP6vryvkt7SfXPGe/d0tF49ht2dtq3sp+7+nzVMXb2
SeXRhNupceFubekIp+UuPzqPUzqan3aacH23dDS+paP+37r35X89xc+WTvYd
Zz4381ZlJ6cdW3EVxf2m+dPOf5SdX3Ku/ZD9rd16aX+Kjsa3dPS9V+vM36vf
Sn6K4r0V3+veSxV+Y/o7Xd990ldfvN5h7OLe07i6zovm1++lnNWXqn5njXf8
TOO96ktNvdfhHG5xBad0OpxD4UDe5UfzhQOZODDdd3W4Unf52X6X5Fz0OzyK
vF+EU1d0y08se3uLN5V0CmdJ86c4YMWP+J/ism5xO0vOJd/Ek7m6n/XeWceP
9nO3D7v9rPcv0t7WePeORs4XP4mP/aYPv+N9pHvk6/f+l/iQGte+6upFM++2
vde0vkUn46jqy9vaG7IThB+rddf87fvaWnfR7+hM7dWpndzhORdd5SNyfsZn
avzq+zjZ3yG5iY7wVaZ09H7QVX40rnOq9Uo7UOuY+DPdenV6W3kfxVWE76r4
WN6/FZeexrG7+JjkIzz8jxYXFX6y4vmSg3DtSv65Llr3jk7aP1u8RK2LzovG
hf8s/vW9p+Jsqsfu3k3LfSsc7O0+VP2h3g1M+ZQ9qbj9qbyVcPw0vs1/ad+K
T/2u7DHhtWr+1k9J+sLTLj3zlN9UdPK7CqdU9kBnr07jWrIzk//iU/6azkud
//wu4R5LDtIzOl/1uxmXEB35KSXf5FPzNS4+t+9EbPFvdY7Ep/S86Gv/fBQc
qvKPprhMP33n60v/qKvnz7pi1dts4z9ad9lpGq/vz3XXfN2n2p9TfyffGZ/u
H72rLjt/m4cVnafzg1v/NOnUfOGMSQ/ontI7RB3eacYhJWfhxsu+Ut174rtm
nORuH0ft27Q/Zc/IDlf8RHlG4axu8TaFb7mlI7xNzReubOJ5Zh/TlP8tDq3y
sMV/zt/mg07RyfhVna+cX/vzaX62dLZyzrxYly+b0sk8XY5Lj13N6ylfmeM6
FzWe+WXFUVUXoXig/PEOhzz5lJ7U93ZyntKZ8iP5F/3td92Vz3Y/5H4Wne1+
nsqnzvU2/57jn3bXf/mvP95vb3x5XPbe03SK/8y/v4ofjSvfdJWfjA/8Vc7P
yDn5+btPBvVv2a+kdxzK7kq9XXxWv3P2f5X+l/+rvmmNd3SSH42rLjR/N+3h
9K87+eS9qfHuu2p+8aM+O+HTqg932p97lY760V7Fz5ZO9otV3OCjyjn7U74V
OWs/d/gk6v/KOlX1eW3xnYQ7t8WhSn1b9Yqn9Px/+hR4/u0X92y+m6a8WI0L
j+tNH315j+t7Ez+n9J7G9f6y5mtfTXG9sh5Y8bHpd6lv5ZR8tnhc+t5a14w/
61yIjvp8t3S2+GDaJ6oz357TU3QyLlr5slfxs6Uj3Dyt+6vlnHnJb0XO77Wf
Mz5zdz9XnP+vcj77XWVvpJyFL9Hhj2VcpfzBp/z39LuzL+Ouv6z87yk5X303
4e752urVDr/io+znn+s9+NHknPv5qpxP3e/yI0r/lN33Fl/5rDfyXHc4UaUf
Kq5VfpD0WMbBuvmJZ3UKv0jfVX5W8qPxDgdJ8cYpnpvqUrS+HS6r3pfMceF1
5Pzyj0RHfsQUx3LrfykuWnGkrX86He/OncYz3lXnXfFhjW/jNhrv5JN+rvbJ
VM4lt6mf2/FzNf6s+pZT8bqMq2s/SB92dVOpJxMHWLiUHf688Jy1vqdwxqTn
VRckeaYdnnmZn9ZfuA5B94ju0+4+yvXSumtc6yK7Pf2OX/1pF/36l/t7Wf5L
l/9KO6H0vPJHeV60/+WX5TpWvn4rZ+FjS57b8yv+u/s99Yziw10edrruGq/z
lb97dT9nfder+Ck6ivNrfdNO29I5xU8n59Sfr+JH8Q3pGek9fZfoi//pux51
H4mOcE2n/kWHs/oUnayPzf383vzc1c+1bqWfc1919/XWX868XmfPq/5E/NT9
nt+l8av3e9LROy9TP7Sz55V3q/2g+u2836UfVFeQuKAVL53K5+r+0XrJDu9+
N/XbKRw/1QlofeUPnvJPT9HJeF3lYac4+ZWvz33V1QV171lP/SC9XzOlU/yL
/jSf3tFR3+JWzlv53P2umq/9rHWc2ic1Ln92W0+o81v0p/VvT8tZ8xWfeW9+
pvs5cT+2dKRXRV/9uerX1vzsd37bV6aTuExFp/gWP4knrPmir75y4WNoXHjF
xU/O17j6nfW76itX/13XnzvdD1v5CDdjS2cqnw7nRH120sN1jrbxZ9VrbevZ
cr7u5bv7ueS2lfO2H7aL8+sdCuUlk47st+1+m+7nq3pje97rO7v3FuteyL45
4W2m3a71KjoVLxX9KZ2ar3HhVHR0sp5f/Fyt55/imgo/qviZ0sl+sav8aFz9
+Fs6V79ruo7p/1Zeadt/cdqe1/cq3510NF/rLr2X/cuik+8sZ35EuL7CDd7G
V7f5nVNxftVLKK6i+KriVPpd4RgIp1frpb7Iig/ruxR3TTqJE57vt2acVvj5
HQ5A4iroeyuemf2w2p86X8L7muLkJF7ulL7wWLZ0ZLff5Sf7u6/S6eQzlfNV
+Wy/q7NLcx/mvVD6tv6deFDyv2p+vldylU7OL3sy8daE0yJ+Tq37e+/n6f7J
Ot4tHeEmTd8ZKTuw9G/a4R1uUu5z7QfFW5T/Uh2F9kmuY+GPTcdr3WUPqG6h
7rs6xzVf90LlO6b1PFovxfllH8oPzXWvce0f2Xu6Z4VXrHs2+Ux7WHSmflyH
Q5XxTMlNOHKaLz2/9X81vqWz1TPi/xQ/GlcfkOrYJf/cz11dvc6R9Jv00vQe
TJzMvGd1/ypuk324JQflkWsflH6+Go/axpFOxVeFnyx7b/suwN13SWo8ceES
B1XvDiSdzo4tOrXPhc+mfKXmy95IvXo1riW/KfEVa1z1A7n/i5+89+ucqr9J
97X2Q/1erq/ex1SeSPmUbf4r9UmXdxD+cH1X6b0aL31X71y86ZPvqCdld+l3
8z3Wzk+RftjapVf9phzvvks4pal/ROcUnoNwdab41bWvpE80P+VWclCftcav
0kn9mfuh9s8Ur77sk8yP1O9u39nUfaR9kue09uFWz6t+71RfrfCEt3TE5/Ze
lv+1xfvKuprEn7kbT+jeAclx7cNpHKDGdf8q3yc7PNfrqpy3eW3lR94rP5j7
fPt+0Ha+9PY0flL6U7+rfIHGS/4ph1yvxHXMemPhUlYcKetFNa64jc6j5Nnd
12l3Kf4guak/q8YTb0H14Yln2+F5Zrwl+5Jyvsa3eKTiM3Gw87s6PGTt25q/
zUMJH1jz9e6t4vw5P/u41fd0lZ+r39WtS+IeP8VPvo+QclO8UfNTP3T5yi6f
qz6OjJfqu6QfpP913yl+m+eo5Cz5aH9u5Tzdz9370aIvPaP5WpctnSk/Wzln
nclUzh0/U7yLrE/o7PNvHQ/5Kn7RKf+o63fOPqmn5ay+wtzPHQ5h2nulf7Iv
KcezX1h1KZmn6/or08455YdO8SSn+MNZ96i4zZRO8tPhIZd/J7xi0b+Kh7yV
j/i5ivOc/vtHxend4n6c4kc42FfpqG/xo8i5xn+ueMhX+wgy73MK1+sUzpjq
JU7j3svOT32oe1O4FsJz7nCipjjGyme9Cl9O+/Cj4SFfxZ1O/bzF3Zr2BXf7
X3S2uKYfHaf31fixP3e8zY8i56IzxUftcHrv4qw+JedX6+ctnW8V17T2s+5N
1YVK/0/91owHZvxT9bHb+MbW/tn6+0/jIX+0/fzR7sFT9vNHkfPpe/Cj+Smn
+JH+EQ5P5lsr79bh/WZ+RPX8W1zlrg8u+9c0X+NTfrq+vC2uV94Xpefv4oyl
nDNPUXo76aseWPbP9n2cU37KNi5xF6dX/lc3rjqirFMt/11xxZzf9YlkHvC9
8B+u4lGc9nO778p4neKip+KZNb/OS8a3Vd/S4W3Wvq75da4zXjStu078BL13
lnymvio7MNc9+3C1b1VvlvZVl2dJ+UtuHc5h6kPJeYvnr3tE+LrCbVZ+UHHI
LR6p7P+ik7gHwiPVuutc67tER/xL/lfxkE/j9Opd1E5ukvPV93Gm+3n7XXdx
EjpcyvfCQ57Skf8uu+vVuNNTPGTZmfqurb2qfSgcVNWLbt9b1L2zzYspv/ze
eMid/7Wlo7jWKX60n6f3YI1P8ZDrft++C9D9rvq1p7iLmn/XTriKh6x4o+pM
tu+2qF9viz8su3T6Hk397vRdpKvvPWW8JeOrUzxk6Unpt6yj6PTYVh8K31Vx
ue27q3fxkEVf8botHnLGM6/irGbfzRRX+aPgxwrnuehM8ZC7vPM23nsKD3mL
O72tP5EctG/vyln7cLvu4qe71zT/qf285Wcq5w4Puebru9R/rX5w9SOrr3yK
h3y1r7zDQ57SKXlVP1rh89Q+fjt/n/ns+lizfknzs8+r4q6lh4U/MMVdTNwk
9UtmHifPu+hv+7I/Gh5y+W96Ny31vPRnxp+n7x5O4+EdDkz2Ub4Kp1f6ocMl
1j2lfMoUF0h91k/jxpySs3DUhcdyCn94i5u07VM+RWeLh/w0Tu+WjvrfT/HT
4SGn36Txq3jISWf7XR3enfqO0+9+2k8Rbpvibxq/i4csHGOte0dHuAFdn7je
s87+wa7OQXEh5bOmdBR/7vJWGVeRn9XhIQvfOOtJ1BeZ/exd/3idl+Rf4+p3
7nCM85zWOqVfqfmJV1n5F9Gp78x76hRe63vjIV/FH/7oeMgdruN7y7mj0+GH
ZN4n7bH63tqvp/CQczz93ykectmT5acLD1n9OKfWvdvPFSeQv3x63TWu9ZX+
OYWHLL0n/a+4kPaD7A3lF+qemsYBtrjH4rN7ZzntwLzXin/5HZlvKnkm3lS3
XsoLlL6Y4l+l/9XhsHU4z7lPpvZh6Td91/a9FfEpO7PDMc7xjLOVvnoVbnDR
yfpVze/01Sl+pnpPuFJFt85vt5+lP+WXCe9d8TrFT4qP1EvCQ1Y8XHFj/W7t
t1x31UepfvWjvRMnOlO7pdZLdsUWD3lqNwrHuM5X4iHXPlGcTfTFj/Atp3jI
1Zek+Tpf0gNTvPqqI5L8FZ9RX5jiJxm3Kb9P977WRfpB5/cUHvJWb8j+Fx3p
MeH7JR7ym7y/+8I+LPl0eMi/+CSQ3r8oPhOfudYp9YnonMZDTvpbPGTl74T3
rnjRFtdIcaTkv/C99V3Jf3dvbuVwFw+59NsUD7n4nOIh17js8A53Qv7+FA9Z
cpjmhct+2L4TdxXvK79X86XnZdd146nPFV/d4qopL3AqrtX573f9wYwz1Hja
yZV3lr/T+XE1v8OlkZxVbyl/s3sHR3nzp99LvYuHrPEu7pH3V+2z0ntln0ue
UzzkigNs32FUnbPyAls85KrrzriNzoXeqdH+qfOc912ex1oXyUH5EeEGX8VV
zvE8L6fwkDN/VPMVZ6vxq3jIeb/onVbtq5Szxut7hdfa4SHnuZjSqfym1nGK
P9zl40RH5/0uXvTV70rc16v4scpXKu95Kr/c4Tkrb5vnrsvXT+Oop3Cnp/je
ue75XR3er9Yr9YnmX8VDFk7CXX40Pt3PJc/T+znvTfkFGi8+8/66S6f2iebr
HZYtnae/q+6FtJOndPK8bL9L+a+8f4VXo3iI6pY73Jv0jzQue0x4BSnnsrcl
H/kdd9+7rzquqd/U9RFM6Uzrze7SUZxk2q+xlc/p7+rq+qb9X10fSken2w+K
j23pTPnReikucbcv5qqck5/Ml03lU+N35Zz8XO0728q55qce7vTtto9yS6er
Z5j2TWi87K0/n+f1val6hk6f1O8q7iq8Ju3nbb/qVj7FZ+WdTstZ8hGd7EvK
97hTPlOc3q7vcoufsKUj++cUruD2fG33T/kbWfdyah92dFJvv2o/a772+ZaO
8lan5DytN+volH5+bzmfoqN7/FX8dHJ+6h58mk7qjdP7+dS9I72RelX1JBln
S/9dcemrOADZPyu7S30oqqspf1/jaRdN751Oztv1etX+OXUPbu/laZ1qyjnz
Tdt61618pvdg5pHzd4Vb8lH1Rifn7bp38tnS1/nVO2VZr17xzMQRyrxMxs26
fr2cr/HUn5WX7Ogoz5jfJbwvjSs/pfnqx9zyo+9SfaP0v3AG5Ldu9cY2Trs9
F7p36vtTb5yKb0huwonq8NPy/AoXS+t49bvuxseEMyy99Cq/W/fIKX46PK7M
O6i+Rfqk6+9WfZH6bjR/ii8tOqpLFP/CqUs5V3xY/QvCldV3Kc+ldUl9m3m0
zKtqfPu+gMa775rmGTv8YfkLKef0F+p+7+yN/N2Sj+SsfnzVFVyVc1c3kr+b
OANJv7OLsr4o85UlH/lr3fomHeWFq05A9QPbvkjV1UzrW/S7d/nZvhPR0dG9
fJof0REOg+xn1T9M6XTyuUuns0uznvlq/cDUP93agapzftq/eG8/RXVZnb69
q5+7Oqin72XZh8rraR/qXa1TdoLu3yluZ1f/cPcdjel3qT5QdcVphygeq/eJ
pJ/Fz2m7LuMbqbdrfBs33tbVKE+kfaL9v/X3T8UTlE/f4txqfHvep3qg+Kn9
lPLXPXiKnymduh9FR30oV/l577yn8oMpn9Lbd+V8lc5pOb/X/kk5v3o/d3Rq
f2Tf6xSvuPqLaz8lLoTma7zklbjBOb/oVz3uf/z+2vjPn/FCp/xU37r4Kflk
3W+eL+n5uo/UJ3s1btzlR1THlXGnjk7NF37Clo7Gc71q3YWbofFPy/Jv//sP
9ssffvj7uzUd4Zzonj1VN6h6qlN0npLzp2m/2ctZOACqt1d/bskn4/mar/NY
9kp9X4ffsv2up+UsXAL1825xkKRnNF+/Kz1wlx/lg0Sn/KY6L2mvCne367/W
7+pd1Ckd/a5whl/Fj+hs5bzlp/KMmX9R/U9Xd5H6tovXTe2x7T7PvvX0l3O8
4hvJj/rfRWfKT+bXMh6rfaJ+avVHd/3a5V9mXGUaP1QebdrXVvIRnS4+2eEb
lzwVJ9ziG2f/eNenLzodXmLuhy2edvEhfO/MswgPUPe+5p+iI3/2KX6ED9PR
qTqJtLuE33JXPuKz6E+/q+ZP5byVj/ip78o4TNa9ZDxW95rs3tLj6Y8Xf+W3
djhpU/w04SLW/MRze9MDpiP/cbufOzzM3FdlFyY+zN117/ah+Cw6wiHM+1r4
KqIj/E/hqwi3R/jYOl+6v1T/UPt8+v6OcNsUn6l9nvh7qofJ+6v41D04jcdW
PHnqB3V4xbmfCxd6i/+p/Z84w3pfIPvEp/hUW9ytrZ2gOIDe89J44qjnuwDK
s2edoc5jRyfHJbf83eznzfpA8SP7SnlS6SXpef2u7jXR135Wfa9wOBXnUXw4
79mKD2/jz4rbKI4n/I36d953r4rX6b2tKR5m9U/JvpJdqnXXfS36whXc4mRq
X53C25TcNL6Vf8Zn1Hfcxeu2+IRZH151/sJ30v0lPBPFf9KuqH0lPGHph22+
SXpjiq9edDS+xWnXeNkZ//Qnrf3vfv+7H9b5O/opwtEVfdl7U/3c4Runvio5
nPKbdH9pX0k+JcfEnVZ9yxY/SriC03Use1t2e94XtS5TOh2eduap63c1X+Ol
Z5NPzZcdIv41X/FV3UeqQ1P+8evf+2UdbxefVFx0Woff4X3l73Z4KXfv5a/j
3n/Jf/k70/trGteaxjemflz6g52drPEuv5/+heJdykNN8eu6ekv5iV293938
i+ItWzryTzs6uQ+1fxT30D2odd/mHTIOcDXOn3GVuu86fFTVY+d85elkn+j8
5r1f9kPp37SXhIc/xZ3OfJDwfqd0dI6m71R2eTrlgxRny+8q+1/0dV62+03y
1PwpfnWN61xs6ZT8S24VB+jydFfpZH5QfY5TfqbfVfuk+66MJ+t8SQ5dHrnL
L2ceeTue9o/2eYcnn+dR+XfFFad45innpN/JLeW//d0cV965m381b77lp9tv
HT58t59FZ9pnt923/9fyPZRT76ps6RT/eV7em5/u3aK0e8sfvMpP6pMtna7v
JvMa6iNQ38e231D2vOaL/+In7dun92H37uoUh0o4Ffre7bsq6iea0uniEh2d
jId0/KiOKM/RlE7NL/3Y4dZKPiWHq9+V8zWufJzwwKfy6XDFp9/V0cl6y66P
7y4/WzqZX0gcmC2du3K+SqfkrHpv6VXVc+b4KTrqU1A/5rY/VO9ud3SmemDb
dyk6V/ESp3SEv7qlcwoHSd8lHBXJU/RFR+On6Mj+ES7N0/xov8mOUv/+qX14
ej9XnL/sz1fxsz0XHb7HR5GzcG6/VTmrnuG9+Jniub16P2/pfCt6I+Vc+1n2
Rhe/muKqaVw4S8JXVN+39uEWJ7nD1VTf0FP7+Wl741X6eRrfqPkaFw7klo74
Ec7M0/r56ftiKp/Mt07xNrdy3uJtbuNp0hvylzu8xNQb0oddP13mbYXTNcUd
qvib8LgqLpdx2hwvOurX03zpz07PKy/ZxQFqn2z9Au0H8aP7qMODVZ5adDr8
4ZrfnaMpP6oXFR74299zPEDpz7QrKn+qOthu3TNPlONdHPJpv1v+7xZ3WvtB
93XHT9KXHta5UNxeelL9UNq34j/zCJmvVN3F1F7VfhafW1y4Lf6wcPtzX9W6
/KdPBa2/ZX5Q9Y35u3/3SUH+9ov31ivvU+O/+pO0f/1Lf6/o5HiXjys55LrX
+J+v7/1yv9Xvpnwkt+4ezPtXeS7hG+t3NS584y0d1U1d5Wf6XZL/0/nu7brX
/sk6uq186pxmfdeWjvTS03Skb0/zk3ay5m/tz1P86Hc1Lvnkeal9JTwW+TvK
C6ddV/tN97L4lz6XHSV/55R/If9lS6fbz3fP+/QerHtT96D0s+bfvZdr/vZd
EvlrusfFT3dPpf8i/1120dbOFz9P2T9FR+c0z7vqCqo/Wnav+Bef+q6k0+3/
zu/u/FPFB2odr/rdU3+5ixNO42m1D7MuRX6i6qm29WxX3zHv8vh17rr3x5+q
K9h+76n6hOm74eJnKx/Jufuu7p3lu/UbT3/XXTlfXfdTdD6KnLvvKj2lvs7E
A0mcnOxTTjwEzZ/iLVd/d84vOonLJPzkolPfn/28qvud6v+0f4QDmftBuAFT
PIHaD1t+tt8l3Bjho17DQ+jxXd/W2+PVL/2/fBLL7//+e7Sg/+N/+45991nv
UXpG8RzVvSvOIDwTxSu2+T69W6rv3eLoanwqZ61Xx4/6dvW+hvrj1Le7xSve
yufufu7k3NWDKX+qvK3yFDm+paM+rKf52fYFqI972hec/KTe2/KzpSN8funh
p/mRfDo55/yuLzX1s/KbiptJn6g/ruNHeaiMO6kPV+d327crHIDEtevoiJ+M
b2feX3537pOKv2XcQHkrxf10/277m7b5gvze2m/6Lo0LbzD7XjOPmXFL9TPq
d7f4yerHVH9u10+d36Vx4STk+c17R/h+WX+l+afoCKdFeKpP86Nx4erc5ee9
vmsq58R7ucuP9rnOi96XrH8nPpXG5Udv6QjXS/Nl36Z/XXitr9rPxU/t57KT
X8WP/JrSs2m/dTjMSUf3pvJiwilVnER5beE2ZF1W7fPUM7VPhBdX/z/9XPm/
X8c3c35Q+AnTfl7VpSieoHhI+k0dPpj2j/yC7j2RDsemu98lty3ucf5uhweS
cujieIqn6R7p3pfJ8a3/e4qO7rsOl77DMa48Y4fPnHpPuH+Kewg3TPwLv73k
lfpE48LFKr2U9BV/1v2o/lz5KcI9fipe18XnpW+3+3mLB5j45MI9TvxD4QGm
PLc4ijle9oDw6Dq8xNzPiVdc/Gj/a1y4x/m7eke1w+vr7N68L6Z0ujiS9I/8
euW/tvi30/xXl7eq85PviUzxfvOdiORTekx0ZC+JH70LJrtOeqbTz+V3dOsi
v2OLn9z5TZknlb26xelNHMW6R9RXuI1rVdws60k6vynlmfqkyzdN6QjvvcZF
RzgP0ud6r0fzt/j5mq+8quSvOq7SY2mvZj9I6fNTcdEtflT5g1P/SPfjNp6j
+1R0Ss55f23fEVC8/Wo8Ie18+TXah/IfRad7r0d9pupvzXyr+jK29fzKLyhP
IXl2uD2ZJ1K8ZZuv7PzfaT4u6ZQe2N7j0quZj+jiPHqXcIv3K/tTebS815Rn
Kb1U+yH356m4U9p1eY+nv5O4r9lPp3dC9d5r0lE8UPlczc/4WI0rDqP5Gld8
Se+4CS90Kp/ud6d5K31vh7+a+bsOx1v8a77oJ53iU3R0Tk/xI9zjKZ0an8p5
Kp9pX4n6X7SvFH+eykH5XPV71nnp+qCncpOcpYe7/ZznRd8r3HvpE83fnl99
l8av0kk+t3LOfdXt565/eWrnP43T+3R/6Ku+K/GQ6/56Wj5Vx5J9xB0ujfLs
HR5y0ZnixmzxXjLOnPOzvv2ncaEv85hP+8V393Px2dUv6VznfPVbKV+pPqkp
Tm/6NVdxjO/Sqf1b80suHU5v0lGdXvbrTb8r6aTcpnLucJW3eNGS2xR/OOuy
Mm4/xfvVd0nO4kdyrvGruNMdP1fxkDt9qLhHynlL5xQel8ZLzukXd3SSnyme
W/anvFefl/Z5x89fGt6m9v8pXKan8YeVLz7Fj/qFNb79LvVrf3Rc04+6n6c4
kB2u6avlnHb+Kbz698ZDPi3nU3SUn/orfuyzeqPD91Ydi/KzXfxc8Wfh5pVf
UvOlt7fvBJ3C6T0l54+un99rP5/C6X2Vfj4l56f12FXc6em71XfjWqJT/Fz1
B7fv45z6rqmfm/3a2dcgHEjlGTMPojzOKZw63RcZN+7wr7a4Z4r/vwo3b4vj
dwrPbUtni/+pvInm57moeJRwj0/5caf83FN+t/CHOz+3wxVPvzX1xtP4YFs6
shuFm33KzlR9SJcHVF5SeGVTvMEtPqFw6lRXpvmSzxTvrvjZ4uB1eICpf2r/
5LlQnqjD153q5492D57CH57iTN7FQ9a61/zaPx2d9Pu07qpf1T0ifAzxv133
LU7CX/GQv87PFn9Y9+YpHOMtHdlF3T5RP9HUntfvyj7Z4tkqviH6uh+n9mra
81M6V/Xz3Xv57j1Y9Kd4yOJnam/k76peos5F2g9X65FU15f2zPR9JcU3aj/L
X76KGyy5XbWjct1V5z+NI4nOFJ+528+dnZz6ZBqv6+IkW7/plL+jOI/8gq09
c6rOSv1HwlWWXXQqXvcq/NguLpp4p1fzVpkfvBqnfQqn9xQectKpeM7T+MNb
Of+l4CFf5ecUvnfWDVbcSX3WGldfeeUbqm9r2leeuKbqqxUO1Ra/9xQesuY/
zc+WjnBlO3zmvGez77LqpU/hx1Yf+3/8/uf/8+9/4Ou7dXzp6fpn2b0ln8y7
Cd/gKZxe0bmKO73lR32jOhfZB5o4b/m7iT/w9jvfvTsecqcnv46f0PfhdnjR
smOn+MNpB+bvbnGc9LuncXpP4SE/xc+WTodjIzpT/JlT3yX8PeH0lp5Mf1P9
jJkXTj2c41s6He7r/1feHeXWEcJQGN5O97+mrqHPUR5OpZzoi81k5lZVXhFi
GGNssOFHecn+L5VPPGRx557iIYsPcMpD1rkv5XFO77VtOcatP/LLig93eXOq
m4c86dv2nqnyFP1fuv/Y7Uz6vC2fOMan98pVHnnFX4hn2DzJV/GQJ77uT+ch
380f/q6cr8rna37snDfMPNX+Pfr9v/KQM8/DX7lr3K/Oi+Yo3q3PsbNdX+sx
cYe0Tp7OYfZ9w4nb0OX5Xo9v/FnfU+v2ky9Qf7bcvIkvJ/6MyiX/9F/nZJpj
oPyC9vu9r087shvRn+6nyiPfiYcsjlbH83u9evqugbhb4jVpXmtfr3VFc1py
nnD7blf6oziD5p32rSqPfKLXE19U5TrXrfWP5pf+S+srzaOJZ9j6qXuCakd5
w7ZXf369W9Lff9tNfCxxKtkTxVum9/g6bhO/0nEkxc9lN5R3uyseFR5E91P3
vqWHU7xXceOJj73lIU/6LF7x0zzklOc/W98k5y0POedtvstDbm7JdO/17jjS
9D7XNr4hf6r4gOxe9LvffVB+SvPrlGMsbt4px1jlW6576ssPZj60/dG6a9pf
tNzank/7ji0POfWncel5qnb0bmz6n3bij055yM3VDx9b8hFXVvr/9bm7z+8q
Sg6yJ1sesriyaUf56G07mdd385C7XOtw1Ze9Vbx3Ou/U9XWe51/xvvQOTueR
wwk55Rif+tPTdiZ963HX+F6Nb/Q5Jfnl7X5wWs9PPGStB1o/td7T+brTOH/s
Xt/rmXjj3X+tQ5TvmN7nfTUPWfJXnOrUD2r/8ioecu9DVV/xAfFItW7XPjH1
2q/Jf8mP9/7x43s6+/dVY1dbDqqvewRaz4vLqnae5iGrvt6xFcd7237fm9jq
rfYX8jtXOb3dz6f4w6mv/72LY6z7iaf/teXHXpWz8rmKq8tuS57ivSuf2+fw
p/5ovGS3Ne+2cp70U+1rXK7yh6/ykNMftbPlM0/9ucpDnjjGWx5y11f5G1vW
Dcs=
    "]], InsetBox[
    StyleBox["\<\"Statistics & Data Analysis with Mathematica\"\>",
     StripOnInput->False,
     FontFamily->"Times",
     FontSize->38,
     FontWeight->"Plain",
     FontSlant->"Italic",
     FontColor->GrayLevel[1]], {32, 22}, {-1, 0}]},
  ImageMargins->0,
  ImageSize->{1400, Automatic},
  PlotRange->{{0, 950}, {0, 45}}]], "Title"],

Cell[CellGroupData[{

Cell["Presenter", "Subtitle"],

Cell[TextData[{
 "Harry Calkins\n",
 StyleBox["seminars@wolfram.com",
  FontWeight->"Plain",
  FontColor->GrayLevel[0.4]]
}], "Subsubtitle",
 CellChangeTimes->{{3.442059735674614*^9, 3.442059738805551*^9}},
 LineSpacing->{1, 1}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Online",
 FontColor->RGBColor[1, 0.329412, 0]]], "Subtitle"],

Cell[TextData[{
 
 ValueBox["DayName"],
 ", ",
 
 ValueBox["Day"],
 " ",
 
 ValueBox["MonthName"],
 " ",
 
 ValueBox["Year"]
}], "Subsubtitle"],

Cell[CellGroupData[{

Cell[BoxData[" "], "Input",
 CellFrame->{{0, 0}, {2, 0}},
 ShowCellBracket->False,
 CellMargins->{{48, 12}, {12, 90}},
 CellFrameColor->GrayLevel[0.2],
 Background->GrayLevel[1]],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJztnQusZlV1xy8UkRBLYCC8plq0aNWxUWMJMcYc2obaSkQeiSHGGGOQNKaC
grSKFNMQQ0w7JY1pUQkowiASQkAQp8MAcweYgWFmmBdz586Led153MfcUdIa
n+mcs85/fbnny7p31nf3mb33/f43IT/unnPPWWefvffZe6//Wevtn7/hqi/8
0cDAwDuP/vfVEwYGyv+XnyMFSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSabIDz/50j89+4PDxbUfef2TC+8a
LU555E8+fe1HxorHbvyH/5y4dbIYWfeObb++7XCx+5azHv3Y7sPR7SVJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiTnNiv5yuuTys9VApbRYuVlF3/7rz63o3jw
7hcueOzGXcXhW4uLPrtkorh92ar7Ln3qQPHqr67eu+jug9HtJ0mSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJPuL907+eMVlFx8q7lz+v+/+zJ0b6jgum4sqrMv5
Y8UN80qFy47iqsVv+9bYlbui20uSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEnm
zWZ8FtA6HnFZXrygzEi0prjj7OG1v7p6YzF0/5c/eurQgeLZH5z//h0Xrqj1
Lq8W11QJjSaLhXddP+/2ZfnmLTrpU6f9xU/vmVSiniQ/U4ex7SRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkpzrbOo38HupZpm4dVLzD33zi0u/+p1zX1Adyy83
fOLzp18zUp9nYKCM6nL9vCeKm8o/KyaKv33qjd9v+tpIcXoleNkf/T6bxP19
/3vlz0Sdf6nDP2z62qF3fXBfIfe1tzhaOLLuHZPFn3+wVLaM1+cZj34fJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSsyV0I5+pEvx0dCOx7QJhF34X+8aK39xW
Clr2FRtLGcuHDxYP/6IUtLxUlNFYbjlrbfGjS0sBy7767wYGDr2rFH48XJcf
LG7+zrknfeq0NcV3yzAuq9brdQ7fWlz02SUTxX//zb/944HfTrR+f6hv6G5A
5FeS5zNU2/ua6lek/PXiT781duXit+3Q8zXjusR+fiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkrMl4n58oxKGjBf/XCX0Ga91I+PF3kV3v3DBY3uKBVXin72N
fD7jjXgh4eyy8hOV1m779f46H9Frqkd5eyUU2VWsWV3+bKp1LojLMjBQHvX3
b1neVT740AOXX3Lm48XRi3xy4V2jtW5mSx03ZVh1L39dXfjYdS/NuDP4O6nH
A8WHqp8DhehuRouPv+XEo/+0vvh6VbBadTjv33Hhyf/6X88X76kMWar1D3vF
rkPR2xFJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkmRbrNLzPDtZlFlubl92WGQg
J04WZRSRiz47qjoPxAmBLuOUSrjxXFH9+Q9WqR6mkoPcuacYuv/LHz11aK/q
POR8h+vjDx+zfc04JDiv6FvWaDn0N5+uhB8rVf8hcV22FJV8ZHhzl77lnjMW
PTN4zlP1v3fKr7//hKVvmvek6keq01+9sc4HtLHOhzRe62l2aTwV0d90rivX
29ylV5GrLNP4M6u/+XfP/ctbHyoQZwbnkfvYXBz47U+OnnFDV70wTks7hB7p
WBnb3rYIvVuTse1qi9bzlXFyrIux7SXJFJna+AldaJOx64kkjwehs8b7W3Tb
Y6rfRr5OzGe95YhDKHr3g8X/vbs8cp953dj1Eao+sa5BHtHYdnntbz6X1J4X
1qeI2ynfAcTT81vPPRc7Y9njJda1Mj84VMczPRDdrtnan/t95U6rX1jvr9Dv
wVz7o/VesNpzau8RL3N5jrnXf2rvTa+dsdpDau2wV/tTn39aTLU9pF6fubfb
uUqrPYfaH8hlnPey3+ZF/dZ/c1nv93pf/dJurec10/32SzvvN+K5Quey+G2l
wGW0qNLnXNTRgRz58YrLLv72oK7/UH7F7869aWjeTzVeSamaWXDHiuKq6kTr
tD0h/470m+3Fn2379W1fXNrRyZxXNcDdapfoTPbWcVZe0nLRu+yu9SFLtN1K
Ox7R/D7QmSCPEeKmWPoW0aMcKN689rwrt85/pED57ctW3XfpUwdqvcsTWo77
fd8XzttzzTk/13K5r4OqC3p68cKTj5y9uK63g8XLZbd6/zN6PuiFzqlud0dt
53D0dtEvlPa+/5gZ297Z0tKxSL/Z3cXU/MWW39x6XtL/93QRec2aRP9t0jr+
S5UgbaSLofRC0N01Cf1fk9Zz9PLiKuDXni5iPGzSstM6Tyg7rXqwnpe3X1jn
sdqV135v+2xbh2b1d8se7/1a57H6tWWP1a6s+rTGB+QHbDLU/YbqX97xoW37
rX5n2WPZb91v2+NbrP7lpbUug04demvosWVefLh4ayUAf62exz+r/UbKdxel
avukT212719Z57Gua9mZi//XsvNoYzzaIg/rukZ08C+Y9RPLfu/zwncPf9j0
taOH7NN1Sah9AKtdedtP2/tOoexse//Eui6+L8H3KtKOXzX9uaHssWg9L6s+
q88+bsN3Mlvrenu59XHDstPq75b9Vrl1nrb7Xe606gH1hvjDUu9bg9W/NQ5Y
1/WeP1Z9euvNW26NP6m9973zKIyfiC9d3sVPfrGndTu97yPr+LbtzGWct2j1
X6u87fbA+efxeQ96+5dV/233u9Tq0zqP972Qu181Fq35vDWuetcv3v0B67rW
c09NP9Bv8yL2X2Eu632Lc7XdWvXpnbd7y6365Hp8blD6+SHNAyT7/1tMfYtV
PtWv2ImjAl2H6Fi21fPDTXp90Zvs1XkjyjHuQCeCcviHoMPBexZ+EcxD4a+W
fE2vqP4F+pZ33nzi90+Z/2gBO+X6B+v37v+onuXVo7PERXd361igq4Ed+DtL
34L4MDI/2V6Ps0PRnjvmG5i/z68qZqIRR2aszhfV0bE3j49lv5eWP9RibHtn
S8ufaPkBvf7KULT8jF5dAfR6TYay06qfWPXpfb6WH7nt5+v1X3v9/m3Talde
P3tq+jFLB+LV51jt3Ko3SycWSqdh2WPp2ebqc89lfLCY+7hh0don9/oFYu0X
Wfsb3nWota6M/Xya9K6XY62LvfVv7dvPtK91rPcVyo8wk79ptvoNb3/02hmq
n3rrM5af3doHC6UPCeVnDNVfvHoJ67ptt59c6H0usfafvfqott93ofqd1/9l
tf9Y9WCx1/HzeNtpvde8z6ttO736Fu/8tm09idcvHKs9c/7Z2/zTonV+r7/P
0p9Y5V77vfqWXv3Us61P73NPTfeYGkO9x2Pp27164Lbnt5wXTc9+67+5rPf7
rd1633fe/QGrPq3j56q+q98ouo2x4rrqZ2cdR2VXl45l8KEHLr/kzMe7dCzQ
t8CfUD32C1fUx63TfvRg2fxv3Kd5gXB98W/t1naLctGH7C6ukA6q5W+vGmS3
7gXtUuLELNd+hzxH0p6HuvIEob/L/O5QXb627lerao5qnBqU4zwyf9ik+ZXk
9/HarzZc/LJMa3TNel1PyfX21rqZ7dqvoYtBv4P90B9Bf4PyeydLYQ3yLHW+
8xX796tuCOMD/JFSvq3WrUxo/5UTb9DzS32MFIPlY31jd9d8WO4vPX1LKL9k
23qJtunVh1h+51D2WH5er51eP3Xb9PphQ8UNsOrBG8eg7frx6hZSe75WHivv
eBLLfovefpeaXqvt9pz7c89lfLCY+7gRan2au3/Tu25tez/Wy1z2f0J9922t
9737GN72P5OfurmfECpuiddP540zE8r/Hqo+226HFkP56bz17/1uMVY8B+v5
xvL/xqL1fK16SO07O2t/uO125b2uVZ+h6mGmODxNO9t+73vHT8uettrNTPXm
Ha/attNiKDtn+q52tv4F77zUaj/euAdeOzn/7G3+abFtnUCv/rJmfw9Vn1Z5
qPHN+96JFW8qF3rfU6nVp/f91fY8hPOisPWTWnvzMpf1fr+1W+u9GUsXZ91X
avsq5PSEn0rS5WzW9tjUtxyq8wQhX8/DvyiFGy8V3y0f96r1mmdA1gl79Hy4
TlN/gnLoVZrrHaw7mvqWr1QNvrv88jJMzJPd57GORxwY6FKw3kH+JPn3DdpP
4UcR+zfo8dJvX1ddDPqFzEteL6pusegV7c/Q84heZouuz0RXtK7WmSzX+Ck4
73uqA5dqHBjkYcL9ohzXg+4I+aGgz0G8Gtgv+psRrW/UD8YbvM9it9NjpTcu
wfT6lvTzFoXS87Qdx8brb00tHkKo+wqlI8rFf527nzp3nYNFbz4pqx5C2ZNa
e879uadWn17mPm54vw/NJZ6Jl9Z6Npf6ySVfgHdf1Bvf3rs/493ntPYxvOcP
te8Xyk/Xtv89F7+n10/n1atY1w2lM4ylo7Cum/t3lBa93xvGtrfJWDqKXuOn
pZJHKdb35rmMA964E7F00f2mx7DOHyvPI+ef09Pb30O1T6/uxRvHybs+CqUT
89qZWl6t1Gi1N+/6KDX2mh9wtvMBzot6O3+/9d/U1vtst3HpzQOV+3eIINpv
k5hXNvUAeF+BvV4X9fdKGU7j953v/fG7xA3ozLtkvjSheXSm2jmm30cj3ojo
VXbpfjPOK/qKnRp3BXagvTbjscBPNlsdi1WO+XqzHDoTlKO+MW/EdSVezWSd
t2hbzadrTur9Iz4M5p/SXoe1HPFLEL8FuhHMQ6BvkfFtfW0n6nmL6k0QBwZ6
oevvP2Hpm+Y9WT+vMc2rhPxH0LGg/LRnP/C99577M9WxIF4Mjp+qtzmgcV1i
9Z+26Y1LYMUNyCVvkVfPY8UbsXQXoeLYeOOcpOZvtRjLD56L/zp3P3XuOgeL
3vbT9nNJrT3n/txTq08vcxk3QsVpz3096KU3TmysesslbkZq381Z9OqaYsWD
DaXHSM3OWP7EWHEtQulb2q4fUuiN4xTb3iZjtTfvOJCLXqhtxvK7eRlr/PSS
eoy4dnL+OT29OrG250tWPw0V97Lt+rTey6k991xotbfcv3+JNT/hvGh6sv8K
U1vvs90eH4bah5wr+pYmcb/IL4N8MqJzGNU4HaJL2F7npTmocUOgD/lG5UA/
qPMSOW6T+pPxPhP9wrC+B7G+kvO9pnaJn35vl84TeX9E5/GclkOXIv3oeS3H
8z5SpsP59qCWIy5KM0+QdX5LrwL/RLNc1nHon8u0HUr+o51aDr2KrDe3aznG
B5lvb1V7oD+ReClbtBzxZxB3Bu32pup/JvQ5Pb144clHzl5czK+EIhOqp61u
b+FKPR56G+GQ5oH6evUgVxeIhyP2duKroD43lo/5w+Oqj4E90i6647HgfkUn
s0/1SrH7R1u08rx4/Y/WedrWe3hpxS3x3q/lB7Tyj4SKY+O109IdHe92NhND
+cG9eYty8V/n4qdu+/nGst9Lq/6teC/W+ID3aZPe61LfEvY5pjY+WMxl3PDu
56fmx0+NXv1DrP2WXNa/3v38tr9P9+7bx/In5uKn89oZy0/X6/fIbX2PFio/
UWr5cXJn7nmXvDqEUPoW7zjgjbseu17bYqh6a9tO7z58LDtjxS8KxVDx5WLZ
yfnn9PR+lx1rXue1MzVdbi469tRo1UMu8fpC5dcL1e84L+qN/dZ/U1vvs92G
Zah1WWrz1VjE+ID3kcRBGa3H/VGNByJ6he3FYOm+fWOkzivzI9VdQK8wUP/8
+8dHT/rLMx4squ37rx5QPYrs86/R9wnyBEFfAbtwPtGJrNDyqf1niZZDryK/
zxxfxdKriB6jo1fBeCjV0NGroF/LONmtV5H9uY5eBfWM+kQ52qecb0jbJ3Qp
0APheMS7gY4F+YAQFwV5mFB+uHyMSyZUR4J6hh9M4lNsLMpeteCOFRqP5do6
3xDqeSYdC/IWQVeD5wvdDnRSqE/sX2I9FrsftEVL/2D5vyz/rHX+tvUeXlr2
eP2tlk7G8kd7681iKB1O2/XsZSg/uDf/Sy7+61z81G0/31j2t01L7ze9PrB7
/LSOp76lN+YyPljMZdzIfR8yNYbSC7W9rvfu28daF3vbZ9t6Eu/zjRV3t+34
8LHsjPXcvd8Jtt1fQuVHs+y09htz12+QQuv9YvnB29abefUPVvu32vlMxzfH
51z8HaHi7bTdr73jZ2r++rmaBypWO+f8szd6x8lY87pQeV1j6SK8OnbGH5gb
DLUfEmr9znlRb+y3/pvaep/ttjeGGn+s+RK/Z+mNWBfDbw09zL2TZeCUQ3W+
nw11+ebiwfLx3djRvchzerhLJ3NDKcu470XNQyR/t6u+zrBeX64zUus3Vms5
xink8UG56C669SrS7l/Xcox7aCcox/gp+XK2delVpN0Md8VXwb4B2iHal/jD
OnoVxFFB/iAcD72K+Ok3aDl0JtCfQE8C3Qvi8KCdo5+LHmZbfR8b9X0M3Qny
BOH88vt6jdMCHQueL+zH+UU/s07zEGHfbEF14b2aByl2+z3etHQXoeKBWDqQ
WHmLvPl9LH9xqOt6443k4q/00utHtph7vAuLuT/33HUOqdFq5952Qn3L9Mxl
fLCYy7jhjSNKfcv0DJXvqW1dhPd7EGu93PY+SWp6Eq8/kfH2w9pp+d+t9tm2
TiyW37PtfB/WfqC1b2y1n37LW5caQ+lY2vY/xhqvrH5h1Y/1vou1b5z7+Olt
h7HsZB6ouHZy/jk9rX5klccar1KLMxDKztTqmZyeofzIba/vOC/qjf3Wf1Nb
77Pd9mand/yx1uO5tNvciXUH2tEpdT4efCcNfQjioECnMlD/DD70wOWXnPl4
7Yffr+VywuX17+PFddXPTo2Dgut/qPrZW1TTzEWvqD2IrwLdC9oJ8jDJ33fi
rqDdQ7+B/gLdCMqnxp/ZrOUrLysVDBP1ONvRq0B/gvdiM/5JMy6K2NfRsUzV
7SC/zZqu/ETIfzQ1D9S46lrEjhe1HOsH6Fsk/1QnDkzTfsSNacaTkXxU67vy
EGE8wXgWu522xbbzEHntsfxuofIWWf5f7/1a8V689li6IK9eyOtvDaXPaZtW
PIpQcYRC1Sf1Lb0xlM7B0svFui9rnIlV/6m1Z+pbqG85FlLfcnyY2r5ZqO99
rPJQfpNc9CS59Jde4zan/h261Z6t9hDqvrzjZ2g9wLHGQ0jte73cv5dMjd59
3dT0lha9fqhQ32la44M1Llnjai7xMXIZP612btV/KN1LLjqHXuN75BpfjvNP
obd9xtI1eeszVvyZUM89lv39Rut9FGp/Yyb9w/F+v3NeND3Zf4WprffZboXe
cSn3dkgKpf2N1nqXzbU+YljjugzUP++8+cTvnzL/0fq4/QV0MBJHZLnGOUH+
HfEvbNF5IObxTZ0z9CqITwK/GeyBfgN5gsQ/0Z0nCLqRpl6lqQ+BbkSuu66x
/9nRq8Ae9Keq+S9cWbfzJbp+g44HeZ/QD5EXCToU6GSgP2nGgUE58hnhPM24
MdDtNO9X9Aid+DM4D8YX0St16hPrULn+wbo+8v/Oy5uHqO34KpYfLVTeIq9f
0rrfUP50SxdkxXWxzuONh9P2fXnptb9t3VEu/utc/NQWQ+kcvHowi23r9ELF
F/Iytfacu67Jm+/JO56HYqhxNda4kUs+ndzpXc9a+2nW+a31u/Vc2s63Eiq/
Sah86G0/X68/MXT86mP9TjxWvH2vriOUndZ1Q8Xv9X6Hnlre87b3mWP1i7nK
UO/r1PzdFq3+6P0eM5Q9Xr982/mbrON7HT+b57fKQ42fofzy1rgRSvcSS+dg
jc+x5nUz2cn5Z1p6ZqseYsUriPVdv9V/Z2qfx2qnVc/W+M+4dr3RGje880xv
e0ttXtpv8yL23+nr2To+tfx6/dZuQz0XxmOZG5ya12af5jGa6m8fGEC+G8xT
m+UY58SvsFbjneD9hbw4kqdonepVRIeySeOiIP6J+Es68Umgn6ncLp/ozhMk
/qqOXgV6EtgDvQrGZXmfrtJyua/Rour2p67UcsTV+OH5pcGDGl9F9DejGoel
qW9BPifoU6C3we/N+5IOuEF1Kc16wH0dLrvbkk69oRz9EHmXmu8R6IKgz0Fc
H5mvDHWtC6Bvkn2Xzn4gzhfaXxmK3rw8oXQmFi0/byhdjTfvUtv3a9G6X68f
3BufJ5ROwEuvv7jt55KaHsBiLvoWqx164/N4dU1Wu/Je19verPu1+nWofmfp
GdrON+e1J1TeMev5Wu3BsieWndO3z2OPV2a9F0L1r7b1Vxa967vUvgfMhW3H
yfF+nxLKT+q1x9ofsOwJ5V9oe38yVl4Ar//R2w5D6TG8dradP90br8DaX/X2
o1D7Y722z+Z+Wtt5ur1+B8Z1EYaKX23tG+f+vvbmXQo93s52vuS9rtUvvN8d
h9I1ecdz63m1na/Eq3vx6iRD6ZMteud13nlIqPbJ+Wea+n9vXIu25wMW244z
4K0Hb/uc6Xv/5nWt463+O9Pxc+27fu94Eio+au5+5Lk6L2L/nVrPqa/32W6n
p6XTaztOlPV8Q+mcyekp64Yxzacj8UF2dOlbrr//hKVvmvdkHTfkQPGO/7j5
K/P/+DHVe0g7PajxTKT8ZdVj4PzQoaDdIL4KdBfQgcjfd+cJEntfbcy7OnFU
oEsR/cZYUY5mC+5YoeeHLgV6FJSLHme0uEIGqEb8k9Hi6cULTz5y9mLV4WDd
hbg2+DvYL3qhLZofCXoV6E9wfcSfgW4H57d0LDPp7eU+OnFa5HyTdf8Zqp/n
Mh1ncDyeI/o1rit2PqHtRY7fWXy9MmS1lmO8WlAFrOl8x433FPRModptqLw8
ofIEeWnpcCx7QuVdinW/lt8zlD7Bqh9LL2HZY8VhsPzL1vktv3+/5XOxruut
N8tOS+dgnd/bHqz7svQSXn2dN0+NNz5V28/Xq6Ow7LeO9+pYQunoUnvuVv14
+0tv74tj10FZ9ezVrYViqPhXoRhq/3au7rOFYtvxWyx69/m9z93y+3jtDOWX
adtOi6nlBbDu1+tHiJUny5tXJZSdXn9oqH31UPXppXe/yzre60+PFU8mNXrj
GHjfF6l9dxyrPr06EKude8eBWHnBYo2f1nsnVJ6sUP4XbzsJNQ8J3c6b87pQ
86hQ8yXOP4/P/DMUvf5Tq95mmic0j/eOD6HiDLSto7Cu6/Xn5hIvKBRDzSe5
LyGcq/Mi9l9hLut9ttvenqN3PR5rv5EU4nmdXg0Uo0rRI2Det0zrGToW6Bug
A0H5Fb8796aheT8t7jlj0TOD5zyl54OeA/FIkE9H2vGwxlOBXuXFC8oRa43q
K6QdYb9hleo9oFcR3cULqjeBPkfsel6Ph44FxyP+CnQsR3684qhlg7Wdy7V9
v3nteVdunf+ItkPJG4T9iYGB933hvD3XnPPzxr7FwADswX3h/pFHCHoV1IPo
X15S3cfU/rBE/UKW7hHrk+Y4AP3M1Pqc1PxEsBPtQuLpbFE9DMolr9I2rT+U
y/1s07g1KL+u+tmpOiOUix0jXfvJ0PXguXrbc6i8PLH6ozdvkfe7dcsvHOt+
LT9jrDwXlh7GstN6XpYeJlaeEYupxW+x6i1U/CXr/F6Gul+rPYTyv1v2W889
tfbptT+Xftf2c/ee36rPUHmsvLT0MJadFmPFYwnF0P7KXL+HCkXvejPWPoO1
v235I9p+vtZ632qfseJjWPtdM+n/j/f3MtbzsvZJYn3PZe1ref0pseptpvwI
qcelD3W/Vn/Mxd/XNkP5VftNxxKK3veL93vhWPOfmcbPY93/D23PbMeTWPo3
77wotThUVjufaV6Xej1z/hmX1nzGO356/ZWx3ndW+wzl97TuK7U8KaEY6vua
fut3bXOuzov6rf/mst4Pxbnabi1623Nq79PciXgdTT8F6u/aOm8Q8gSJDqQT
pwW6FfErHlD9CnQRKIeOBISuA7oIjCfIH3RV5Xhcp3FOMH+/oQzfct+LBXQj
0LdA94J/x3mk/LW6na8vvlEJFcZVD4brIo6K2LdNdR8ox/GIU4I8QWh/Ui+b
1W+G6yFfkOhVOvoW2Il4L7hP1Df8LbAH+6sohy4I+hbsxzbzDTV1LDge/Q46
k2Z8FXxn3tQ54P6m6niONMaRjp8LdjXjseA+UL8of6VMc/T78S4dC87T63iV
Wh4iL715i7zf6cfKy+O939TyR8xVpqZvsZhLfiKSJMlQDPVdee7r5VBkvfUn
++27S5Ikj51e3WMu3yNzv5QkSZIkSYvevG+5xP2z7EnNP06SJElOT6zTEY8E
8UqQJ0jy66xWfYXoPjo6FnlvPax6FcT7aMZpQfyW0579wPfee+7PVAcB/QTi
kEDXIP7ILY3vH5GvZ53GA8Hx8t7ZqroV0dV162SwbsdxuC/cN/QiiNMi+qrR
2g+6Ru8L+hnkOUI59DPQsSDPEeKM4L5wv3hPiq5nu8ZpgU5G6mlY451gnjA1
HvFWjcdybZ0nqPk9KXQv0P9Ax4LzVtOOhSu1XeD6uP/Y7XS2DJWHKLU8BRa9
+TgsxvoeP9T9UrcQlrnoW7z5d9hOSJKcq/TmNW47n2xqDJXPd67WT7/R679m
XAuS7B9646Slpnv0xg+PXd8kSZIkScZnqO9oYt9Hk9a8jus7kiTJNIlxG3FK
oAuZGv9kR62P2Kl6F9GrDKvOAn+HeDrVn9+5R3UaEg9kpD5+RPMK3TtZJvIZ
qeO97NO4HRKPZZ/6oxGnQ/aZt9fvkaH6PpD3Y1j1GtCliI5lo+a1kffSqOpI
oD+RfftR1XMgrgx0HNDbIJ6MvMfHNG7M1PcydDidctQv9C0oh15E6nO96oBQ
P1KPGzS+DfwLU3Utq/Q5wi+L+cLUfYkhzZsk8U4mNb4M9EVoF/I8dtXPa72W
Iy4X7IjdfmdLr1/eYmp5Kyx6/fup5SHy0oqrEytv0VxlLvoWK+9MLnGKSJIk
26bXTxcrP0vb7PV7/GZ+itj3QYahN/9ILP+1dV2rnzI+A0nOnlZ86Vzit1j2
U99CkunQ8iNb73fOS0mSjEV8Z43vrsUP9nI234NY9lPfQqZArvdJspvQOUCH
AmI+jHgn4PGyC+8N9Fu830SXskV1K9KfD+l3pIhDgvdNMz8R9DnS71fVcWiW
an4bycuytvH93ZiOC4i7InZ2dCk4vhmnpaljqWQ+n9ig5dCxIC+R2PFcnZ9o
oq73TV16V8Rzge6lGY8F5cgnJfYP6flRv4jrAl0N5hWIG1NNLy5coc8F8w3R
CeQTv8XSn3jjmcTyy4eiFXdlrsav8OouLP1D7PtInbnoWyxaeifqoEiSJIVe
3YvlF0strq83jo21b5DafZFh6fVfx8ojb8VZSs1OkuwHWu+L1OKhWXZS30KS
6dA7X7XK6eciSbJteuOgxtLjee2kvoVMgVzvk2T6RL+D3gR6FMRdQRwWeQEu
n1HHguOhS0FcF9F9vKLxW6bq31fpeRCnBfmKoAOR8aNbx4I4Noi7gvKbqv+Z
UF0Oyps6FuhPMC4hvgrixmD/QfzEr6k90LFgnMLxWL+gHLoX7J+gfOr9Ttb1
1Dkez0f0OwdrfU16fl7Lz275qb1xWrxxHnLPW2Tlb4plp6U/sZ676NX2dNF6
jtbx1vOlHkbojQuUmr7F0n1Z7SFUfi7veJVLnCiSJPuH1r6Q9d2TtR639rWs
fSSr3Psduvf7eupY+pPe/PJW+2/bTq8OJ7U8KSQ5l2i9L6z3kfV+tPr1TO/B
5nvZ+x7kfjhJpkNrPLH0adY8hPNYkiRj0ZrPWPMfax7i3R+w1jtenQD1gWQK
5HqfJNOn+P8ntN+Jn3Sv6gLK3eYFd6xQXQfyClU4dWWXvgX5hpB/B/FYEHcF
+XqQPwjvNfHDrtG4NYiXIvsAz+vxEk9mnV4XOhbsF2A8Qd6lZjwW6AXkPbpJ
9TbYf5D8R1vq6z+v7+vTqxfr/uLFC8qRbbfWn6xPDhWDZbW9MaLlqE/RrezU
cvgPoOvBegf3O/jQA5dfcubjerzYs0vzMqEc4yXiAcVqP5beIBZD+cFJoaW3
ifV8U9P/hKJ1v5YuxasHS03fYtHqv5b9Fr1xoixyPCFJMnda+0LWutvyx3nL
rfOnFg+ZPD70+p29cbZzib9NkmQ6tPwylv4z1HuQ/hqSJEmSJGPRWpdZ8xZL
92LNf6zvViydAHWAJEmSpIdYx4OIf3Jd9bOz+GUpH7lmWPUtiG/y5rXnXbl1
/iMajwX6DOhDRL8+UetPdtV+xi0a5wTxYPBdC95feO/hvQi9huhJRmv7Dur7
Td53WzWvEfINid3ri3vOWPTM4DlP6T4n4q40v+9DfiLoZFAfsr/QrUsJRcSP
QV4llMMvK/uv27Uc+h/kdUI56mVBFaAmvbguJEm2R0t3YcUnyT3vlUUrXtOX
qsR0I12UPG/7u0gdC0mSJEmmQ2+8IGsflX5kkiRJkiRJkiRJkiRJksyX0GFC
zyLl47V/b1TjoiBuCXQsEq9kTX38Mo3HKP++/7jFAcA+J767u3eyDARzSOM3
yL5nJ74ZdJ/y3f4G1b1AbwPdyA/PL+94UK+D/U+5r/j+X9wndDcoR/4M8ecO
q14IzwdxeWLbT5IkSZIkSZIkSZIkSZIkSZIkSZIkSZIkeaxE3BDE+0CeHehF
Kty5QfML4Ts45COSPMLx9R5NNuOn/ea2UuCyS3UeuC+Jk/aEfveHOLMSF2V1
1/kQTyb2/VlEPBvR84yrvgV2z5W8LSRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
zj0iDjPilyBPD/QQH6p+9haXl+lxntylegjRvxzS/EGx78PL+VXgmY7eAzoV
xDcRfcvzWj+4fxHybIhuP0mSJEmSJEmSJEmSJEmSJEmSJEmSJEmSZL8QcTxO
qf5nsth9y1mPfmz34S7di8RlSTc+Sah6qMLVXL23zr+0Rf9d4rrsKapwNXdt
jm4vSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk2Z9EXJrBVfdd+tQbI6p7kTg2
B4pS/XPLWXui20mSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEn2JxG/BnmaUI58
TchnFNtOkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkpzL/H91LC/g
   "]],
  ImageSize->{372, 37},
  PlotRange->{{0, 372}, {0, 37}}]], "Picture",
 CellMargins->{{54, 0}, {0, 0}},
 Magnification->1.]
}, Open  ]],

Cell["", "Spacer"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["       ",
  Background->GrayLevel[0.500008]],
 StyleBox["Overview",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 " "
}], "Section"],

Cell["The following areas will be discussed:", "Text"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Descriptive and exploratory statistics",
  FontWeight->"Bold"],
 ": descriptive measures, counting, charts, smoothing, transformations, \
clustering"
}], "Item"],

Cell[TextData[{
 StyleBox["Symbolic distributions",
  FontWeight->"Bold"],
 ": properties of distributions, random number generation, visualization"
}], "Item"],

Cell[TextData[{
 StyleBox["Model fitting and analysis",
  FontWeight->"Bold"],
 ": linear regression, nonlinear regression, generalized linear models \
including logit and probit, ANOVA, local and global optimization"
}], "Item"]
}, Open  ]],

Cell["\<\
Related graphics, data import, data operations and general symbolic and \
numeric computation will be seen in the context of examples.\
\>", "Text",
 CellChangeTimes->{{3.434987133782102*^9, 3.4349871487987843`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["       ",
  Background->GrayLevel[0.500008]],
 StyleBox["Overview",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 " ",
 StyleBox["Data accessibility",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.500008]]
}], "Subsection"],

Cell["\<\
Data that is to be analyzed often needs to be obtained from some external \
source.\
\>", "Text"],

Cell[CellGroupData[{

Cell["File import/export", "MoreExamplesSection"],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  ButtonBox["Import",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Import"]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  ButtonBox["Export",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Export"]], "InlineFormula"],
 " functions can import or export dozens of different file formats including \
numeric and tabular formats, plain or formatted text, and graphics formats."
}], "Text"],

Cell[TextData[{
 "A few formats of particular note for numeric data analysis include ",
 Cell[BoxData[
  ButtonBox["XLS",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/format/XLS"]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  ButtonBox["CSV",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/format/CSV"]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  ButtonBox["TSV",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/format/TSV"]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  ButtonBox["DBF",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/format/DBF"]], "InlineFormula"],
 ", and ",
 Cell[BoxData[
  ButtonBox["MDB",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/format/MDB"]], "InlineFormula"],
 ", but there are many others as well."
}], "Text",
 CellChangeTimes->{{3.435066632614512*^9, 3.4350666405364885`*^9}}],

Cell[TextData[{
 "Available formats can be displayed by evaluating ",
 Cell[BoxData[
  ButtonBox["$ImportFormats",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/$ImportFormats"]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  ButtonBox["$ExportFormats",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/$ExportFormats"]], "InlineFormula"],
 "."
}], "MathCaption"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"$ImportFormats", "//", "Length"}], ",", 
   RowBox[{"$ExportFormats", "//", "Length"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.4350665175976458`*^9, 3.43506652928522*^9}, {
  3.4350666503334885`*^9, 3.435066656302315*^9}}],

Cell["", "Spacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Databases
\
\>", "MoreExamplesSection"],

Cell[TextData[{
 StyleBox["DatabaseLink",
  FontSlant->"Italic"],
 ", included in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", allows users to integrate ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " with database management systems.  ",
 StyleBox["DatabaseLink",
  FontSlant->"Italic"],
 " is JDBC-compliant and works with all known databases.  It contains both a \
SQL and a ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " interface."
}], "Text"],

Cell["", "Text"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["       ",
  Background->GrayLevel[0.500008]],
 StyleBox["Descriptive Statistics",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]]
}], "Section"],

Cell[TextData[{
 "Many descriptive statistics are included in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 7."
}], "Text",
 CellChangeTimes->{{3.434109838362525*^9, 3.4341098763781495`*^9}}],

Cell["\<\
Here are 20 uniformly distributed random numbers between 0 and 10.\
\>", "MathCaption"],

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"RandomReal", "[", 
   RowBox[{"10", ",", "20"}], "]"}]}]], "Input"],

Cell["\<\
This gives descriptive measures of data based on the first 4 moments.\
\>", "MathCaption"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Mean", "[", "data", "]"}], ",", 
   RowBox[{"Variance", "[", "data", "]"}], ",", 
   RowBox[{"Skewness", "[", "data", "]"}], ",", 
   RowBox[{"Kurtosis", "[", "data", "]"}]}], "}"}]], "Input"],

Cell[TextData[{
 "The data can be visualized as a sequence using ",
 Cell[BoxData[
  ButtonBox["ListPlot",
   BaseStyle->"Link"]], "InlineFormula"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.434987202614399*^9, 3.4349872274283285`*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", "data", "]"}]], "Input",
 CellChangeTimes->{
  3.434987208130342*^9, {3.4420486167153063`*^9, 3.4420486320772543`*^9}, 
   3.442067084868074*^9}],

Cell["", "Spacer"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["       ",
  Background->GrayLevel[0.500008]],
 StyleBox["Descriptive Statistics",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 " ",
 StyleBox["Descriptive charts",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.500008]]
}], "Subsection"],

Cell[TextData[{
 "Graphics are extremely useful for understanding characteristics of data. \
Histograms, bar charts, pie charts, and more generalized sector and rectangle \
charts are newly added ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 7."
}], "Text"],

Cell["\<\
This gives default bar and pie charts for some frequency data.\
\>", "MathCaption",
 CellChangeTimes->{{3.434987627934633*^9, 3.4349876422478657`*^9}}],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"BarChart", "[", 
      RowBox[{"{", 
       RowBox[{"5", ",", "2", ",", "10", ",", "4", ",", "6"}], "}"}], "]"}], 
     ",", 
     RowBox[{"PieChart", "[", 
      RowBox[{"{", 
       RowBox[{"5", ",", "2", ",", "10", ",", "4", ",", "6"}], "}"}], "]"}]}],
     "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.434987511350539*^9, 3.4349875160070276`*^9}, {
  3.4420672817843237`*^9, 3.4420672960216*^9}, {3.44206733005669*^9, 
  3.442067338741008*^9}}],

Cell["\<\
Numerous options are available for modifying the styles and appearance of \
these charts.\
\>", "MathCaption",
 CellChangeTimes->{{3.434120659201174*^9, 3.4341206595194826`*^9}, {
   3.4349876785465994`*^9, 3.434987717642351*^9}, 3.4349877883647213`*^9}],

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "2", ",", "10", ",", "4", ",", "6"}], "}"}], ",", 
   RowBox[{"BarOrigin", "\[Rule]", "Left"}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<John\>\"", ",", "\"\<Mary\>\"", ",", "\"\<Bob\>\"", ",", 
      "\"\<Sally\>\"", ",", "\"\<Lucy\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4349877278147464`*^9, 3.4349877299242296`*^9}, {
  3.434987832804497*^9, 3.4349878987609987`*^9}, {3.4349885330903497`*^9, 
  3.434988714443384*^9}, {3.434997173547804*^9, 3.434997177157756*^9}}],

Cell["", "Spacer"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["       ",
  Background->GrayLevel[0.500008]],
 StyleBox["Descriptive Statistics",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 " ",
 StyleBox["Descriptive charts",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.500008]]
}], "Subsection"],

Cell["\<\
Returning to the random numbers previously generated, histograms and stem and \
leaf plots might be used to see the general distribution of values.\
\>", "Text",
 CellChangeTimes->{{3.434987404876049*^9, 3.43498747358298*^9}, {
  3.4349875335860524`*^9, 3.4349875570091267`*^9}, {3.4349888012290773`*^9, 
  3.434988882123844*^9}}],

Cell["This gives a histogram of the data.", "MathCaption",
 CellChangeTimes->{{3.434987627934633*^9, 3.4349876422478657`*^9}, {
  3.4350658042381935`*^9, 3.4350658088315907`*^9}}],

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"data", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.434987511350539*^9, 3.4349875160070276`*^9}, {
  3.4349888863271847`*^9, 3.434988889858615*^9}, {3.44204893844596*^9, 
  3.442048958038467*^9}}],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["StemLeafPlot",
   BaseStyle->"Link",
   ButtonData->"paclet:StatisticalPlots/ref/StemLeafPlot"]], 
  "InlineFormula"],
 " is defined in the ",
 ButtonBox["Statistical Plots",
  BaseStyle->"Link",
  ButtonData->"paclet:StatisticalPlots/guide/StatisticalPlotsPackage"],
 " package included with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". "
}], "MathCaption"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<StatisticalPlots`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.434988895515155*^9, 3.4349889042030993`*^9}}],

Cell[BoxData[
 RowBox[{"StemLeafPlot", "[", "data", "]"}]], "Input",
 CellChangeTimes->{{3.4349877278147464`*^9, 3.4349877299242296`*^9}, {
  3.434987832804497*^9, 3.4349878987609987`*^9}, {3.4349885330903497`*^9, 
  3.434988714443384*^9}, {3.4349889106096773`*^9, 3.4349889161568365`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["       ",
  Background->GrayLevel[0.500008]],
 StyleBox["Descriptive Statistics",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 " ",
 StyleBox["Additional measures",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.500008]]
}], "Subsection"],

Cell[TextData[{
 "Additional measures of location and dispersion, quantile\[Hyphen]based \
measures, and more general measures such as ",
 Cell[BoxData[
  ButtonBox["CentralMoment",
   BaseStyle->"Link"]], "InlineFormula"],
 " are included."
}], "Text",
 CellChangeTimes->{{3.4349891028538947`*^9, 3.434989155122196*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"tooltipped", "[", 
   RowBox[{"color_", ",", "fun_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"val", "=", 
      RowBox[{"fun", "[", "data", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"color", ",", 
      RowBox[{"Tooltip", "[", 
       RowBox[{
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "val"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"20", ",", "val"}], "}"}]}], "}"}], "]"}], ",", "fun"}], 
       "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.442672578357644*^9, 3.442672582092139*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"data", ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"MapThread", "[", 
     RowBox[{"tooltipped", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Red", ",", "Green", ",", "Blue"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Median", ",", "RootMeanSquare", ",", "GeometricMean"}], 
         "}"}]}], "}"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.442672578357644*^9, 3.442672582092139*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"StandardDeviation", "[", "data", "]"}], ",", 
   RowBox[{"MeanDeviation", "[", "data", "]"}], ",", 
   RowBox[{"MedianDeviation", "[", "data", "]"}]}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"Quantile", "[", 
  RowBox[{"data", ",", ".6"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"InterquartileRange", "[", "data", "]"}]], "Input"],

Cell["\<\
A box\[Hyphen]and\[Hyphen]whisker plot can be used to visualize the spread of \
the data.\
\>", "MathCaption",
 CellChangeTimes->{{3.36905937695545*^9, 3.36905940109499*^9}, {
  3.400341479884942*^9, 3.4003414998378115`*^9}, {3.43499031483782*^9, 
  3.434990320885005*^9}}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<StatisticalPlots`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.43499032332263*^9, 3.4349903299479685`*^9}}],

Cell[BoxData[
 RowBox[{"BoxWhiskerPlot", "[", "data", "]"}]], "Input",
 CellChangeTimes->{{3.36905925624211*^9, 3.36905926057004*^9}, {
  3.400339914920599*^9, 3.4003399595919023`*^9}, {3.400933505620567*^9, 
  3.4009335163548045`*^9}, {3.435065899933968*^9, 3.435065917229515*^9}}],

Cell["", "Spacer"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["       ",
  Background->GrayLevel[0.500008]],
 StyleBox["Descriptive Statistics",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 " ",
 StyleBox["Descriptive measures with matrices",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.500008]]
}], "Subsection"],

Cell["\<\
Descriptive functions also work on matrix data, returning the descriptive \
measures for columns.\
\>", "Text",
 CellChangeTimes->{{3.434991380180428*^9, 3.434991387712931*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"multidata", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"10", ",", 
     RowBox[{"{", 
      RowBox[{"125", ",", "3"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.442068120909504*^9, {3.442068277799686*^9, 3.4420683152308702`*^9}, {
   3.442068624748292*^9, 3.442068630602871*^9}}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ListPointPlot3D", "[", "multidata", "]"}], ",", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", "Large", "]"}], ",", "Red", ",", 
       RowBox[{"Point", "[", 
        RowBox[{"Mean", "[", "multidata", "]"}], "]"}], ",", "Green", ",", 
       RowBox[{"Point", "[", 
        RowBox[{"Median", "[", "multidata", "]"}], "]"}], ",", "Orange", ",", 
       
       RowBox[{"Point", "[", 
        RowBox[{"SpatialMedian", "[", "multidata", "]"}], "]"}]}], "}"}], 
     "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.442067967315325*^9, 3.44206800985999*^9}, {
  3.4420680648695173`*^9, 3.442068104968915*^9}, {3.442068144150568*^9, 
  3.4420681613971987`*^9}, {3.4437786298503523`*^9, 3.443778668335526*^9}, {
  3.443778750046833*^9, 3.443778821876306*^9}}],

Cell[BoxData[
 RowBox[{"MedianDeviation", "[", "multidata", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Quantile", "[", 
  RowBox[{"multidata", ",", ".6"}], "]"}]], "Input"],

Cell["", "Spacer"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["    ",
  Background->GrayLevel[0.500008]],
 StyleBox["   ",
  Background->GrayLevel[0.500008]],
 StyleBox["Descriptive Statistics",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 " ",
 StyleBox["Covariance and correlation",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.500008]]
}], "Subsection"],

Cell["\<\
The covariance and correlation between two lists of numbers can be computed.\
\>", "Text"],

Cell[BoxData[
 RowBox[{"data2", "=", 
  RowBox[{"RandomReal", "[", 
   RowBox[{"10", ",", "20"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Covariance", "[", 
  RowBox[{"data", ",", "data2"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Correlation", "[", 
  RowBox[{"data", ",", "data2"}], "]"}]], "Input"],

Cell["\<\
A side\[Hyphen]by\[Hyphen]side stem\[Hyphen]and\[Hyphen]leaf plot can be used \
to compare two univariate data sets.\
\>", "MathCaption",
 CellChangeTimes->{{3.36905937695545*^9, 3.36905945857679*^9}, 
   3.36906569159442*^9, {3.400342980521984*^9, 3.400342991037474*^9}}],

Cell[BoxData[
 RowBox[{"StemLeafPlot", "[", 
  RowBox[{"data", ",", "data2"}], "]"}]], "Input",
 CellChangeTimes->{{3.36905929183426*^9, 3.36905929752151*^9}}],

Cell["\<\
Covariance and correlation matrices can also be computed for matrices.\
\>", "MathCaption"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Covariance", "[", "multidata", "]"}], "//", 
  "MatrixForm"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Correlation", "[", "multidata", "]"}], "//", 
  "MatrixForm"}]], "Input"],

Cell[TextData[{
 "Some additional multivariate measures are included in the ",
 ButtonBox["Multivariate Statistics",
  BaseStyle->"Link",
  ButtonData->
   "paclet:MultivariateStatistics/guide/MultivariateStatisticsPackage"],
 " package."
}], "Text"],

Cell["", "Spacer"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["   ",
  Background->GrayLevel[0.500008]],
 StyleBox["  ",
  FontSlant->"Italic",
  Background->GrayLevel[0.500008]],
 StyleBox["  ",
  Background->GrayLevel[0.500008]],
 StyleBox["Descriptive Statistics",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 " ",
 StyleBox["Multivariate visualization",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.500008]]
}], "Subsection"],

Cell["\<\
Numerous visualization functions are included for visualizing multivariate \
data including histograms, point and bubble plots.\
\>", "Text",
 CellChangeTimes->{{3.4349906739524317`*^9, 3.434990675421492*^9}, {
  3.4349970771886387`*^9, 3.434997093363101*^9}, {3.4350709976738214`*^9, 
  3.435071023767739*^9}, {3.435331852541399*^9, 3.435331916135149*^9}}],

Cell[TextData[{
 "This gives a histogram for the first two dimensions of the multivariate \
data, and a histogram for ",
 Cell[BoxData[
  FormBox["10000", TraditionalForm]]],
 " bivariate normal points. "
}], "MathCaption"],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Histogram3D", "[", 
      RowBox[{
       RowBox[{"multidata", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], ",", "5"}], "]"}], ",", 
     RowBox[{"Histogram3D", "[", 
      RowBox[{"RandomReal", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"5000", ",", "2"}], "}"}]}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.4349906794067087`*^9, {3.4353314579945245`*^9, 3.435331504447649*^9}, {
   3.435331575728899*^9, 3.435331650228899*^9}, 3.435331688603899*^9, {
   3.442049446245577*^9, 3.442049488289587*^9}, {3.442049537376175*^9, 
   3.442049540270556*^9}, {3.442068425525321*^9, 3.442068444466722*^9}}],

Cell[TextData[{
 "Here the trivariate data are visualized as points and as bubbles with size \
based on the ",
 Cell[BoxData[
  FormBox["z", TraditionalForm]]],
 "-coordinate."
}], "MathCaption"],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ListPointPlot3D", "[", 
      RowBox[{"multidata", ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"PointSize", "[", ".025", "]"}]}]}], "]"}], ",", 
     RowBox[{"BubbleChart", "[", 
      RowBox[{"multidata", ",", 
       RowBox[{"BubbleScale", "\[Rule]", " ", "\"\<Diameter\>\""}], ",", 
       RowBox[{"BubbleSizes", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{".025", ",", ".075"}], "}"}]}]}], "]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.4349906780626745`*^9, {3.4349970949883614`*^9, 3.4349970972856035`*^9}, 
   3.435064069176602*^9, {3.435331403228899*^9, 3.4353314329945245`*^9}, {
   3.436115558514155*^9, 3.436115576341564*^9}, {3.442068497483078*^9, 
   3.442068583955348*^9}, {3.442068711290655*^9, 3.4420687482765703`*^9}}],

Cell["\<\
Four\[Hyphen]dimensional data can be visualized as a \
three\[Hyphen]dimensional bubble chart.\
\>", "MathCaption",
 CellChangeTimes->{{3.4353320212757745`*^9, 3.435332051072649*^9}}],

Cell[BoxData[
 RowBox[{"BubbleChart3D", "[", 
  RowBox[{
   RowBox[{"RandomReal", "[", 
    RowBox[{"10", ",", 
     RowBox[{"{", 
      RowBox[{"25", ",", "4"}], "}"}]}], "]"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", " ", "\"\<AvocadoColors\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.4349906806100874`*^9, {3.4353315180257745`*^9, 3.4353315379945245`*^9}, {
   3.442068781960507*^9, 3.44206878229718*^9}, {3.442068823888701*^9, 
   3.44206887692614*^9}}],

Cell["", "Spacer"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 StyleBox["      ",
  FontSlant->"Italic",
  Background->GrayLevel[0.500008]],
 StyleBox["Descriptive Statistics",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  FontSlant->"Italic",
  Background->GrayLevel[0.500008]],
 " ",
 StyleBox["Counting functions",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.500008]]
}], "Subsection"],

Cell["\<\
Counting based on some categorization often provides a useful description of \
data.\
\>", "Text"],

Cell["This counts continuous data in bins of width 2 from 0 to 10.", \
"MathCaption"],

Cell[BoxData[
 RowBox[{"BinCounts", "[", 
  RowBox[{"data", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "10", ",", "2"}], "}"}]}], "]"}]], "Input"],

Cell["Here explicit cutoffs of 0, 4, 5, 9, and 10 are used.", "MathCaption",
 CellChangeTimes->{3.4341099470968995`*^9}],

Cell[BoxData[
 RowBox[{"BinCounts", "[", 
  RowBox[{"data", ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"0", ",", "4", ",", "5", ",", "9", ",", "10"}], "}"}], "}"}]}], 
  "]"}]], "Input"],

Cell["\<\
Multidimensional data can be counted in bins of appropriate dimension.\
\>", "MathCaption"],

Cell[BoxData[
 RowBox[{"BinCounts", "[", 
  RowBox[{"multidata", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "10", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "10", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "10", ",", "5"}], "}"}]}], "]"}]], "Input"],

Cell["", "Spacer"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["    ",
  Background->GrayLevel[0.500008]],
 StyleBox["  ",
  FontSlant->"Italic",
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 StyleBox["Descriptive Statistics",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 " ",
 StyleBox["Counting functions",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.500008]]
}], "Subsection"],

Cell["\<\
For discrete or nominal data, it is often useful to compute counts for the \
distinct values.\
\>", "Text"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["Tally",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Tally"]], "InlineFormula"],
 " counts the frequencies of distinct elements"
}], "MathCaption"],

Cell[BoxData[
 RowBox[{"tallies", "=", 
  RowBox[{"Tally", "[", 
   RowBox[{"RandomChoice", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", "24"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.442070111337254*^9, {3.4420701442598963`*^9, 3.442070148540308*^9}}],

Cell[BoxData[
 RowBox[{"BarChart3D", "[", 
  RowBox[{
   RowBox[{"tallies", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"#", ",", "24"}], "]"}], "&"}], "/@", 
      RowBox[{"tallies", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ")"}]}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.442069125539266*^9, 3.442069127717112*^9}, 
   3.442069297246523*^9, {3.442069373846993*^9, 3.442069407558592*^9}, {
   3.442069438575674*^9, 3.442069590108721*^9}, {3.4420699364308233`*^9, 
   3.442069997243244*^9}, {3.442070158376243*^9, 3.442070168730029*^9}, {
   3.442070212110381*^9, 3.4420702125763807`*^9}}],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["Commonest",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Commonest"]], "InlineFormula"],
 " gives a list of the most frequently occurring elements."
}], "MathCaption"],

Cell[BoxData[
 RowBox[{"Commonest", "[", 
  RowBox[{"{", 
   RowBox[{
   "c", ",", "a", ",", "b", ",", "a", ",", "d", ",", "c", ",", "c", ",", "b", 
    ",", "a"}], "}"}], "]"}]], "Input"],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  ButtonBox["Count",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Count"]], "InlineFormula"],
 " function can be used to obtain more general counts based on a pattern."
}], "Text"],

Cell["\<\
For instance, the number of occurrences of a particular element in a list or \
the number of even numbers in a list of integers might be counted.\
\>", "MathCaption"],

Cell[BoxData[
 RowBox[{"Count", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "c", ",", "a", ",", "b", ",", "a", ",", "d", ",", "c", ",", "c", ",", "b",
      ",", "a"}], "}"}], ",", "b"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Count", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "3", ",", "2", ",", "1", ",", "4", ",", "1", ",", "5", ",", "3", ",", "3",
      ",", "4", ",", "3"}], "}"}], ",", 
   RowBox[{"_", "?", "EvenQ"}]}], "]"}]], "Input"],

Cell["", "Spacer"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["       ",
  Background->GrayLevel[0.500008]],
 StyleBox["Descriptive Statistics",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 " ",
 StyleBox["Data transformation",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.500008]]
}], "Subsection"],

Cell[TextData[{
 "Built\[Hyphen]in smoothers include ",
 Cell[BoxData[
  ButtonBox["MovingAverage",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/MovingAverage"]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  ButtonBox["MovingMedian",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/MovingMedian"]], "InlineFormula"],
 ", and ",
 Cell[BoxData[
  ButtonBox["ExponentialMovingAverage",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ExponentialMovingAverage"]], "InlineFormula"],
 ". Data can be shifted and scaled using ",
 Cell[BoxData[
  ButtonBox["Standardize",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Standardize"]], "InlineFormula"],
 ", and a new set of filters of particular interest for image analysis has \
been added in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 7."
}], "Text"],

Cell["\<\
This gives a two\[Hyphen]term moving median.\
\>", "MathCaption",
 CellChangeTimes->{{3.435077509556466*^9, 3.435077510322081*^9}}],

Cell[BoxData[
 RowBox[{"MovingMedian", "[", 
  RowBox[{"data", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.435076479679217*^9, 3.435076497382002*^9}, {
   3.435077514181407*^9, 3.4350775179001093`*^9}, 3.442070323839138*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", 
       RowBox[{"2", ";;", 
        RowBox[{"-", "2"}]}], "]"}], "]"}], ",", 
     RowBox[{"MovingMedian", "[", 
      RowBox[{"data", ",", "3"}], "]"}]}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"False", ",", "True"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.442070369362656*^9, 3.4420704156069517`*^9}}],

Cell["\<\
Weighted moving averages can be obtained by giving a list of weights.\
\>", "MathCaption"],

Cell[BoxData[
 RowBox[{"MovingAverage", "[", 
  RowBox[{"data", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "/", "3"}], ",", 
     RowBox[{"2", "/", "3"}], ",", 
     RowBox[{"1", "/", "3"}], ",", 
     RowBox[{"1", "/", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4350777950684366`*^9, 3.4350778039589477`*^9}}],

Cell["\<\
Standardize shifts by the mean and scales by the standard deviation by \
default.\
\>", "MathCaption",
 CellChangeTimes->{{3.435077672820001*^9, 3.4350776996009083`*^9}}],

Cell[BoxData[
 RowBox[{"Standardize", "[", "data", "]"}]], "Input",
 CellChangeTimes->{{3.4350777015227585`*^9, 3.4350777071789365`*^9}}],

Cell["\<\
Image-related filters adjust at the ends to maintain the data length or \
dimensions.\
\>", "MathCaption",
 CellChangeTimes->{{3.435077776193678*^9, 3.435077781271738*^9}, {
  3.4350778409740987`*^9, 3.4350779008639574`*^9}, {3.4354940430643883`*^9, 
  3.435494045564356*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"data", ",", 
     RowBox[{"MeanFilter", "[", 
      RowBox[{"data", ",", "3"}], "]"}]}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"False", ",", "True"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.435077752115861*^9, 3.435077757334544*^9}, {
  3.442070530146365*^9, 3.442070559905994*^9}}],

Cell[TextData[{
 "Other smoothers and transformations can be constructed using functions such \
as ",
 Cell[BoxData[
  ButtonBox["ListCorrelate",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ListCorrelate"]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  ButtonBox["ListConvolve",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ListConvolve"]], "InlineFormula"],
 ", and arithmetic and linear algebra functions."
}], "Text",
 CellChangeTimes->{{3.434991101694541*^9, 3.4349911038355494`*^9}, {
  3.4350777351473284`*^9, 3.435077738694158*^9}}],

Cell["", "Spacer"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["       ",
  Background->GrayLevel[0.500008]],
 StyleBox["D",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox["escriptive Statistics",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 " ",
 StyleBox["Data transformation via linear algebra",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.500008]]
}], "Subsection"],

Cell["\<\
As an example of using linear algebra to perform a transformation, we \
consider the Mahalanobis transform which transforms multivariate data to \
uncorrelated data with mean 0 and unit variances. \
\>", "Text",
 CellChangeTimes->{{3.435332700603899*^9, 3.4353327116507745`*^9}, {
  3.435332775291399*^9, 3.435332880947649*^9}}],

Cell["\<\
A Mahalanobis transform of multivariate data can be performed directly with a \
little linear algebra.\
\>", "MathCaption"],

Cell[BoxData[
 RowBox[{"chol", "=", 
  RowBox[{"CholeskyDecomposition", "[", 
   RowBox[{"Inverse", "[", 
    RowBox[{"Covariance", "[", "multidata", "]"}], "]"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Short", "[", 
  RowBox[{
   RowBox[{"decorrelated", "=", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "multidata", "]"}], "-", 
       RowBox[{"Mean", "[", "multidata", "]"}]}], "]"}], ".", 
     RowBox[{"Transpose", "[", "chol", "]"}]}]}], ",", "6"}], "]"}]], "Input",\

 CellChangeTimes->{{3.442136542120213*^9, 3.442136555072999*^9}}],

Cell["\<\
The transformed data are decorrelated with mean 0 and unit variances up to \
numerical error.\
\>", "MathCaption",
 CellChangeTimes->{3.4341155101867757`*^9}],

Cell[BoxData[
 RowBox[{"Mean", "[", "decorrelated", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Covariance", "[", "decorrelated", "]"}], "//", 
  "MatrixForm"}]], "Input"],

Cell["", "Spacer"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["    ",
  Background->GrayLevel[0.500008]],
 StyleBox["  ",
  FontSlant->"Italic",
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 StyleBox["Descriptive Statistics",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 " ",
 StyleBox["Clustering data",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.500008]]
}], "Subsection"],

Cell["\<\
Clustering of data is often used to separate data into groups, or to try to \
identify subgroups within a data set.\
\>", "Text"],

Cell[TextData[{
 "The main clustering function is ",
 Cell[BoxData[
  ButtonBox["FindClusters",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/FindClusters"]], "InlineFormula"],
 ", which can be used on numeric, binary/Boolean, or string data.  A number \
of distance and dissimilarity functions are also included and can be found ",
 ButtonBox["here",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/DistanceAndSimilarityMeasures"],
 ". "
}], "Text",
 CellChangeTimes->{{3.4350769420324802`*^9, 3.4350769470167913`*^9}, {
  3.43507704753113*^9, 3.435077047703003*^9}}],

Cell["\<\
This gives the Euclidean, Manhattan and Chessboard distance between two \
vectors.\
\>", "MathCaption",
 CellChangeTimes->{{3.435077122905165*^9, 3.4350771378737235`*^9}, {
  3.443284014455987*^9, 3.443284034486918*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Through", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "EuclideanDistance", ",", "ManhattanDistance", ",", 
      "ChessboardDistance"}], "}"}], "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.3", ",", "7", ",", "4.2", ",", "1.3", ",", "10"}], "}"}]}], 
    "]"}], "]"}], "//", "Column"}]], "Input",
 CellChangeTimes->{{3.435077071655821*^9, 3.435077107452238*^9}, {
  3.442070806063697*^9, 3.442070835191551*^9}, {3.4420710245547123`*^9, 
  3.442071030244649*^9}, {3.442136635362108*^9, 3.442136639184794*^9}}],

Cell["\<\
This gives a Boolean dissimilarity between two binary vectors.\
\>", "MathCaption",
 CellChangeTimes->{{3.4350771433580284`*^9, 3.4350771638108916`*^9}, 
   3.4379367902654943`*^9}],

Cell[BoxData[
 RowBox[{"DiceDissimilarity", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0"}],
     "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4350771677327166`*^9, 3.4350772172633324`*^9}, 
   3.4350772545753546`*^9}],

Cell["This gives the edit distance between two strings.", "MathCaption",
 CellChangeTimes->{{3.4350771433580284`*^9, 3.4350771638108916`*^9}, {
  3.435077366152052*^9, 3.435077374526944*^9}}],

Cell[BoxData[
 RowBox[{"EditDistance", "[", 
  RowBox[{
  "\"\<This is a string.\>\"", ",", "\"\<This string is different.\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4350773762300477`*^9, 3.435077421370095*^9}}],

Cell[TextData[{
 "Used with ",
 Cell[BoxData[
  ButtonBox["FindClusters",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/FindClusters"]], "InlineFormula"],
 ", these define measures for separating data."
}], "Text"],

Cell["", "Spacer"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["       ",
  Background->GrayLevel[0.500008]],
 StyleBox["Descriptive Statistics",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 " ",
 StyleBox["Numeric clustering example",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.500008]]
}], "Subsection"],

Cell["\<\
As an example, we will start with 10 clusters that are samples from bivariate \
normal distributions.\
\>", "Text"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<MultivariateStatistics`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.434992403612861*^9, 3.4349924131925187`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"origclusters", "=", 
   RowBox[{"BlockRandom", "[", 
    RowBox[{
     RowBox[{"SeedRandom", "[", "123456789", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"muvals", "=", 
      RowBox[{"RandomReal", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"10", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"sigmavals", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Block", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"s1", "=", 
             RowBox[{"RandomReal", "[", "]"}]}], ",", 
            RowBox[{"s2", "=", 
             RowBox[{"RandomReal", "[", "]"}]}], ",", "s12"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"s12", "=", 
            RowBox[{
             RowBox[{"RandomReal", "[", "]"}], "*", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"s1", "*", "s2"}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"s1", ",", "s12"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"s12", ",", "s2"}], "}"}]}], "}"}]}]}], "]"}], ",", 
        RowBox[{"{", "10", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Join", "[", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"RandomReal", "[", 
          RowBox[{
           RowBox[{"MultinormalDistribution", "[", 
            RowBox[{"#1", ",", "#2"}], "]"}], ",", 
           RowBox[{"RandomInteger", "[", 
            RowBox[{"{", 
             RowBox[{"20", ",", "75"}], "}"}], "]"}]}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"muvals", ",", "sigmavals"}], "}"}]}], "]"}], "]"}]}], 
    "]"}]}], ";"}]], "Input"],

Cell["Plotting the data shows the original clusters of the data.", \
"MathCaption"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", "origclusters", "]"}]], "Input"],

Cell[TextData[{
 "Next we will mix up the elements of the original data so the data are not \
already grouped, and use ",
 Cell[BoxData[
  ButtonBox["FindClusters",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/FindClusters"]], "InlineFormula"],
 " to identify clusters in the data."
}], "MathCaption"],

Cell[BoxData[
 RowBox[{
  RowBox[{"newclusters", "=", 
   RowBox[{"BlockRandom", "[", 
    RowBox[{
     RowBox[{"SeedRandom", "[", "1", "]"}], ";", 
     RowBox[{"RandomSample", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{"origclusters", ",", "1"}], "]"}], "]"}]}], "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"clusters", "=", 
   RowBox[{"FindClusters", "[", "newclusters", "]"}]}], ";"}]], "Input"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["FindClusters",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/FindClusters"]], "InlineFormula"],
 " identifies 3 distinct clusters, which looks quite reasonable given the \
scatter of the data."
}], "MathCaption"],

Cell[BoxData[
 RowBox[{"Length", "[", "clusters", "]"}]], "Input"],

Cell["", "Spacer"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["       ",
  Background->GrayLevel[0.500008]],
 StyleBox["Descriptive Statistics",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 " ",
 StyleBox["Visualization of clusters",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.500008]]
}], "Subsection"],

Cell["\<\
For numeric data in up to three dimensions, the clusters are easy to \
visualize with list plotting functions. \
\>", "Text"],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ListPlot", "[", "origclusters", "]"}], ",", 
     RowBox[{"ListPlot", "[", "clusters", "]"}]}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", " ", "All"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", " ", "Thick"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.442050279426442*^9, 3.442050297299876*^9}, 
   3.4420711383832483`*^9, 3.442071205670331*^9, {3.442137190358883*^9, 
   3.442137272060958*^9}, {3.443779124614517*^9, 3.443779138381378*^9}, {
   3.4437791911330023`*^9, 3.443779192066884*^9}}],

Cell["\<\
The desired number of clusters can be specified if that number is known.\
\>", "MathCaption"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"FindClusters", "[", 
   RowBox[{"newclusters", ",", "4"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.442050165343884*^9, 3.442050206084907*^9}, 
   3.442071257830597*^9}],

Cell["", "Spacer"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["       ",
  Background->GrayLevel[0.500008]],
 StyleBox["Descriptive Statistics",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 " ",
 StyleBox["Cluster hierarchies",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.500008]]
}], "Subsection"],

Cell[TextData[{
 "A cluster hierarchy can also be visualized using dendrogram plots. The ",
 ButtonBox["Hierarchical Clustering",
  BaseStyle->"Link",
  ButtonData->
   "paclet:HierarchicalClustering/guide/HierarchicalClusteringPackage"],
 " package is needed for this type of visualization."
}], "Text"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<HierarchicalClustering`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.434993341731686*^9, 3.434993345669816*^9}}],

Cell["Here is some example text, split into string elements.", "MathCaption"],

Cell[BoxData[
 RowBox[{
  RowBox[{"textdata", "=", 
   RowBox[{
   "StringSplit", "[", 
    "\"\<This talk will give a broad overview of statistics in Mathematica. \
Statistics functions and other technologies, such as import/export \
capabilities and visualization functions, as they relate to statistical \
computation will be discussed.\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.442137335843274*^9}],

Cell["\<\
The following generates a dendrogram labeling the leaves with the string \
elements they represent.\
\>", "MathCaption",
 CellChangeTimes->{3.437936802972034*^9}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"DendrogramPlot", "[", 
    RowBox[{"textdata", ",", 
     RowBox[{"LeafLabels", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"#", "&"}], ")"}]}], ",", 
     RowBox[{"Orientation", "\[Rule]", "Left"}]}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.442050362811325*^9, 3.442050373857665*^9}, {
  3.442050452437312*^9, 3.442050468130804*^9}}],

Cell["", "Spacer"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["       ",
  Background->GrayLevel[0.500008]],
 StyleBox["Symbolic Distributions ",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 " "
}], "Section"],

Cell[TextData[{
 "A total of 39 univariate continuous and discrete distributions are built \
into the kernel.  An additional 8 distributions derived from multivariate \
distributions are included in the ",
 ButtonBox["Multivariate Statistics",
  BaseStyle->"Link",
  ButtonData->
   "paclet:MultivariateStatistics/guide/MultivariateStatisticsPackage"],
 " package."
}], "Text"],

Cell[TextData[{
 "Newly added distributions in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 7 include ",
 Cell[BoxData[
  ButtonBox["InverseChiSquareDistribution",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/InverseChiSquareDistribution"]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  ButtonBox["InverseGammaDistribution",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/InverseGammaDistribution"]], "InlineFormula"],
 ", and ",
 Cell[BoxData[
  ButtonBox["LevyDistribution",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/LevyDistribution"]], "InlineFormula"],
 ". ",
 Cell[BoxData[
  ButtonBox["StudentTDistribution",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/StudentTDistribution"]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  ButtonBox["MultivariateStudentTDistribution",
   BaseStyle->"Link",
   ButtonData->
    "paclet:MultivariateStatistics/ref/MultivariateTDistribution"]], 
  "InlineFormula"],
 " have been extended to include location and scale parameters. "
}], "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["       ",
  Background->GrayLevel[0.500008]],
 StyleBox["Symbolic Distributions",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 " ",
 StyleBox["Distribution properties",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.500008]]
}], "Subsection"],

Cell["\<\
Many properties of distributions such as PDF, CDF, mean, variance and \
characteristic function are available.\
\>", "Text",
 CellChangeTimes->{{3.43551171738743*^9, 3.43551173409723*^9}}],

Cell[TextData[{
 "This gives moment\[Hyphen]based measures ",
 "for a noncentral ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Chi]", "2"], TraditionalForm]]],
 " distribution",
 "."
}], "MathCaption",
 CellChangeTimes->{3.4349927425889635`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Mean", "[", 
    RowBox[{"NoncentralChiSquareDistribution", "[", 
     RowBox[{"\[Nu]", ",", "\[Lambda]"}], "]"}], "]"}], ",", 
   RowBox[{"Variance", "[", 
    RowBox[{"NoncentralChiSquareDistribution", "[", 
     RowBox[{"\[Nu]", ",", "\[Lambda]"}], "]"}], "]"}], ",", 
   RowBox[{"Skewness", "[", 
    RowBox[{"NoncentralChiSquareDistribution", "[", 
     RowBox[{"\[Nu]", ",", "\[Lambda]"}], "]"}], "]"}], ",", 
   RowBox[{"Kurtosis", "[", 
    RowBox[{"NoncentralChiSquareDistribution", "[", 
     RowBox[{"\[Nu]", ",", "\[Lambda]"}], "]"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{3.434992751512266*^9}],

Cell[TextData[{
 "General expectations can be computed as well.  Here is the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]]],
 " raw moment of a Poisson distribution."
}], "MathCaption",
 CellChangeTimes->{
  3.4349927738439636`*^9, {3.4361124587851686`*^9, 3.436112459982472*^9}}],

Cell[BoxData[
 RowBox[{"ExpectedValue", "[", 
  RowBox[{
   RowBox[{"x", "^", "n"}], ",", 
   RowBox[{"PoissonDistribution", "[", "\[Mu]", "]"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.4349927647175035`*^9, {3.436112445192256*^9, 3.43611245058012*^9}}],

Cell["\<\
This is the characteristic function of a Laplace distribution.\
\>", "MathCaption",
 CellChangeTimes->{{3.434992827368151*^9, 3.4349928330565615`*^9}}],

Cell[BoxData[
 RowBox[{"CharacteristicFunction", "[", 
  RowBox[{
   RowBox[{"LaplaceDistribution", "[", 
    RowBox[{"\[Mu]", ",", "\[Beta]"}], "]"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{3.4349928394794636`*^9}],

Cell["", "Spacer"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["  ",
  Background->GrayLevel[0.500008]],
 StyleBox["     ",
  Background->GrayLevel[0.500008]],
 StyleBox["Symbolic Distributions",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 " ",
 StyleBox["Visualization",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.500008]]
}], "Subsection"],

Cell["\<\
Functions for plotting functions can be useful for visualizing symbolic \
properties of distributions, such as density functions.\
\>", "Text",
 CellChangeTimes->{{3.4349919666210785`*^9, 3.434991968105691*^9}, 
   3.434992861639259*^9}],

Cell["\<\
This plots the cumulative distribution function for a gamma distribution.\
\>", "MathCaption",
 CellChangeTimes->{{3.434991958885466*^9, 3.434991971481231*^9}, 
   3.4349928675151987`*^9}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"GammaDistribution", "[", 
      RowBox[{"3", ",", "5"}], "]"}], ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "50"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.4349919545410213`*^9, 3.4349928727816663`*^9}],

Cell["\<\
This shows the probability mass function for a binomial distribution.\
\>", "MathCaption",
 CellChangeTimes->{{3.4349919575102463`*^9, 3.4349919732002563`*^9}, 
   3.434992879579629*^9}],

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"BinomialDistribution", "[", 
      RowBox[{"20", ",", ".3"}], "]"}], ",", "i"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.434991956260046*^9, 3.434992887815321*^9, 
  3.434992927212249*^9}],

Cell[TextData[{
 "This plots the density for a bivariate ",
 StyleBox["t",
  FontSlant->"Italic"],
 "-distribution."
}], "MathCaption",
 CellChangeTimes->{3.4349929445118914`*^9}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<MultivariateStatistics`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.4349929616240034`*^9, 3.4349929717818785`*^9}}],

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"MultivariateTDistribution", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"1", "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "}"}], ",", "20"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]], "Input"],

Cell["", "Spacer"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["       ",
  Background->GrayLevel[0.500008]],
 StyleBox["Symbolic Distributions",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 " ",
 StyleBox["Random number generation",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.500008]]
}], "Subsection"],

Cell[TextData[{
 "Random numbers can be generated from each of the defined distributions. \
They are obtained using ",
 Cell[BoxData[
  ButtonBox["RandomReal",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/RandomReal"]], "InlineFormula"],
 " for continuous distributions and ",
 Cell[BoxData[
  ButtonBox["RandomInteger",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/RandomInteger"]], "InlineFormula"],
 " for discrete distributions."
}], "Text"],

Cell["\<\
Random elements can be generated one at a time or in a list or tensor of \
arbitrary dimension.\
\>", "MathCaption"],

Cell[BoxData[
 RowBox[{"RandomInteger", "[", 
  RowBox[{"GeometricDistribution", "[", 
   RowBox[{"1", "/", "3"}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Histogram", "[", 
      RowBox[{
       RowBox[{"RandomInteger", "[", 
        RowBox[{
         RowBox[{"GeometricDistribution", "[", 
          RowBox[{"1", "/", "3"}], "]"}], ",", "500"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "/", "2"}], ",", 
         RowBox[{"39", "/", "2"}], ",", "1"}], "}"}], ",", 
       "\"\<ProbabilityDensity\>\""}], "]"}], ",", 
     RowBox[{"DiscretePlot", "[", 
      RowBox[{
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"GeometricDistribution", "[", 
          RowBox[{"1", "/", "3"}], "]"}], ",", "n"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "20"}], "}"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4420716079322853`*^9, 3.442071618818462*^9}, {
  3.442071677806448*^9, 3.4420717590794163`*^9}, {3.442072460914605*^9, 
  3.442072582681983*^9}, {3.442137478520122*^9, 3.442137485721349*^9}}],

Cell[BoxData[
 RowBox[{"RandomInteger", "[", 
  RowBox[{
   RowBox[{"GeometricDistribution", "[", 
    RowBox[{"1", "/", "3"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "3"}], "}"}]}], "]"}]], "Input"],

Cell["\<\
Elements from continuous distributions can also be generated in arbitrary \
precision.\
\>", "MathCaption"],

Cell[BoxData[
 RowBox[{"RandomReal", "[", 
  RowBox[{
   RowBox[{"GammaDistribution", "[", 
    RowBox[{
     FractionBox["1", "2"], ",", "4"}], "]"}], ",", 
   RowBox[{"WorkingPrecision", "\[Rule]", "20"}]}], "]"}]], "Input"],

Cell["The same holds for multivariate distributions.", "MathCaption"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mu", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigma", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"8", "12.5", 
        RowBox[{"-", "6"}], 
        RowBox[{"-", "1"}]},
       {"12.5", "27", "0.5", 
        RowBox[{"-", "4"}]},
       {
        RowBox[{"-", "6"}], "0.5", "25", 
        RowBox[{"-", "3"}]},
       {
        RowBox[{"-", "1"}], 
        RowBox[{"-", "4"}], 
        RowBox[{"-", "3"}], "1.4"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.442050950192133*^9, 3.442050987613057*^9}}],

Cell["\<\
This give a random observation from a four\[Hyphen]dimensional normal \
distribution.\
\>", "MathCaption"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<MultivariateStatistics`\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"RandomReal", "[", 
  RowBox[{"MultinormalDistribution", "[", 
   RowBox[{"mu", ",", "sigma"}], "]"}], "]"}]], "Input"],

Cell["\<\
The correlations between dimensions can be visualized using a pairwise \
scatter plot.\
\>", "MathCaption"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<StatisticalPlots`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.4421375588519993`*^9, 3.442137590323411*^9}, {
  3.4421378836956463`*^9, 3.442137887368278*^9}}],

Cell[BoxData[
 RowBox[{"PairwiseScatterPlot", "[", 
  RowBox[{"RandomReal", "[", 
   RowBox[{
    RowBox[{"MultinormalDistribution", "[", 
     RowBox[{"mu", ",", "sigma"}], "]"}], ",", "100"}], "]"}], "]"}]], "Input",\

 CellChangeTimes->{{3.4421375588519993`*^9, 3.442137590323411*^9}, 
   3.4421378836956463`*^9}],

Cell[TextData[{
 "Additional random functions include ",
 Cell[BoxData[
  ButtonBox["RandomChoice",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/RandomChoice"]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  ButtonBox["RandomSample",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/RandomSample"]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  ButtonBox["RandomComplex",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/RandomComplex"]], "InlineFormula"],
 ", and ",
 Cell[BoxData[
  ButtonBox["RandomPrime",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/RandomPrime"]], "InlineFormula"],
 " for sampling with replacement, sampling without replacement, complex \
numbers, and primes, respectively."
}], "Text",
 CellChangeTimes->{{3.434993030728809*^9, 3.4349931158361735`*^9}, {
  3.435511770919639*^9, 3.4355117781859856`*^9}}],

Cell["", "Spacer"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["       ",
  Background->GrayLevel[0.500008]],
 StyleBox["Model Fitting and Analysis ",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 " "
}], "Section"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 7 adds a new framework and functionality for linear and nonlinear \
regression: logit, probit, and generalized linear models. An extensive set of \
optimization functions, linear algebra functions and a package for analysis \
of variance (ANOVA) all provide capabilities of interest in model fitting and \
analysis."
}], "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["       ",
  Background->GrayLevel[0.500008]],
 StyleBox["Model Fitting and Analysis",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 " ",
 StyleBox["Linear regression",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.500008]]
}], "Subsection"],

Cell["Here we import some data from an Excel spreadsheet.", "Text"],

Cell[BoxData[
 RowBox[{"lineardata", "=", 
  RowBox[{"Import", "[", 
   RowBox[{
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", 
       "\"\<linearfitdata.xls\>\""}], "}"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Sheets\>\"", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 PageWidth->WindowWidth,
 CellChangeTimes->{{3.434112023251281*^9, 3.434112024050782*^9}, {
  3.4341138534211597`*^9, 3.434113853953736*^9}, {3.438088473327364*^9, 
  3.4380884740617485`*^9}, {3.442051048448125*^9, 3.44205107103708*^9}}],

Cell[TextData[{
 "The data can be fitted to a linear model using ",
 Cell[BoxData[
  ButtonBox["LinearModelFit",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/LinearModelFit"]], "InlineFormula"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.434112033393976*^9, 3.434112038865075*^9}}],

Cell[BoxData[
 RowBox[{"lm", "=", 
  RowBox[{"LinearModelFit", "[", 
   RowBox[{"lineardata", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}]], "Input",
 PageWidth->WindowWidth,
 CellChangeTimes->{{3.434112048756946*^9, 3.4341120565795193`*^9}, {
   3.4341121136106267`*^9, 3.434112114237687*^9}, 3.4341138585746155`*^9, 
   3.438088489327569*^9}],

Cell[BoxData[
 RowBox[{"Normal", "[", "lm", "]"}]], "Input",
 CellChangeTimes->{{3.442051101928609*^9, 3.442051105915276*^9}}],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["LinearModelFit",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/LinearModelFit"]], "InlineFormula"],
 " produces a ",
 Cell[BoxData[
  ButtonBox["FittedModel",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/FittedModel"]], "InlineFormula"],
 " object from which diagnostics and results and be obtained.  "
}], "Text",
 CellChangeTimes->{3.435333567385149*^9}],

Cell[TextData[{
 "A list of available results can be obtained by asking for the ",
 StyleBox["\"Properties\"", "MR"],
 "."
}], "MathCaption"],

Cell[BoxData[
 RowBox[{"lm", "[", "\"\<Properties\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.4341121810352535`*^9, 3.4341121858479385`*^9}}],

Cell["", "Spacer"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["       ",
  Background->GrayLevel[0.500008]],
 StyleBox["Model Fitting and Analysis",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 " ",
 StyleBox["Linear regression diagnostics",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.500008]]
}], "Subsection"],

Cell["\<\
Individual properties or lists of properties can be obtained in the same \
manner.\
\>", "Text",
 CellChangeTimes->{{3.434112227806865*^9, 3.434112247423827*^9}}],

Cell["\<\
Here the standardized residuals and Cook\[CloseCurlyQuote]s distances are \
extracted.\
\>", "MathCaption"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"stresids", ",", "cookd"}], "}"}], "=", 
  RowBox[{"lm", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<StandardizedResiduals\>\"", ",", "\"\<CookDistances\>\""}], 
    "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4341122527667856`*^9, 3.434112266351375*^9}}],

Cell["\<\
In a linear regression, we might wish to look at plots of the standardized \
residuals and Cook\[CloseCurlyQuote]s distances to assess approximate \
normality of errors and influence of individual points.\
\>", "MathCaption",
 CellChangeTimes->{{3.434112591172591*^9, 3.4341125913606005`*^9}, {
  3.434113067409542*^9, 3.4341130689603176`*^9}}],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ListPlot", "[", "stresids", "]"}], ",", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"cookd", ",", 
       RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.43534243542308*^9, 3.43534243996564*^9}, {
  3.4353424753349524`*^9, 3.4353424894795437`*^9}, {3.4354995274510136`*^9, 
  3.4354995511115456`*^9}, {3.442051172081203*^9, 3.44205119481553*^9}, {
  3.442138105616831*^9, 3.442138114452799*^9}}],

Cell["\<\
Residuals can also be viewed against predictors to check for systematic \
trends which would violate the model assumptions.\
\>", "MathCaption",
 CellChangeTimes->{{3.4355120984917855`*^9, 3.4355121850098476`*^9}}],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"resids", "=", 
       RowBox[{"lm", "[", "\"\<FitResiduals\>\"", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"lineardata", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "i"}], "]"}], "]"}], ",", "resids"}], "}"}],
           "]"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", "y", ",", "z"}], "}"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<residual\>\""}], 
           "}"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "3"}], "}"}]}], "]"}]}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", 
    RowBox[{"12", " ", "72"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4355119392005243`*^9, 3.435512089122682*^9}, 
   3.438088490921339*^9, {3.442051241583201*^9, 3.44205129889443*^9}}],

Cell["", "Spacer"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["       ",
  Background->GrayLevel[0.500008]],
 StyleBox["Model Fitting and Analysis",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 " ",
 StyleBox["Linear regression function evaluation",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.500008]]
}], "Subsection"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["FittedModel",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/FittedModel"]], "InlineFormula"],
 " objects can also be evaluated at a point."
}], "Text",
 CellChangeTimes->{{3.434112847555243*^9, 3.434112913599726*^9}}],

Cell[TextData[{
 "Here the fitted function is evaluated for particular values of ",
 Cell[BoxData[
  StyleBox["x", "TI"]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  StyleBox["y", "TI"]], "InlineFormula"],
 ", and ",
 Cell[BoxData[
  StyleBox["z", "TI"]], "InlineFormula"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.434112901474861*^9, 3.4341129554560747`*^9}, {
  3.4355122183151937`*^9, 3.4355122232130384`*^9}}],

Cell[BoxData[
 RowBox[{"lm", "[", 
  RowBox[{"1.5", ",", "3", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.434112960593998*^9, 3.434112977198262*^9}}],

Cell[TextData[{
 "This plots the fitted function when ",
 Cell[BoxData[
  RowBox[{
   StyleBox["z", "TI"], "=", "1"}]], "InlineFormula"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.434112984466544*^9, 3.4341130072269173`*^9}, 
   3.4355122289640565`*^9}],

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"lm", "[", 
    RowBox[{"x", ",", "y", ",", "1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4341130083704185`*^9, 3.434113017925702*^9}, {
  3.4341130875382957`*^9, 3.4341130937100697`*^9}, {3.4355072239566946`*^9, 
  3.4355072294107447`*^9}, {3.442138212911422*^9, 3.442138226583456*^9}}],

Cell["", "Spacer"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["       ",
  Background->GrayLevel[0.500008]],
 StyleBox["Model Fitting and Analysis",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 " ",
 StyleBox["Linear regression tables",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.500008]]
}], "Subsection"],

Cell["Common tabular results can be obtained.", "Text",
 CellChangeTimes->{{3.43551017314615*^9, 3.435510185444709*^9}}],

Cell["\<\
Here are analysis of variance and parameter tables for the fitted model.\
\>", "MathCaption",
 CellChangeTimes->{{3.4355103397792597`*^9, 3.43551035720852*^9}}],

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"StyleTable", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{"FontSize", "\[Rule]", "18"}], "}"}]}], "]"}], "&"}], "/@", 
    RowBox[{"lm", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<ANOVATable\>\"", ",", "\"\<ParameterTable\>\""}], "}"}], 
     "]"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", " ", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4355100342161007`*^9, 3.4355100696496453`*^9}, {
  3.44205605823391*^9, 3.442056084047284*^9}, {3.442056132723372*^9, 
  3.442056161089897*^9}, {3.44205619150198*^9, 3.442056195665875*^9}}],

Cell["Unformatted tabular results are also available.", "Text",
 CellChangeTimes->{{3.43551017314615*^9, 3.435510208960635*^9}}],

Cell["\<\
These are the entries from the ANOVA table and the parameter table.\
\>", "MathCaption",
 CellChangeTimes->{{3.4355102179345284`*^9, 3.435510226029954*^9}, {
  3.435510362370852*^9, 3.4355103750807524`*^9}}],

Cell[BoxData[
 RowBox[{"lm", "[", "\"\<ANOVATableEntries\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.4355101334258585`*^9, 3.4355101489409637`*^9}}],

Cell[BoxData[
 RowBox[{"lm", "[", "\"\<ParameterTableEntries\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.4355101520223613`*^9, 3.4355101581040664`*^9}}],

Cell["\<\
Quantities from the tables, such as mean squares and t\[Hyphen]statistics, \
can also be extracted for use in further computations.\
\>", "MathCaption",
 CellChangeTimes->{{3.4355102556411*^9, 3.4355103055786552`*^9}}],

Cell[BoxData[
 RowBox[{"lm", "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<ANOVATableMeanSquares\>\"", ",", "\"\<ParameterTStatistics\>\""}], 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.435510078637437*^9, 3.435510119505512*^9}}],

Cell["", "Spacer"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["       ",
  Background->GrayLevel[0.500008]],
 StyleBox["Model Fitting and Analysis",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 " ",
 StyleBox["Generalized linear models (GLM)",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.500008]]
}], "Subsection"],

Cell["For linear regression, the model is of the form", "Text",
 CellChangeTimes->{{3.434112612965945*^9, 3.4341126385971403`*^9}, {
   3.434992072481764*^9, 3.434992075638519*^9}, {3.435510526398472*^9, 
   3.4355105683180103`*^9}, 3.4355108494225554`*^9}],

Cell[TextData[{
 " ",
 Cell[BoxData[
  RowBox[{
   StyleBox[
    OverscriptBox[
     StyleBox["y", "TI"], "^"], "TI"], "=", 
   RowBox[{
    SubscriptBox[
     StyleBox["\[Beta]", "TR"], 
     StyleBox["0", "TR"]], "+", 
    RowBox[{
     SubscriptBox[
      StyleBox["\[Beta]", "TR"], 
      StyleBox["1", "TR"]], " ", 
     SubscriptBox[
      StyleBox["f", "TI"], 
      StyleBox["1", "TR"]]}], "+", 
    RowBox[{
     SubscriptBox[
      StyleBox["\[Beta]", "TR"], 
      StyleBox["2", "TR"]], " ", 
     SubscriptBox[
      StyleBox["f", "TI"], 
      StyleBox["2", "TR"]]}], "+", 
    StyleBox["\[Ellipsis]", "TR"]}]}]], "InlineFormula"]
}], "Text",
 CellChangeTimes->{{3.434112612965945*^9, 3.4341126385971403`*^9}, {
  3.434992072481764*^9, 3.434992075638519*^9}, {3.435510526398472*^9, 
  3.4355105812969728`*^9}},
 TextAlignment->-0.5],

Cell[TextData[{
 "for basis functions ",
 Cell[BoxData[
  SubscriptBox[
   StyleBox["f", "TI"], 
   StyleBox["1", "TR"]]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  SubscriptBox[
   StyleBox["f", "TI"], 
   StyleBox["2", "TR"]]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  StyleBox["\[Ellipsis]", "TR"]], "InlineFormula"],
 ". Each observed ",
 Cell[BoxData[
  SubscriptBox[
   StyleBox["y", "TI"], 
   StyleBox["i", "TI"]]], "InlineFormula"],
 " is assumed to be from a normal distribution with mean ",
 Cell[BoxData[
  StyleBox[
   OverscriptBox[
    StyleBox[
     SubscriptBox[
      StyleBox["y", "TI"], 
      StyleBox["i", "TI"]], "TI"], "^"], "TI"]]],
 "."
}], "Text",
 CellChangeTimes->{{3.434112612965945*^9, 3.4341126385971403`*^9}, {
  3.434992072481764*^9, 3.434992075638519*^9}, {3.435510526398472*^9, 
  3.4355105742242503`*^9}, {3.435510633109463*^9, 3.435510828917861*^9}}],

Cell["For generalized linear models, the model is of the form", "Text",
 CellChangeTimes->{{3.434112612965945*^9, 3.4341126385971403`*^9}, {
  3.434992072481764*^9, 3.434992075638519*^9}, {3.435510526398472*^9, 
  3.4355105683180103`*^9}, {3.435510839070819*^9, 3.435510847725299*^9}}],

Cell[TextData[{
 " ",
 Cell[BoxData[
  RowBox[{
   StyleBox[
    OverscriptBox[
     StyleBox["y", "TI"], "^"], "TI"], "=", 
   RowBox[{
    SuperscriptBox[
     StyleBox["g", "TI"], 
     RowBox[{"-", 
      StyleBox["1", "TR"]}]], 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox[
       StyleBox["\[Beta]", "TR"], 
       StyleBox["0", "TR"]], "+", 
      RowBox[{
       SubscriptBox[
        StyleBox["\[Beta]", "TR"], 
        StyleBox["1", "TR"]], " ", 
       SubscriptBox[
        StyleBox["f", "TI"], 
        StyleBox["1", "TR"]]}], "+", 
      RowBox[{
       SubscriptBox[
        StyleBox["\[Beta]", "TR"], 
        StyleBox["2", "TR"]], " ", 
       SubscriptBox[
        StyleBox["f", "TI"], 
        StyleBox["2", "TR"]]}], "+", 
      StyleBox["\[Ellipsis]", "TR"]}], ")"}]}]}]], "InlineFormula"]
}], "Text",
 CellChangeTimes->{{3.434112612965945*^9, 3.4341126385971403`*^9}, {
   3.434992072481764*^9, 3.434992075638519*^9}, {3.435510526398472*^9, 
   3.4355105812969728`*^9}, 3.435510859957779*^9},
 TextAlignment->-0.5],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 " is an invertible function called the ",
 StyleBox["link",
  FontSlant->"Italic"],
 " function, and each observed ",
 Cell[BoxData[
  SubscriptBox[
   StyleBox["y", "TI"], 
   StyleBox["i", "TI"]]], "InlineFormula"],
 " is assumed to be from an exponential family distribution with mean ",
 Cell[BoxData[
  StyleBox[
   OverscriptBox[
    StyleBox[
     SubscriptBox[
      StyleBox["y", "TI"], 
      StyleBox["i", "TI"]], "TI"], "^"], "TI"]]],
 ". Special cases include linear, logistic and probit regression, log-linear \
models for count data, and gamma and inverse Gaussian models. Note that the \
errors are not independent of the ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]]],
 " values."
}], "Text"],

Cell["\<\
Built\[Hyphen] functions for generalized linear model include:\
\>", "Text",
 CellChangeTimes->{{3.4355111562699237`*^9, 3.435511175665988*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["LinearModelFit",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/LinearModelFit"]], "InlineFormula"],
 ": linear regression"
}], "Item"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["LogitModelFit",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/LogitModelFit"]], "InlineFormula"],
 ": logistic regression"
}], "Item"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["ProbitModelFit",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ProbitModelFit"]], "InlineFormula"],
 ": probit regression"
}], "Item"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["GeneralizedLinearModelFit",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/GeneralizedLinearModelFit"]], "InlineFormula"],
 ": generalized linear models with specified distributional structures and \
links"
}], "Item"]
}, Open  ]],

Cell["\<\
Each of these functions supports continuous and nominal predictor variables.\
\>", "Text",
 CellChangeTimes->{{3.4355113413142576`*^9, 3.4355113615093794`*^9}}],

Cell["", "Spacer"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["       ",
  Background->GrayLevel[0.500008]],
 StyleBox["Model Fitting and Analysis",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 " ",
 StyleBox["GLM: logit and probit models",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.500008]]
}], "Subsection"],

Cell[TextData[{
 "Logit and probit models are commonly used to model probabilities. The \
observed probabilities are assumed to be success probabilities realized from \
binomial distributions. Logit and probit models can be fitted via the ",
 Cell[BoxData[
  ButtonBox["LogitModelFit",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/LogitModelFit"]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  ButtonBox["ProbitModelFit",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ProbitModelFit"]], "InlineFormula"],
 " functions."
}], "Text",
 CellChangeTimes->{{3.436118003505559*^9, 3.436118005068839*^9}, {
  3.4378469431856613`*^9, 3.437846998661125*^9}, {3.4378491428924274`*^9, 
  3.437849160607336*^9}, {3.437929893859988*^9, 3.4379299332004642`*^9}}],

Cell["\<\
Here is some data with responses written as number of successes over number \
of trials.\
\>", "MathCaption",
 CellChangeTimes->{{3.4378510742083063`*^9, 3.437851131699672*^9}}],

Cell[BoxData[
 RowBox[{"binomdata", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"3", "/", "8"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.5", ",", 
      RowBox[{"2", "/", "10"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2.1", ",", 
      RowBox[{"4", "/", "6"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2.5", ",", 
      RowBox[{"3", "/", "7"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3.4", ",", 
      RowBox[{"8", "/", "11"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", 
      RowBox[{"12", "/", "14"}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.4341126420591497`*^9, 3.4341126450042067`*^9}, {
   3.4341126979682484`*^9, 3.434112698532195*^9}, 3.4341127487704916`*^9, 
   3.434113863963032*^9, 3.434992078513979*^9, {3.437847000928302*^9, 
   3.4378470633772874`*^9}}],

Cell["The fractions are treated as probabilities.", "MathCaption",
 CellChangeTimes->{{3.4341126639277687`*^9, 3.4341127119416065`*^9}, {
  3.4349920829834433`*^9, 3.4349920843742914`*^9}, {3.437851138157092*^9, 
  3.437851167098218*^9}, {3.437929222040888*^9, 3.4379292221815014`*^9}}],

Cell[BoxData[
 RowBox[{"logit1", "=", 
  RowBox[{"LogitModelFit", "[", 
   RowBox[{"binomdata", ",", "x", ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.434112700709658*^9, 3.4341127077746634`*^9}, 
   3.434992087406026*^9, {3.4378470667545986`*^9, 3.437847080076215*^9}}],

Cell["\<\
Weights can be used to incorporate the number of trials, in this case the \
denominators of the probabilities.\
\>", "MathCaption",
 CellChangeTimes->{{3.4378511700845795`*^9, 3.4378512131132*^9}, {
  3.437929233024349*^9, 3.4379292608657827`*^9}}],

Cell[BoxData[
 RowBox[{"logit2", "=", 
  RowBox[{"LogitModelFit", "[", 
   RowBox[{"binomdata", ",", "x", ",", "x", ",", 
    RowBox[{"Weights", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"8", ",", "10", ",", "6", ",", "7", ",", "11", ",", "14"}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4378470858457885`*^9, 3.4378471058438487`*^9}}],

Cell["", "Spacer"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["       ",
  Background->GrayLevel[0.500008]],
 StyleBox["Model Fitting and Analysis",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 " ",
 StyleBox["GLM: logit and probit models",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.500008]]
}], "Subsection"],

Cell[TextData[{
 "The functional form as well as numerous results for a fitted function can \
be obtained from the ",
 Cell[BoxData[
  ButtonBox["FittedModel",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/FittedModel"]], "InlineFormula"],
 " as was the case for linear models."
}], "Text",
 CellChangeTimes->{{3.437929296815916*^9, 3.437929340406039*^9}}],

Cell["The fitted models with and without weights differ somewhat.", \
"MathCaption",
 CellChangeTimes->{{3.437929279426738*^9, 3.437929293691176*^9}, {
  3.437929384402378*^9, 3.4379294200869093`*^9}}],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Normal", "[", "logit1", "]"}], ",", "\"\<   \>\"", ",", 
    RowBox[{"Normal", "[", "logit2", "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.4421383446848497`*^9, 3.442138427657987*^9}}],

Cell["\<\
The available properties differ somewhat from those for linear models.\
\>", "MathCaption",
 CellChangeTimes->{{3.4379301674934697`*^9, 3.4379302230044756`*^9}}],

Cell[BoxData[
 RowBox[{"logit1", "[", "\"\<Properties\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.437930202256202*^9, 3.4379302087087903`*^9}}],

Cell["Here are the parameter tables for the two logit models.", "MathCaption",
 CellChangeTimes->{{3.4379294223679695`*^9, 3.437929444584871*^9}, {
  3.437930280343455*^9, 3.437930281468361*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"logit1", "[", "\"\<ParameterTable\>\"", "]"}], ",", 
   RowBox[{"logit2", "[", "\"\<ParameterTable\>\"", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.4378492794989176`*^9, 3.4378493012321234`*^9}}],

Cell["", "Spacer"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["       ",
  Background->GrayLevel[0.500008]],
 StyleBox["Model Fitting and Analysis",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 " ",
 StyleBox["GLM: logit and probit models",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.500008]]
}], "Subsection"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["ProbitModelFit",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ProbitModelFit"]], "InlineFormula"],
 " is the analogous function for probit models. The general features and \
available results are the same as for ",
 Cell[BoxData[
  ButtonBox["LogitModelFit",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/LogitModelFit"]], "InlineFormula"],
 "."
}], "Text",
 CellChangeTimes->{{3.437930287905326*^9, 3.4379304199099665`*^9}}],

Cell["This is a probit model for the same data.", "MathCaption",
 CellChangeTimes->{{3.437929580026726*^9, 3.437929593963066*^9}}],

Cell[BoxData[
 RowBox[{"probit", "=", 
  RowBox[{"ProbitModelFit", "[", 
   RowBox[{"binomdata", ",", "x", ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.437929489362395*^9, 3.4379295999625673`*^9}}],

Cell[TextData[{
 "The difference of the two functions can be plotted to see there is only a \
small difference between the ",
 Cell[BoxData["logit1"], "MR"],
 " and ",
 Cell[BoxData["probit"], "MR"],
 " fitted functions."
}], "MathCaption"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"logit1", "[", "x", "]"}], "-", 
    RowBox[{"probit", "[", "x", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.437929607008856*^9, 3.4379296438495407`*^9}}],

Cell["", "Spacer"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["       ",
  Background->GrayLevel[0.500008]],
 StyleBox["Model Fitting and Analysis",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 " ",
 StyleBox["GLM: Poisson count models",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.500008]]
}], "Subsection"],

Cell[TextData[{
 "Logit and probit models are generalized linear models for probability \
responses. These models could equivalently be fit via ",
 Cell[BoxData[
  ButtonBox["GeneralizedLinearModelFit",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/GeneralizedLinearModelFit"]], "InlineFormula"],
 " with ",
 StyleBox["\"Binomial\"", "MR"],
 " ",
 Cell[BoxData[
  ButtonBox["ExponentialFamily",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ExponentialFamily"]], "InlineFormula"],
 " option and an appropriate choice of ",
 Cell[BoxData[
  ButtonBox["LinkFunction",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/LinkFunction"]], "InlineFormula"],
 ". "
}], "Text"],

Cell["\<\
Models of count data commonly assume Poisson distributed responses. Predictor \
variables can be continuous (real\[Hyphen]valued) or nominal (taking on one \
of a finite number of distinct names or categories).\
\>", "Text",
 CellChangeTimes->{{3.437934672273569*^9, 3.4379348243465724`*^9}}],

Cell["Here is some count data for two categorical variables.", "MathCaption",
 CellChangeTimes->{{3.436118003505559*^9, 3.436118005068839*^9}, {
  3.4378478174013414`*^9, 3.4378478299878893`*^9}, {3.437934839475638*^9, 
  3.437934892442997*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"countdata", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "agree", ",", "53"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "disagree", ",", "24"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "undecided", ",", "13"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "agree", ",", "78"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "disagree", ",", "48"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "undecided", ",", "110"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "agree", ",", "20"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "disagree", ",", "58"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "undecided", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "agree", ",", "42"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "disagree", ",", "38"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "undecided", ",", "4"}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.4341126420591497`*^9, 3.4341126450042067`*^9}, {
   3.4341126979682484`*^9, 3.434112698532195*^9}, 3.4341127487704916`*^9, 
   3.434113863963032*^9, 3.434992078513979*^9, {3.4379348939277706`*^9, 
   3.437935079852734*^9}}],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  ButtonBox["NominalVariables",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/NominalVariables"]], "InlineFormula"],
 " option can be used to specify which variables are to be treated as nominal."
}], "Text",
 CellChangeTimes->{{3.437935169329904*^9, 3.4379351957901397`*^9}, 
   3.4379352299555707`*^9, 3.437935270200761*^9}],

Cell["The default Poisson model is a log-linear model.", "MathCaption",
 CellChangeTimes->{{3.4341126639277687`*^9, 3.4341127119416065`*^9}, {
   3.4349920829834433`*^9, 3.4349920843742914`*^9}, {3.4379352742174654`*^9, 
   3.437935286580162*^9}, 3.437936828994652*^9}],

Cell[BoxData[
 RowBox[{"loglinmodel", "=", 
  RowBox[{"GeneralizedLinearModelFit", "[", 
   RowBox[{"countdata", ",", 
    RowBox[{"{", 
     RowBox[{"group", ",", "opinion"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"group", ",", "opinion"}], "}"}], ",", 
    RowBox[{"ExponentialFamily", "\[Rule]", "\"\<Poisson\>\""}], ",", 
    RowBox[{"NominalVariables", "\[Rule]", "All"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.434112700709658*^9, 3.4341127077746634`*^9}, 
   3.434992087406026*^9, {3.437935083635*^9, 3.4379351527160645`*^9}, {
   3.43793520848105*^9, 3.437935212825968*^9}}],

Cell[TextData[{
 "As with continuous predictors, the ",
 Cell[BoxData[
  ButtonBox["FittedModel",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/FittedModel"]], "InlineFormula"],
 " can be evaluated at a particular point. Terms arising from nominal \
variables are represented as ",
 Cell[BoxData[
  ButtonBox["DiscreteIndicator",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/DiscreteIndicator"]], "InlineFormula"],
 " functions."
}], "Text",
 CellChangeTimes->{{3.43793548100741*^9, 3.437935517329671*^9}, {
   3.4379355534643817`*^9, 3.4379355918340673`*^9}, 3.4379368311358523`*^9}],

Cell[TextData[{
 "These are the predicted count for group a and agree, and the predicted \
function for group ",
 StyleBox["a", "MR"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.4379355952881207`*^9, 3.437935645082752*^9}, {
  3.437935715476669*^9, 3.4379357289802976`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"loglinmodel", "[", 
    RowBox[{"a", ",", "agree"}], "]"}], ",", 
   RowBox[{"loglinmodel", "[", 
    RowBox[{"a", ",", "opinion"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.437935406690564*^9, 3.437935440730962*^9}}],

Cell["\<\
Other forms of Poisson model can be fitted by specifying a different \
invertible link function.\
\>", "Text",
 CellChangeTimes->{{3.437935737482582*^9, 3.437935782400903*^9}}],

Cell["This gives a linear Poisson count model.", "MathCaption",
 CellChangeTimes->{{3.4379357869646297`*^9, 3.4379358132842026`*^9}}],

Cell[BoxData[
 RowBox[{"linmodel", "=", 
  RowBox[{"GeneralizedLinearModelFit", "[", 
   RowBox[{"countdata", ",", 
    RowBox[{"{", 
     RowBox[{"group", ",", "opinion"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"group", ",", "opinion"}], "}"}], ",", 
    RowBox[{"ExponentialFamily", "\[Rule]", "\"\<Poisson\>\""}], ",", 
    RowBox[{"NominalVariables", "\[Rule]", "All"}], ",", 
    RowBox[{"LinkFunction", "\[Rule]", "\"\<IdentityLink\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.4379352963953*^9, 3.4379353179948545`*^9}}],

Cell["\<\
This model is easily visualized using the charting functions.\
\>", "MathCaption",
 CellChangeTimes->{{3.443780505377714*^9, 3.443780534303816*^9}, 
   3.443780639162862*^9}],

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"linmodel", "[", 
        RowBox[{"a", ",", "#"}], "]"}], ",", 
       RowBox[{"linmodel", "[", 
        RowBox[{"b", ",", "#"}], "]"}], ",", 
       RowBox[{"linmodel", "[", 
        RowBox[{"c", ",", "#"}], "]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"agree", ",", "disagree", ",", "undecided"}], "}"}]}], ",", 
   RowBox[{"ChartElementFunction", "\[Rule]", "\"\<GlassRectangle\>\""}], ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<agree\>\"", ",", "\"\<disagree\>\"", ",", "\"\<undecided\>\""}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\""}], "}"}]}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4437799596346483`*^9, 3.4437800101139317`*^9}, {
  3.44378007558885*^9, 3.443780094926303*^9}, {3.443780340549735*^9, 
  3.4437803860999403`*^9}}],

Cell["", "Spacer"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["       ",
  Background->GrayLevel[0.500008]],
 StyleBox["Model Fitting and Analysis",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 " ",
 StyleBox["GLM: models for other distributions",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.500008]]
}], "Subsection"],

Cell["\<\
Linear models with normal or Gaussian errors, binomial logistic and probit \
models, and log\[Hyphen]linear models for counts are among the most widely \
used generalized linear models. Gamma and inverse Gaussian models are \
commonly used for positive responses which have much greater variability as \
the predicted value increases.\
\>", "Text",
 CellChangeTimes->{{3.436118003505559*^9, 3.436118005068839*^9}, {
  3.4383629761186676`*^9, 3.4383632077139*^9}, {3.4383634560279894`*^9, 
  3.438363459121759*^9}}],

Cell["\<\
The following inputs fit gamma and inverse Gaussian models to the data set \
used in linear regression earlier.\
\>", "MathCaption",
 CellChangeTimes->{{3.4341126639277687`*^9, 3.4341127119416065`*^9}, {
  3.4349920829834433`*^9, 3.4349920843742914`*^9}, {3.4383642585900917`*^9, 
  3.4383642971039915`*^9}}],

Cell[BoxData[
 RowBox[{"gammafit", "=", 
  RowBox[{"GeneralizedLinearModelFit", "[", 
   RowBox[{"lineardata", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
    RowBox[{"ExponentialFamily", "\[Rule]", "\"\<Gamma\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.4341126420591497`*^9, 3.4341126450042067`*^9}, {
   3.4341126979682484`*^9, 3.434112698532195*^9}, 3.4341127487704916`*^9, 
   3.434113863963032*^9, 3.434992078513979*^9, {3.4383632586673512`*^9, 
   3.438363289542549*^9}, {3.442138700648212*^9, 3.442138710160821*^9}, 
   3.442138861372542*^9}],

Cell[BoxData[
 RowBox[{"ivfit", "=", 
  RowBox[{"GeneralizedLinearModelFit", "[", 
   RowBox[{"lineardata", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
    RowBox[{"ExponentialFamily", "\[Rule]", "\"\<InverseGaussian\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.434112700709658*^9, 3.4341127077746634`*^9}, 
   3.434992087406026*^9, {3.438363295058209*^9, 3.4383633043863935`*^9}, {
   3.4421387195336847`*^9, 3.4421387282918377`*^9}, 3.442138870398082*^9}],

Cell["\<\
Gamma models assume an error variance that grows as the square of the \
predicted value, while inverse Gaussian models assume a cubic relationship. \
The canonical link function is the reciprocal link for a gamma model and the \
inverse square link for an inverse Gaussian model. The fitted function is the \
inverse of the link function applied to the linear combination of basis \
functions.\
\>", "Text",
 CellChangeTimes->{{3.438364301885027*^9, 3.4383644011774535`*^9}, {
  3.4383644336759977`*^9, 3.4383645413751135`*^9}}],

Cell["\<\
Here the linear regression, gamma, and inverse Gaussian fitted functions.\
\>", "MathCaption",
 CellChangeTimes->{{3.4341126639277687`*^9, 3.4341127119416065`*^9}, {
  3.4349920829834433`*^9, 3.4349920843742914`*^9}, {3.4383642585900917`*^9, 
  3.4383642971039915`*^9}, {3.438364568014886*^9, 3.4383645954202585`*^9}}],

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"lm", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"gammafit", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"ivfit", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.438363379605625*^9, 3.4383634081839333`*^9}, {
  3.4383635431847973`*^9, 3.43836354990359*^9}, {3.442051662302948*^9, 
  3.4420516703802834`*^9}}],

Cell["", "Spacer"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["       ",
  Background->GrayLevel[0.500008]],
 StyleBox["Model Fitting and Analysis",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 " ",
 StyleBox["GLM: non-default links and quasi\[Hyphen]likelihood",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.500008]]
}], "Subsection"],

Cell["\<\
Any function that is invertible for the response domain can be a valid link \
function. For instance, the identity link which is the canonical link for \
Gaussian models (linear regression models) could also be used for gamma or \
inverse Gaussian model\
\>", "Text",
 CellChangeTimes->{{3.438364605373065*^9, 3.43836470851039*^9}}],

Cell["\<\
Here we obtain linear gamma and inverse Gaussian fits for the data.\
\>", "MathCaption",
 CellChangeTimes->{{3.4383647170257425`*^9, 3.438364734150194*^9}}],

Cell[BoxData[
 RowBox[{"lineargammafit", "=", 
  RowBox[{"GeneralizedLinearModelFit", "[", 
   RowBox[{"lineardata", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
    RowBox[{"ExponentialFamily", "\[Rule]", "\"\<Gamma\>\""}], ",", 
    RowBox[{"LinkFunction", "\[Rule]", "\"\<IdentityLink\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.4341126420591497`*^9, 3.4341126450042067`*^9}, {
   3.4341126979682484`*^9, 3.434112698532195*^9}, 3.4341127487704916`*^9, 
   3.434113863963032*^9, 3.434992078513979*^9, {3.4383632586673512`*^9, 
   3.438363289542549*^9}, {3.4383633218552556`*^9, 3.4383633431366415`*^9}}],

Cell[BoxData[
 RowBox[{"linearivfit", "=", 
  RowBox[{"GeneralizedLinearModelFit", "[", 
   RowBox[{"lineardata", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
    RowBox[{"ExponentialFamily", "\[Rule]", "\"\<InverseGaussian\>\""}], ",", 
    
    RowBox[{"LinkFunction", "\[Rule]", "\"\<IdentityLink\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.434112700709658*^9, 3.4341127077746634`*^9}, 
   3.434992087406026*^9, {3.438363295058209*^9, 3.438363352121074*^9}}],

Cell["\<\
Note that the parameter estimates differ because the error structure is \
different for the three linear fits.\
\>", "MathCaption",
 CellChangeTimes->{{3.4383647427592936`*^9, 3.4383647952264776`*^9}}],

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"lm", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"lineargammafit", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
    RowBox[{"linearivfit", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.438363379605625*^9, 3.4383634081839333`*^9}, {
  3.4383634718405905`*^9, 3.4383634751374865`*^9}, {3.438363526622191*^9, 
  3.438363538512892*^9}, {3.442051751608727*^9, 3.4420517582890263`*^9}}],

Cell[TextData[{
 "Quasi\[Hyphen]likelihood structures can also be used to define the error \
structure via the variance as a function of the mean. For named \
distributions, there are quasi-likelihood structures which define the \
likelihood up to a multiplicative constant. For ",
 StyleBox["\"Gaussian\"", "MR"],
 ", ",
 StyleBox["\"Gamma\"", "MR"],
 ", and ",
 StyleBox["\"InverseGaussian\"", "MR"],
 " models, the variance functions are 1, ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Mu]", "2"], TraditionalForm]]],
 ", and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Mu]", "3"], TraditionalForm]]],
 "."
}], "Text"],

Cell["\<\
The quasi-likelihood versions of normal, gamma and inverse Gaussian models \
differ only in small numeric differences.\
\>", "MathCaption",
 CellChangeTimes->{{3.438365416478367*^9, 3.438365465477426*^9}}],

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"GeneralizedLinearModelFit", "[", 
      RowBox[{"lineardata", ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
       RowBox[{"ExponentialFamily", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<QuasiLikelihood\>\"", ",", 
          RowBox[{"\"\<VarianceFunction\>\"", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", "^", "k"}], "&"}], ")"}]}]}], "}"}]}], ",", 
       RowBox[{"LinkFunction", "\[Rule]", "\"\<IdentityLink\>\""}]}], "]"}], "//",
      "Normal"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2", ",", "3"}], "}"}]}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4383634908719625`*^9, 3.438363521528408*^9}, {
  3.438363558497395*^9, 3.438363569169338*^9}, {3.442051808495488*^9, 
  3.442051815140965*^9}}],

Cell["", "Spacer"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["       ",
  Background->GrayLevel[0.500008]],
 StyleBox["Model Fitting and Analysis",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 " ",
 StyleBox["Nonlinear regression",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.500008]]
}], "Subsection"],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  ButtonBox["NonlinearModelFit",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/NonlinearModelFit"]], "InlineFormula"],
 " function works for nonlinear least squares models in much the same way the \
other model fit functions we have just seen work with linear and generalized \
linear models."
}], "Text",
 CellChangeTimes->{{3.434112612965945*^9, 3.4341126385971403`*^9}, {
  3.437937105459571*^9, 3.437937154260797*^9}}],

Cell["\<\
This fits the previously used linear data set to a nonlinear model.\
\>", "MathCaption",
 CellChangeTimes->{{3.4380898385465317`*^9, 3.438089858468534*^9}}],

Cell[BoxData[
 RowBox[{"nlm", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"lineardata", ",", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"a", "*", "x"}], "+", 
      RowBox[{"b", "*", "y", "*", "z"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4341126420591497`*^9, 3.4341126450042067`*^9}, {
   3.4341126979682484`*^9, 3.434112698532195*^9}, 3.4341127487704916`*^9, 
   3.434113863963032*^9, 3.438088492499484*^9, {3.4383659982328215`*^9, 
   3.438366010482587*^9}, {3.438366183416766*^9, 3.438366187432314*^9}, {
   3.438366359882128*^9, 3.438366458848978*^9}, {3.4383664994419484`*^9, 
   3.43836650300438*^9}, {3.4383665347068963`*^9, 3.438366534831894*^9}}],

Cell["\<\
Nonlinear model properties differ somewhat from linear and generalized linear \
properties.\
\>", "MathCaption",
 CellChangeTimes->{{3.4341126639277687`*^9, 3.4341127119416065`*^9}, {
  3.438088350965682*^9, 3.4380883953571596`*^9}, {3.4380884261858764`*^9, 
  3.4380884533895235`*^9}}],

Cell[BoxData[
 RowBox[{"nlm", "[", "\"\<Properties\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.434112700709658*^9, 3.4341127077746634`*^9}}],

Cell["Here we obtain the functional form of the fitted model.", "MathCaption"],

Cell[BoxData[
 RowBox[{"Normal", "[", "nlm", "]"}]], "Input",
 CellChangeTimes->{{3.4341127209334316`*^9, 3.434112727575476*^9}, {
   3.442051958332156*^9, 3.44205198972167*^9}, 3.442054069820277*^9, {
   3.442059663835105*^9, 3.4420596835662527`*^9}}],

Cell["", "Spacer"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["       ",
  Background->GrayLevel[0.500008]],
 StyleBox["Model Fitting and Analysis",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 " ",
 StyleBox["Nonlinear regression: starting values",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.500008]]
}], "Subsection"],

Cell["\<\
Fitting nonlinear models requires an iterative process. Choosing good \
starting values for parameters can be important to get good results. By \
default all parameters have starting value 1.\
\>", "Text",
 CellChangeTimes->{{3.434112612965945*^9, 3.4341126385971403`*^9}, {
  3.435512822069418*^9, 3.435512824453021*^9}, {3.438367257474269*^9, 
  3.4383674038620834`*^9}}],

Cell[TextData[{
 "Here the model is changed to have a negative sign in front of the \
coefficient ",
 Cell[BoxData[
  StyleBox["a", "TI"]], "InlineFormula"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.4383674150024943`*^9, 3.438367445892526*^9}}],

Cell[BoxData[
 RowBox[{"NonlinearModelFit", "[", 
  RowBox[{"lineardata", ",", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "a"}], "*", "x"}], "+", 
     RowBox[{"b", "*", "y", "*", "z"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4383665921901674`*^9, 3.438366592705783*^9}}],

Cell[TextData[{
 "This is really the same model as before except that the sign for the ",
 Cell[BoxData[
  StyleBox["a", "TI"]], "InlineFormula"],
 " coefficient is different. In this case the fitting fails because the \
starting values result in complex numbers. The iterative method would need to \
pass from positive values of ",
 Cell[BoxData[
  StyleBox["a", "TI"]], "InlineFormula"],
 " to negative values with this starting value."
}], "Text",
 CellChangeTimes->{{3.4383674498299503`*^9, 3.4383675237660313`*^9}, {
  3.4383676361857476`*^9, 3.438367674700633*^9}}],

Cell["\<\
Giving a negative starting value for a gets a good result in this case.\
\>", "MathCaption",
 CellChangeTimes->{{3.4383675293127995`*^9, 3.4383675508280115`*^9}, {
  3.4383675894835196`*^9, 3.4383676246390944`*^9}}],

Cell[BoxData[
 RowBox[{"nlm2", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"lineardata", ",", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "a"}], "*", "x"}], "+", 
      RowBox[{"b", "*", "y", "*", "z"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", 
        RowBox[{"-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"b", ",", "5"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.438366515847883*^9, 3.4383665377068386`*^9}, {
  3.438367699278286*^9, 3.438367700512637*^9}}],

Cell["The estimates are equivalent up to a sign change.", "MathCaption",
 CellChangeTimes->{{3.43836773473073*^9, 3.438367758355277*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"StyleTable", "[", 
    RowBox[{"#", ",", 
     RowBox[{"{", 
      RowBox[{"FontSize", "\[Rule]", " ", "14"}], "}"}]}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"nlm", "[", "\"\<ParameterTable\>\"", "]"}], ",", 
    RowBox[{"nlm2", "[", "\"\<ParameterTable\>\"", "]"}]}], "}"}]}]], "Input",\

 CellChangeTimes->{{3.438367703793824*^9, 3.4383677256996536`*^9}, {
  3.4421390243625307`*^9, 3.44213904687647*^9}}],

Cell["", "Spacer"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["       ",
  Background->GrayLevel[0.500008]],
 StyleBox["Model Fitting and Analysis",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 " ",
 StyleBox["Nonlinear regression: parameter constraints",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.500008]]
}], "Subsection"],

Cell["\<\
Constraints can also be included. Some properties derived from unconstrained \
distributional assumptions, however, may not be valid.\
\>", "Text",
 CellChangeTimes->{{3.4341127731142125`*^9, 3.4341127751506886`*^9}, {
  3.438367843822386*^9, 3.43836784935353*^9}, {3.4383680465264797`*^9, 
  3.4383681127729187`*^9}, {3.4383683063569098`*^9, 3.4383683278100433`*^9}, {
  3.438368384189067*^9, 3.4383684112754087`*^9}, {3.438370425202743*^9, 
  3.4383704279394283`*^9}}],

Cell[TextData[{
 "Here ",
 Cell[BoxData[
  StyleBox["b", "TI"]], "InlineFormula"],
 " is constrained to be greater than 15."
}], "MathCaption",
 CellChangeTimes->{{3.4383677973389034`*^9, 3.438367799338865*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nlmc", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"lineardata", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"a", "*", "x"}], "+", 
         RowBox[{"b", "*", "y", "*", "z"}]}], "]"}], ",", 
       RowBox[{"b", ">", "15"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Normal", "[", "nlmc", "]"}]}], "Input",
 CellChangeTimes->{{3.434112735627389*^9, 3.4341127926800475`*^9}, 
   3.434113866954856*^9, 3.4380884931244926`*^9, {3.438367792713992*^9, 
   3.438367793448353*^9}, {3.44213911641383*^9, 3.442139124539835*^9}}],

Cell["\<\
A warning is generated if affected properties are requested. If the estimates \
are far from the constraint boundaries so that the constraint region covers \
nearly all of the probability for the parameter vector, results from the \
unconstrained distributional assumptions are likely fine.\
\>", "Text",
 CellChangeTimes->{{3.4383701987928834`*^9, 3.438370278516427*^9}, {
  3.438370399071311*^9, 3.438370470037462*^9}, {3.438370735605375*^9, 
  3.4383707736062007`*^9}}],

Cell["\<\
In this case the confidence intervals contain points outside the constraint \
region.\
\>", "MathCaption",
 CellChangeTimes->{{3.4383703041317987`*^9, 3.438370356832533*^9}}],

Cell[BoxData[
 RowBox[{"nlmc", "[", "\"\<ParameterConfidenceIntervals\>\"", "]"}]], "Input",\

 CellChangeTimes->{{3.4383683117866964`*^9, 3.4383683583858447`*^9}}],

Cell["", "Spacer"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["       ",
  Background->GrayLevel[0.500008]],
 StyleBox["Model Fitting and Analysis",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 " ",
 StyleBox["ANOVA",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.500008]]
}], "Subsection"],

Cell[TextData[{
 "The analysis of variance (ANOVA) model is a categorical linear regression \
model. While such models can be fit and analyzed using ",
 Cell[BoxData[
  ButtonBox["LinearModelFit",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/LinearModelFit"]], "InlineFormula"],
 " with ",
 Cell[BoxData[
  ButtonBox["NominalVariables",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/NominalVariables"]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  ButtonBox["ANOVA",
   BaseStyle->"Link",
   ButtonData->"paclet:ANOVA/ref/ANOVA"]], "InlineFormula"],
 " provides direct computation of cell means and tests of categorical \
differences."
}], "Text",
 CellChangeTimes->{{3.4361177128502846`*^9, 3.436117802201993*^9}, {
  3.4361178412996264`*^9, 3.4361178426596794`*^9}, {3.4361183347544837`*^9, 
  3.436118343958728*^9}}],

Cell["Here we import some data from a text file.", "MathCaption"],

Cell[BoxData[
 RowBox[{"anovadata", "=", 
  RowBox[{"Import", "[", 
   RowBox[{
    RowBox[{"ToFileName", "[", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<anovadata.txt\>\""}],
      "]"}], ",", "\"\<Table\>\""}], "]"}]}]], "Input"],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  ButtonBox["ANOVA",
   BaseStyle->"Link",
   ButtonData->"paclet:ANOVA/ref/ANOVA"]], "InlineFormula"],
 " function is defined in the ",
 Cell[BoxData[
  ButtonBox["ANOVA`",
   BaseStyle->"Link",
   ButtonData->"paclet:ANOVA/guide/AnalysisOfVariancePackage"]], 
  "InlineFormula"],
 " package."
}], "MathCaption"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<ANOVA`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.4355133050981565`*^9, 3.435513309939043*^9}}],

Cell["\<\
By default an ANOVA table and table of cell means are returned.\
\>", "MathCaption"],

Cell[BoxData[
 RowBox[{"ANOVA", "[", 
  RowBox[{"anovadata", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input"],

Cell["\<\
The cell means can be omitted and significance tests performed if desired.\
\>", "Text"],

Cell["\<\
This gives an analysis of variance performing Bonferroni and Tukey tests for \
significant differences between levels of categorical variables.\
\>", "MathCaption"],

Cell[BoxData[
 RowBox[{"ANOVA", "[", 
  RowBox[{"anovadata", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], ",", 
   RowBox[{"CellMeans", "->", "False"}], ",", 
   RowBox[{"PostTests", "->", 
    RowBox[{"{", 
     RowBox[{"Bonferroni", ",", "Tukey"}], "}"}]}]}], "]"}]], "Input"],

Cell[TextData[{
 "The same model could be fit using ",
 Cell[BoxData[
  ButtonBox["LinearModelFit",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/LinearModelFit"]], "InlineFormula"],
 " as follows."
}], "MathCaption",
 CellChangeTimes->{{3.4361182893864965`*^9, 3.4361183299101443`*^9}}],

Cell[BoxData[
 RowBox[{"anovalm", "=", 
  RowBox[{"LinearModelFit", "[", 
   RowBox[{"anovadata", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", 
    RowBox[{"NominalVariables", "\[Rule]", "All"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4361180679462805`*^9, 3.4361180971715755`*^9}}],

Cell[BoxData[
 RowBox[{"StyleTable", "[", 
  RowBox[{
   RowBox[{"anovalm", "[", "\"\<ANOVATable\>\"", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"FontSize", "\[Rule]", " ", "18"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.436118116128946*^9, 3.4361181240994806`*^9}, {
  3.442139189203495*^9, 3.442139223830851*^9}}],

Cell["", "Spacer"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["       ",
  Background->GrayLevel[0.500008]],
 StyleBox["Model Fitting and Analysis",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 " ",
 StyleBox["Optimization functions",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.500008]]
}], "Subsection"],

Cell["\<\
Built\[Hyphen]in optimization and linear algebra functions are important in \
their own right, and are heavily used in statistical fitting functions.  \
These functions can also be used to obtain statistical results that may not \
be directly built\[Hyphen]in.\
\>", "Text"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["FindFit",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/FindFit"]], "InlineFormula"],
 " finds parameter estimates for a best fit of a model to data, by default \
using a least squares fit."
}], "Text"],

Cell[BoxData[
 RowBox[{"FindFit", "[", 
  RowBox[{"lineardata", ",", 
   SqrtBox[
    RowBox[{
     RowBox[{"a", " ", "x"}], "+", 
     RowBox[{"b", " ", "y", " ", "z"}]}]], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.434113878593208*^9, 3.4380884948588896`*^9}],

Cell[BoxData[
 RowBox[{"FindFit", "[", 
  RowBox[{"lineardata", ",", 
   RowBox[{"{", 
    RowBox[{
     SqrtBox[
      RowBox[{
       RowBox[{"a", " ", "x"}], "+", 
       RowBox[{"b", " ", "y", " ", "z"}]}]], ",", 
     RowBox[{"b", ">", "15"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.434113880347576*^9, 3.4380884954995227`*^9}],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["NonlinearModelFit",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/NonlinearModelFit"]], "InlineFormula"],
 " gets its parameter estimates from the same internal code as ",
 Cell[BoxData[
  ButtonBox["FindFit",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/FindFit"]], "InlineFormula"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.436117056090395*^9, 3.436117102787736*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"lineardata", ",", 
    RowBox[{"{", 
     RowBox[{
      SqrtBox[
       RowBox[{
        RowBox[{"a", " ", "x"}], "+", 
        RowBox[{"b", " ", "y", " ", "z"}]}]], ",", 
      RowBox[{"b", ">", "15"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], "[", 
  "\"\<BestFitParameters\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.4361174517479005`*^9, 3.436117473892239*^9}, 
   3.4380884964214096`*^9}],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["FindFit",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/FindFit"]], "InlineFormula"],
 " also provides for fitting based on other functions of the residual errors, \
such as total absolute errors."
}], "MathCaption"],

Cell[BoxData[
 RowBox[{"FindFit", "[", 
  RowBox[{"lineardata", ",", 
   SqrtBox[
    RowBox[{
     RowBox[{"a", " ", "x"}], "+", 
     RowBox[{"b", " ", "y", " ", "z"}]}]], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
   RowBox[{"NormFunction", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{"Abs", "[", "#1", "]"}], "]"}], "&"}], ")"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{3.4341138821646*^9, 3.438088497483923*^9}],

Cell["", "Spacer"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["       ",
  Background->GrayLevel[0.500008]],
 StyleBox["Model Fitting and Analysis",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 " ",
 StyleBox["Optimization functions",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.500008]]
}], "Subsection"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["FindMinimum",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/FindMinimum"]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  ButtonBox["FindMaximum",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/FindMaximum"]], "InlineFormula"],
 " perform local optimization of an objective function.  ",
 Cell[BoxData[
  ButtonBox["NMinimize",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/NMinimize"]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  ButtonBox["NMaximize",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/NMaximize"]], "InlineFormula"],
 " perform global optimization of an objective function. These functions are \
particularly useful in statistics when the optimization problem is not easy \
to define in terms of a model function and a function of residual errors."
}], "Text"],

Cell[TextData[{
 "For instance, a ",
 Cell[BoxData[
  ButtonBox["NormFunction",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/NormFunction"]], "InlineFormula"],
 " for a maximum likelihood estimate will be quite messy for most \
distributions."
}], "Text",
 CellChangeTimes->{{3.4354179374073467`*^9, 3.4354179378917274`*^9}}],

Cell["Here are some data assumed to follow a Weibull distribution.", \
"MathCaption"],

Cell[BoxData[
 RowBox[{"weibulldata", "=", 
  RowBox[{"Import", "[", 
   RowBox[{
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", 
       "\"\<WeibullData.txt\>\""}], "}"}], "]"}], ",", "\"\<List\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.442139282695365*^9, 3.4421392958218203`*^9}},
 CellTags->"M215B.3.4"],

Cell["\<\
Maximum likelihood estimates of the Weibull parameters can be obtained by \
maximizing the following log-likelihood function.\
\>", "MathCaption",
 CellChangeTimes->{3.4379368408728437`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"wfun", "[", 
   RowBox[{"x_", ",", "\[Alpha]_", ",", "\[Beta]_"}], "]"}], " ", "=", " ", 
  RowBox[{"PDF", "[", 
   RowBox[{
    RowBox[{"WeibullDistribution", "[", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], ",", "x"}], 
   "]"}]}]], "Input",
 CellTags->"M215B.3.4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"loglike", "[", 
    RowBox[{
     RowBox[{"\[Alpha]_", "?", "NumericQ"}], ",", 
     RowBox[{"\[Beta]_", "?", "NumericQ"}]}], "]"}], "=", 
   RowBox[{"Total", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Log", "[", 
        RowBox[{"wfun", "[", 
         RowBox[{"#", ",", "\[Alpha]", ",", "\[Beta]"}], "]"}], "]"}], "&"}], 
      ",", "weibulldata"}], "]"}], "]"}]}], ";"}]], "Input",
 CellTags->"M215B.3.4"],

Cell["\<\
Initial parameter estimates for the optimization can be obtained from a \
contour plot of the log likelihood function.\
\>", "MathCaption"],

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"loglike", "[", 
    RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", ",", "6", ",", "9"}], "}"}]}], "]"}]], "Input",
 CellTags->"M215B.3.4"],

Cell["\<\
Local optimization will suffice in this case and maximum likelihood estimates \
can then be obtained with reasonable starting values.\
\>", "MathCaption"],

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{"loglike", "[", 
    RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "2", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", ",", "8", ",", "6", ",", "9"}], "}"}]}], 
  "]"}]], "Input",
 CellTags->"M215B.3.4"],

Cell["", "Spacer"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["       ",
  Background->GrayLevel[0.500008]],
 StyleBox["Model Fitting and Analysis",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]],
 " ",
 StyleBox["Linear algebra functions",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.500008]]
}], "Subsection"],

Cell[TextData[{
 "Numerous linear algebra functions such as ",
 Cell[BoxData[
  ButtonBox["SingularValueDecomposition",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/SingularValueDecomposition"]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  ButtonBox["Eigenvalues",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Eigenvalues"]], "InlineFormula"],
 " are important in statistics and in particular in model fitting. A common \
linear algebra operation is least squares optimization."
}], "Text",
 CellChangeTimes->{{3.438370815516577*^9, 3.438370849169983*^9}, {
  3.4383708946145926`*^9, 3.43837093633731*^9}, {3.4383710050984755`*^9, 
  3.438371024474205*^9}}],

Cell[TextData[{
 "Parameter estimates for a least squares fit of a linear model defined by a \
design matrix and response vector can be obtained directly from the ",
 Cell[BoxData[
  ButtonBox["LeastSquares",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/LeastSquares"]], "InlineFormula"],
 " function."
}], "MathCaption"],

Cell[BoxData[
 RowBox[{"desmat", "=", 
  RowBox[{"Transpose", "[", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Table", "[", 
       RowBox[{"1", ",", 
        RowBox[{"{", 
         RowBox[{"Length", "[", "lineardata", "]"}], "}"}]}], "]"}], "}"}], 
     ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"lineardata", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"1", ";;", "3"}]}], "]"}], "]"}], "]"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.4341139003191757`*^9, 3.434113904282168*^9}, {
  3.4380884996089506`*^9, 3.4380885000620813`*^9}}],

Cell[BoxData[
 RowBox[{"LeastSquares", "[", 
  RowBox[{"desmat", ",", 
   RowBox[{"lineardata", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{3.4341139020265517`*^9, 3.438088500796466*^9}],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["LinearModelFit",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/LinearModelFit"]], "InlineFormula"],
 " ",
 "gives the same estimate while allowing for additional diagnostics and \
results."
}], "MathCaption",
 CellChangeTimes->{{3.4361175728702497`*^9, 3.4361176247691045`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"LinearModelFit", "[", 
   RowBox[{"{", 
    RowBox[{"desmat", ",", 
     RowBox[{"lineardata", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"-", "1"}]}], "]"}], "]"}]}], "}"}], "]"}], "[", 
  "\"\<BestFitParameters\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.4361175429019947`*^9, 3.436117560954784*^9}, 
   3.4380885014370985`*^9}],

Cell["\<\
There are numerous other applications of linear algebra in model fitting as \
well.\
\>", "Text",
 CellChangeTimes->{{3.4383710370160418`*^9, 3.438371058174526*^9}}],

Cell["", "Spacer"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["       ",
  Background->GrayLevel[0.500008]],
 StyleBox["Further Resources",
  FontColor->GrayLevel[1],
  Background->GrayLevel[0.500008]],
 StyleBox[" ",
  Background->GrayLevel[0.500008]]
}], "Section"],

Cell[CellGroupData[{

Cell["Tutorials", "MoreExamplesSection"],

Cell[CellGroupData[{

Cell[TextData[ButtonBox["Basic Statistics",
 BaseStyle->"Link",
 ButtonData->"paclet:tutorial/BasicStatistics"]], "Item",
 CellID->138871290],

Cell[TextData[ButtonBox["Continuous Distributions",
 BaseStyle->"Link",
 ButtonData->"paclet:tutorial/ContinuousDistributions"]], "Item",
 CellID->15579],

Cell[TextData[ButtonBox["Discrete Distributions",
 BaseStyle->"Link",
 ButtonData->"paclet:tutorial/DiscreteDistributions"]], "Item",
 CellID->73377947],

Cell[TextData[ButtonBox["Descriptive Statistics",
 BaseStyle->"Link",
 ButtonData->"paclet:tutorial/DescriptiveStatistics"]], "Item",
 CellID->58175659],

Cell[TextData[ButtonBox["Convolutions and Correlations",
 BaseStyle->"Link",
 ButtonData->"paclet:tutorial/ConvolutionsAndCorrelations"]], "Item",
 CellID->140382176],

Cell[TextData[ButtonBox["Curve Fitting",
 BaseStyle->"Link",
 ButtonData->"paclet:tutorial/CurveFitting"]], "Item",
 CellID->664059042],

Cell[TextData[ButtonBox["Importing and Exporting Data",
 BaseStyle->"Link",
 ButtonData->"paclet:tutorial/ImportingAndExportingData"]], "Item",
 CellID->177357799],

Cell[TextData[ButtonBox["Pseudorandom Numbers",
 BaseStyle->"Link",
 ButtonData->"paclet:tutorial/PseudorandomNumbers"]], "Item",
 CellID->667388196],

Cell[TextData[ButtonBox["Random Number Generation",
 BaseStyle->"Link",
 ButtonData->"paclet:tutorial/RandomNumberGeneration"]], "Item",
 CellID->226520497],

Cell[TextData[ButtonBox["Numerical Operations on Data",
 BaseStyle->"Link",
 ButtonData->"paclet:tutorial/NumericalOperationsOnDataOverview"]], "Item",
 CellID->7278419]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Wolfram Education Group Courses", "MoreExamplesSection"],

Cell[CellGroupData[{

Cell[TextData[{
 ButtonBox["M215: Applied Statistical Analysis with ",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.wolfram.com/services/education/courses/m215.html"], None}],
 StyleBox[ButtonBox["Mathematica",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.wolfram.com/services/education/courses/m215.html"], None}],
  FontSlant->"Italic"]
}], "Item"],

Cell[TextData[{
 ButtonBox["M221: Introduction to Programming in ",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.wolfram.com/services/education/courses/m221.html"], None}],
 StyleBox[ButtonBox["Mathematica",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.wolfram.com/services/education/courses/m221.html"], None}],
  FontSlant->"Italic"]
}], "Item"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Initialization", "Section",
 InitializationGroup->True,
 CellChangeTimes->{{3.442055992727662*^9, 3.442055998163656*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"StyleTable", "[", 
   RowBox[{"tbl_Style", ",", 
    RowBox[{"rools_List", "?", "OptionQ"}]}], "]"}], ":=", 
  RowBox[{"tbl", "/.", 
   RowBox[{
    RowBox[{"Style", "[", 
     RowBox[{"x_", ",", "\"\<DialogStyle\>\""}], "]"}], "\[RuleDelayed]", 
    RowBox[{"Style", "[", 
     RowBox[{"x", ",", "\"\<DialogStyle\>\"", ",", 
      RowBox[{"Sequence", "@@", "rools"}]}], "]"}]}]}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.4413769895365553`*^9, 3.441377005061401*^9}, {
   3.441377062094083*^9, 3.441377106111926*^9}, {3.4413772003345127`*^9, 
   3.441377220805703*^9}, {3.441377835411009*^9, 3.4413778415036173`*^9}, 
   3.441552433477935*^9, {3.441552515522244*^9, 3.441552519157001*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ListPlot", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PlotStyle", "\[Rule]", " ", 
       RowBox[{"PointSize", "[", "Medium", "]"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "}"}]}], "]"}], 
  ";"}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.4420669929505033`*^9, 3.442067055803739*^9}, {
  3.442071153115951*^9, 3.442071165380568*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ListPointPlot3D", ",", 
    RowBox[{"PlotStyle", "\[Rule]", " ", 
     RowBox[{"PointSize", "[", "Medium", "]"}]}]}], "]"}], ";"}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.442067135625486*^9, 3.442067156723174*^9}, {
  3.442067227334918*^9, 3.4420672289477167`*^9}, {3.4420681865046587`*^9, 
  3.4420682189342403`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"DiscretePlot", ",", 
    RowBox[{"PlotStyle", "\[Rule]", " ", 
     RowBox[{"PointSize", "[", "Medium", "]"}]}]}], "]"}], ";"}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.442071410325235*^9, 3.442071448074374*^9}}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<StatisticalPlots`\>\"", "]"}]], "Input",
 InitializationGroup->True],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<MultivariateStatistics`\>\"", "]"}]], "Input",
 InitializationGroup->True],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<HierarchicalClustering`\>\"", "]"}]], "Input",
 InitializationGroup->True],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<ANOVA`\>\"", "]"}]], "Input",
 InitializationGroup->True]
}, Closed]]
}, Open  ]]
},
AutoGeneratedPackage->None,
ScreenStyleEnvironment->"SlideShow",
WindowSize->{1436, 856},
WindowMargins->{{30, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
PageHeaders->{{
   Cell[
    TextData[
     StyleBox["MATHEMATICA", FontSlant -> "Italic"], 
     ": A TECHNICAL OVERVIEW"], "Header"], None, None}, {
  None, None, "S20: INTRODUCTION TO STATISTICS WITH MATHEMATICA"}},
PrintingOptions->{"FacingPages"->False},
ShowSelection->True,
FrontEndVersion->"7.0 for Mac OS X x86 (32-bit) (February 1, 2009)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[StyleDefinitions -> "StyleMenuClear.nb"]], 
   Cell[
    CellGroupData[{
      Cell["Style Environment Names", "Section"], 
      Cell[
       StyleData[All, "SlideShow"], PageWidth -> WindowWidth, DockedCells -> 
       FEPrivate`FrontEndResource["FEExpressions", "SlideshowToolbar"], 
       ScrollingOptions -> {
        "PagewiseDisplay" -> True, "VerticalScrollRange" -> Fit}, 
       ShowGroupOpener -> False, ShowAutoStyles -> False, ScriptMinSize -> 9, 
       MenuPosition -> 1300, Magnification -> 1.]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Notebook Options", "Section"], 
      Cell[
      "The options defined for the style below will be used at the Notebook \
level.", "Text"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Notebook"]], 
         Cell[
          StyleData["Notebook", "Printout"], PageHeaders -> {{
             Cell[
              TextData["CHAPTER TITLE"], "Header"], None, None}, {
            None, None, 
             Cell[
              TextData["CHAPTER TITLE"], "Header"]}}, PageFooters -> {{
             Cell[
              TextData[{
                CounterBox["Page"]}], "PageNumber"], None, None}, {None, None, 
             Cell[
              TextData[{
                CounterBox["Page"]}], "PageNumber"]}}, 
          PageHeaderLines -> {False, False}, 
          PageFooterLines -> {False, False}, 
          PrintingOptions -> {
           "CellBackgroundHalftoneAngle" -> Automatic, 
            "CellBackgroundHalftoneDensity" -> Automatic, "FacingPages" -> 
            True, "FirstPageFace" -> Right, "FirstPageFooter" -> True, 
            "FirstPageHeader" -> False, "GraphicsPrintingFormat" -> 
            "Automatic", "PageFooterMargins" -> {Automatic, Automatic}, 
            "PageHeaderMargins" -> {Automatic, Automatic}, 
            "PageSize" -> {504, 576}, "PaperOrientation" -> "Portrait", 
            "PaperSize" -> {Automatic, Automatic}, "PostScriptOutputFile" :> 
            "Automatic", "PrintCellBrackets" -> False, 
            "PrintMultipleHorizontalPages" -> False, "PrintRegistrationMarks" -> 
            True, "PrintSelectionHighlighting" -> False, 
            "PrintingMargins" -> {{54, 54}, {72, 72}}, "RestPagesFooter" -> 
            True, "RestPagesHeader" -> True, "UnixShellPrintingCommand" -> 
            Automatic, "UsePostScriptOutputFile" -> False, 
            "UseUnixShellPrintingCommand" -> False}, CellFrameLabelMargins -> 
          6]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Headings", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Title"], CellMargins -> {{0, 0}, {0, 0}}, 
          CellGroupingRules -> {"TitleGrouping", 30}, PageBreakBelow -> False,
           CellFrameColor -> GrayLevel[0.4], LineSpacing -> {1.125, 0}, 
          CounterIncrements -> "Title", 
          CounterAssignments -> {{"Subtitle", 0}, {"Section", 0}, {
            "Subsection", 0}, {"Subsubsection", 0}, {"List", 0}, {
            "NumberedFigure", 0}, {"NumberedTable", 0}, {
            "NumberedProgram", 0}, {"Equation", 0}, {"Text", 0}, {
            "SmallText", 0}, {"Reference", 0}}, MenuPosition -> 1100, 
          MenuCommandKey -> "1", FontFamily -> "Times", FontSize -> 36, 
          FontSlant -> "Italic", FontColor -> GrayLevel[1]], 
         Cell[
          StyleData["Title", "Presentation"], ShowCellBracket -> False, 
          CellFrameMargins -> {{50, Inherited}, {20, 30}}, 
          LineSpacing -> {1, 2}, FontSize -> 40, FontSlant -> "Italic"], 
         Cell[
          StyleData["Title", "SlideShow"], ShowCellBracket -> False, 
          CellMargins -> {{0, 0}, {Inherited, 0}}, 
          CellFrameMargins -> {{48, 0}, {20, 20}}, LineSpacing -> {1, 2}, 
          FontSize -> 35, FontSlant -> "Italic"], 
         Cell[
          StyleData["Title", "Printout"], 
          CellMargins -> {{54, 0}, {Inherited, Inherited}}, CellFrameMargins -> 
          False, LineSpacing -> {0.95, 0}, FontFamily -> "Times", FontColor -> 
          GrayLevel[0], Background -> None]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subtitle"], CellFrame -> {{0, 0}, {1, 0}}, 
          CellMargins -> {{48, 244}, {0, 60}}, 
          CellGroupingRules -> {"SectionGrouping", 30}, CellFrameMargins -> 2,
           CellFrameColor -> RGBColor[0.498039, 0.505882, 0.517647], 
          MenuPosition -> 1150, MenuCommandKey -> "2", FontFamily -> "Times", 
          FontSize -> 17, FontWeight -> "Bold", FontSlant -> "Italic", 
          FontColor -> RGBColor[1, 0.329412, 0]], 
         Cell[
          StyleData["Subtitle", "Presentation"], FontSize -> 36], 
         Cell[
          StyleData["Subtitle", "SlideShow"], 
          CellMargins -> {{48, Inherited}, {0, 48}}, FontSize -> 23, 
          FontWeight -> "Bold"], 
         Cell[
          StyleData["Subtitle", "Printout"], 
          CellMargins -> {{54, 0}, {10, 10}}, FontSize -> 12]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subsubtitle"], CellMargins -> {{48, 25}, {0, 4}}, 
          CellGroupingRules -> {"TitleGrouping", 30}, LineSpacing -> {1, 0}, 
          CounterIncrements -> "Subtitle", FontFamily -> "Helvetica", 
          FontSize -> 18], 
         Cell[
          StyleData["Subsubtitle", "Presentation"]], 
         Cell[
          StyleData["Subsubtitle", "SlideShow"], 
          CellMargins -> {{48, 25}, {0, 4}}, LineSpacing -> {1, 1}, FontSize -> 
          25, FontWeight -> "Bold"], 
         Cell[
          StyleData["Subsubtitle", "Printout"], 
          CellMargins -> {{54, 0}, {Inherited, Inherited}}, FontSize -> 16]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Section"], CellFrame -> None, 
          CellMargins -> {{54, 25}, {10, 30}}, 
          CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
          False, CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}}, 
          MenuPosition -> 1250, MenuCommandKey -> "4", FontFamily -> 
          "Helvetica", FontSize -> 18, FontWeight -> "Bold"], 
         Cell[
          StyleData["Section", "Presentation"], FontSize -> 28], 
         Cell[
          StyleData["Section", "SlideShow"], CellFrame -> None, 
          CellMargins -> {{0, 0}, {30, 0}}, FontSize -> 25], 
         Cell[
          StyleData["Section", "Printout"], 
          CellMargins -> {{54, 24}, {3, 15}}, CellFrameMargins -> False, 
          CellFrameColor -> GrayLevel[0], FontSize -> 14]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subsection"], CellDingbat -> None, 
          CellMargins -> {{54, 25}, {10, 26}}, 
          CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
          False, CounterIncrements -> "Subsection", 
          CounterAssignments -> {{"Subsubsection", 0}}, MenuPosition -> 1300, 
          MenuCommandKey -> "5", FontFamily -> "Helvetica", FontSize -> 14, 
          FontWeight -> "Bold"], 
         Cell[
          StyleData["Subsection", "Presentation"], CellDingbat -> None, 
          CellMargins -> {{74, 25}, {10, 26}}, FontSize -> 18], 
         Cell[
          StyleData["Subsection", "SlideShow"], CellFrame -> None, 
          CellMargins -> {{0, 0}, {16, 0}}, FontSize -> 25], 
         Cell[
          StyleData["Subsection", "Printout"], 
          CellMargins -> {{54, 24}, {Inherited, Inherited}}, FontSize -> 12]},
         Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subsubsection"], CellMargins -> {{54, 25}, {6, 20}}, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> 
          False, CounterIncrements -> "Subsubsection", FontFamily -> 
          "Helvetica", FontSize -> 13, FontWeight -> "Bold", FontColor -> 
          RGBColor[0.215686, 0.282353, 0.52549]], 
         Cell[
          StyleData["Subsubsection", "Presentation"]], 
         Cell[
          StyleData["Subsubsection", "SlideShow"], FontSize -> 23], 
         Cell[
          StyleData["Subsubsection", "Printout"], 
          CellMargins -> {{54, 24}, {Inherited, Inherited}}, FontSize -> 10]},
         Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["MoreExamplesSection"], ShowGroupOpener -> True, 
          CellMargins -> {{54, 25}, {6, 20}}, 
          CellGroupingRules -> {"SectionGrouping", 65}, PageBreakBelow -> 
          False, CounterIncrements -> "Subsubsection", FontFamily -> 
          "Helvetica", FontSize -> 14, FontWeight -> "Bold", FontColor -> 
          RGBColor[0.215686, 0.282353, 0.52549]], 
         Cell[
          StyleData["MoreExamplesSection", "Presentation"]], 
         Cell[
          StyleData["MoreExamplesSection", "SlideShow"], FontSize -> 23], 
         Cell[
          StyleData["MoreExamplesSection", "Printout"], 
          CellMargins -> {{54, 24}, {Inherited, Inherited}}, FontSize -> 10]},
         Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Address"], 
          CellMargins -> {{48, 0}, {Inherited, Inherited}}, FontFamily -> 
          "Helvetica", FontSize -> 17, FontWeight -> "Plain", FontColor -> 
          GrayLevel[0.4]], 
         Cell[
          StyleData["Address", "SlideShow"], 
          CellMargins -> {{48, 0}, {Inherited, 0}}, FontFamily -> "Helvetica",
           FontSize -> 24, FontColor -> GrayLevel[0.4]]}, Closed]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Body Text", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Text"], 
          CellMargins -> {{54, 24}, {Inherited, Inherited}}, 
          LineSpacing -> {1, 4}, CounterIncrements -> "Text", MenuPosition -> 
          1400, MenuCommandKey -> "7", FontFamily -> "Georgia", FontSize -> 
          12], 
         Cell[
          StyleData["Text", "Presentation"], 
          CellMargins -> {{Inherited, Inherited}, {6, 24}}, FontSize -> 24], 
         Cell[
          StyleData["Text", "SlideShow"], 
          CellMargins -> {{54, Inherited}, {6, 36}}, FontSize -> 19], 
         Cell[
          StyleData["Text", "Printout"], 
          CellMargins -> {{54, 24}, {Inherited, 0}}, LineSpacing -> {1, 3}, 
          FontFamily -> "Times", FontSize -> 10]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["MathCaption"], CellFrame -> {{0, 0}, {0, 0.5}}, 
          CellMargins -> {{72, 12}, {2, 20}}, PageBreakBelow -> False, 
          CellFrameMargins -> {{8, 8}, {8, 2}}, CellFrameColor -> 
          RGBColor[0.819455, 0.804242, 0.663142], CellFrameLabelMargins -> 4, 
          LineSpacing -> {1, 4}, ParagraphSpacing -> {0, 8}, MenuPosition -> 
          1600, MenuCommandKey -> "8", FontFamily -> "Georgia", FontSize -> 
          12], 
         Cell[
          StyleData["MathCaption", "Presentation"], FontSize -> 24], 
         Cell[
          StyleData["MathCaption", "SlideShow"], 
          CellMargins -> {{72, 36}, {0, 36}}, FontSize -> 19], 
         Cell[
          StyleData["MathCaption", "Printout"], 
          CellMargins -> {{54, 0}, {0, 14}}, Hyphenation -> True, FontFamily -> 
          "Times", FontSize -> 10, FontColor -> GrayLevel[0]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Item"], CellDingbat -> Cell["\[FilledSmallCircle]"], 
          CellMargins -> {{86, 10}, {12, 6}}, FontFamily -> "Georgia", 
          FontSize -> 12], 
         Cell[
          StyleData["Item", "Presentation"], FontSize -> 24], 
         Cell[
          StyleData["Item", "SlideShow"], CellDingbat -> 
          Cell["\[FilledSmallCircle]", FontSize -> 19], 
          CellMargins -> {{86, 10}, {14, 7}}, LineSpacing -> {1, 4}, FontSize -> 
          19], 
         Cell[
          StyleData["Item", "Printout"], FontFamily -> "Times", FontSize -> 
          10]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subitem"], CellDingbat -> 
          Cell["\[FilledSmallCircle]", FontSize -> 9], 
          CellMargins -> {{99, 12}, {1, 2}}, ReturnCreatesNewCell -> True, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15100}, 
          CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Item", 
          CounterIncrements -> "Subitem", 
          CounterAssignments -> {{"Subsubitem", 0}}, FontFamily -> "Georgia", 
          FontSize -> 12], 
         Cell[
          StyleData["Subitem", "Presentation"], 
          CellMargins -> {{136, 12}, {2, 3}}, FontSize -> 14], 
         Cell[
          StyleData["Subitem", "SlideShow"], CellMargins -> {{98, 2}, {1, 1}},
           FontSize -> 19], 
         Cell[
          StyleData["Subitem", "Printout"], CellMargins -> {{82, 2}, {1, 1}}, 
          FontSize -> 10]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Input/Output", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Input"], CellFrame -> {{0.25, 0.25}, {0, 0.25}}, 
          CellMargins -> {{72, 24}, {0, 10}}, MenuPosition -> 1700, 
          MenuCommandKey -> "9", FontSize -> 12, FontWeight -> "Bold", 
          Background -> RGBColor[0.799313, 0.800504, 0.879561]], 
         Cell[
          StyleData["Input", "Presentation"], FontSize -> 22], 
         Cell[
          StyleData["Input", "SlideShow"], 
          CellMargins -> {{72, Inherited}, {0, 18}}, FontSize -> 19], 
         Cell[
          StyleData["Input", "Printout"], CellMargins -> {{54, 24}, {-1, 10}},
           FontSize -> 9, Background -> None]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Output"], CellFrame -> {{0.25, 0.25}, {0.25, 0}}, 
          CellMargins -> {{72, 24}, {10, 0}}, 
          CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
          FontSize -> 12, Background -> 
          RGBColor[0.930663, 0.899779, 0.852537]], 
         Cell[
          StyleData["Output", "Presentation"], FontSize -> 22], 
         Cell[
          StyleData["Output", "SlideShow"], 
          CellMargins -> {{72, Inherited}, {Inherited, 0}}, FontSize -> 19], 
         Cell[
          StyleData["Output", "Printout"], 
          CellMargins -> {{54, 24}, {10, -2}}, FontSize -> 9, Background -> 
          None]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Message"], CellFrame -> {{0.25, 0.25}, {0, 0}}, 
          CellDingbat -> "\[WarningSign]", CellMargins -> {{72, 24}, {0, 0}}, 
          CellGroupingRules -> "OutputGrouping", PageBreakWithin -> False, 
          GroupPageBreakWithin -> False, GeneratedCell -> True, 
          CellAutoOverwrite -> True, ShowCellLabel -> False, 
          CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
          CellFrameLabelMargins -> -9, DefaultFormatType -> 
          DefaultOutputFormatType, AutoItalicWords -> {}, CounterIncrements -> 
          "Message", StyleMenuListing -> None, FontFamily -> "Helvetica", 
          FontSize -> 10, FontColor -> RGBColor[0, 0, 1], Background -> 
          RGBColor[0.930663, 0.899779, 0.852537]], 
         Cell[
          StyleData["Message", "Presentation"], FontSize -> 12], 
         Cell[
          StyleData["Message", "SlideShow"], FontSize -> 19], 
         Cell[
          StyleData["Message", "Printout"], CellMargins -> {{54, 24}, {0, 0}},
           FontSize -> 8, FontColor -> GrayLevel[0], Background -> None]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Print"], CellFrame -> True, 
          CellMargins -> {{72, 24}, {1, 6}}, CellGroupingRules -> 
          "OutputGrouping", CellHorizontalScrolling -> True, PageBreakWithin -> 
          False, GroupPageBreakWithin -> False, GeneratedCell -> True, 
          CellAutoOverwrite -> True, ShowCellLabel -> False, 
          CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
          CellFrameColor -> RGBColor[0.718318, 0.694575, 0.474449], 
          DefaultFormatType -> DefaultOutputFormatType, AutoItalicWords -> {},
           CounterIncrements -> "Print", StyleMenuListing -> None], 
         Cell[
          StyleData["Print", "Presentation"], CellFrame -> 2, 
          CellMargins -> {{Inherited, Inherited}, {24, 6}}, Background -> 
          None], 
         Cell[
          StyleData["Print", "SlideShow"], CellFrame -> 2, 
          CellMargins -> {{72, Inherited}, {24, 6}}, Background -> None], 
         Cell[
          StyleData["Print", "Printout"], CellMargins -> {{54, 24}, {2, 6}}, 
          CellFrameColor -> GrayLevel[0], FontSize -> 8]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["PrintUsage"], 
          CellMargins -> {{72, Inherited}, {Inherited, Inherited}}], 
         Cell[
          StyleData["PrintUsage", "SlideShow"], 
          CellMargins -> {{72, Inherited}, {Inherited, Inherited}}, 
          LineSpacing -> {1.5, 1}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Graphics"], CellFrame -> {{0.25, 0.25}, {0, 0}}, 
          CellMargins -> {{72, 24}, {0, 0}}, 
          PrivateCellOptions -> {"DefaultCellGroupOpen" -> False}, 
          CellGroupingRules -> "GraphicsGrouping", CellHorizontalScrolling -> 
          True, PageBreakWithin -> False, GeneratedCell -> True, 
          CellAutoOverwrite -> True, ShowCellLabel -> False, 
          CellLabelAutoDelete -> True, DefaultFormatType -> 
          DefaultOutputFormatType, CounterIncrements -> "Graphics", 
          ImageMargins -> {{0, 0}, {0, 0}}, StyleMenuListing -> None, 
          Background -> None], 
         Cell[
          StyleData["Graphics", "Presentation"], 
          CellMargins -> {{Inherited, Inherited}, {12, 0}}, 
          ImageSize -> {340, 340}], 
         Cell[
          StyleData["Graphics", "SlideShow"], 
          CellMargins -> {{Inherited, Inherited}, {12, 0}}, 
          ImageSize -> {420, 420}], 
         Cell[
          StyleData["Graphics", "Printout"], CellFrame -> False, 
          CellMargins -> {{108, 48}, {-1, -2}}, ImageSize -> {266, 266}, 
          ImageMargins -> {{40, Inherited}, {Inherited, Inherited}}, 
          Magnification -> 0.5, Background -> None]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["LargeGraphics"], CellFrame -> {{0.25, 0.25}, {0, 0}}, 
          CellMargins -> {{72, 24}, {0, 0}}, CellGroupingRules -> 
          "GraphicsGrouping", CellHorizontalScrolling -> True, 
          PageBreakWithin -> False, GeneratedCell -> True, CellAutoOverwrite -> 
          True, ShowCellLabel -> False, CellLabelAutoDelete -> True, 
          DefaultFormatType -> DefaultOutputFormatType, CounterIncrements -> 
          "Graphics", ImageMargins -> {{0, 0}, {0, 0}}, StyleMenuListing -> 
          None, Magnification -> 0.9, Background -> 
          RGBColor[0.930663, 0.899779, 0.852537]], 
         Cell[
          StyleData["LargeGraphics", "Presentation"], 
          CellMargins -> {{Inherited, Inherited}, {12, 0}}, 
          ImageSize -> {340, 340}], 
         Cell[
          StyleData["LargeGraphics", "SlideShow"], 
          CellMargins -> {{Inherited, Inherited}, {12, 0}}, 
          ImageSize -> {420, 420}], 
         Cell[
          StyleData["LargeGraphics", "Printout"], CellFrame -> False, 
          CellMargins -> {{216, 48}, {-1, -2}}, ImageSize -> {266, 266}, 
          ImageMargins -> {{40, Inherited}, {Inherited, Inherited}}, 
          Magnification -> 0.25, Background -> GrayLevel[0.899001]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["CellLabel"], 
          CellMargins -> {{5, Inherited}, {Inherited, Inherited}}, 
          StyleMenuListing -> None, FontFamily -> "Helvetica", FontSize -> 8, 
          FontSlant -> "Oblique", FontColor -> 
          RGBColor[0.407843, 0.411765, 0.670588]], 
         Cell[
          StyleData["CellLabel", "Presentation"], FontSize -> 10], 
         Cell[
          StyleData["CellLabel", "SlideShow"], FontSize -> 10], 
         Cell[
          StyleData["CellLabel", "Printout"], FontSize -> 6, FontColor -> 
          GrayLevel[0]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["LegacyInput"], Editable -> True, PageWidth -> 800, 
          CellFrame -> {{True, True}, {False, True}}, ShowCellBracket -> True,
           CellMargins -> {{30, 0}, {7, 14}}, Evaluatable -> True, 
          GeneratedCellStyles -> {"Output" -> "LegacyOutput"}, ShowCellLabel -> 
          False, CellFrameMargins -> {{12, 12}, {36, 12}}, CellFrameColor -> 
          RGBColor[0.55, 0.55, 0.6], CellFrameLabels -> {{
             Cell[
              TextData[{
                StyleBox["Version\n   5.2", FontSize -> 10]}], 
              "LegacyInputLabel"], None}, {None, None}}, DefaultFormatType -> 
          DefaultInputFormatType, ShowAutoStyles -> True, LanguageCategory -> 
          "Mathematica", FormatType -> InputForm, FontFamily -> "Courier New",
           FontSize -> 14, FontWeight -> "Bold", FontColor -> GrayLevel[0.1]], 
         Cell[
          StyleData["LegacyInput", "SlideShow"], 
          CellMargins -> {{30, 0}, {7, 14}}, FontSize -> 16], 
         Cell[
          StyleData["LegacyInput", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["LegacyInputLabel"], Editable -> False, ShowCellBracket -> 
          False, TextAlignment -> Center, LineSpacing -> {1., 1., 0.}, 
          StyleMenuListing -> None, FontFamily -> "Helvetica", FontSize -> 10,
           FontWeight -> "Plain", FontColor -> GrayLevel[0.4], Background -> 
          None], 
         Cell[
          StyleData["LegacyInputLabel", "Printout"], FontSize -> 9]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["LegacyOutput"], Editable -> False, PageWidth -> 800, 
          CellFrame -> {{True, True}, {True, False}}, ShowCellBracket -> True,
           CellMargins -> {{72, 0}, {3, -3}}, Evaluatable -> False, 
          PageBreakAbove -> False, ShowCellLabel -> False, 
          CellFrameMargins -> {{12, 11}, {12, 12}}, CellFrameColor -> 
          RGBColor[0.55, 0.55, 0.65], ShowAutoStyles -> False, Background -> 
          GrayLevel[0.999], GraphicsBoxOptions -> {ImageSize -> Small}, 
          Graphics3DBoxOptions -> {ImageSize -> Small}], 
         Cell[
          StyleData["LegacyOutput", "SlideShow"], FontFamily -> "Courier New",
           FontSize -> 14, FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["LegacyOutput", "Printout"]]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Automatic Numbering", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["NumberedEquation"], CellMargins -> {{54, 24}, {5, 10}}, 
          CellFrameLabels -> {{None, 
             Cell[
              TextData[{"(", 
                CounterBox["NumberedEquation"], ")"}]]}, {None, None}}, 
          DefaultFormatType -> TraditionalForm, TextAlignment -> Center, 
          SingleLetterItalics -> True, SpanMaxSize -> Infinity, 
          CounterIncrements -> "NumberedEquation", FormatTypeAutoConvert -> 
          False, FontFamily -> "Times", FontSize -> 12, 
          UnderoverscriptBoxOptions -> {LimitsPositioning -> True}], 
         Cell[
          StyleData["NumberedEquation", "Presentation"], 
          CellFrameLabels -> {{None, 
             Cell[
              TextData[{"(", 
                CounterBox["NumberedEquation"], ")"}]]}, {None, None}}, 
          FontSize -> 14], 
         Cell[
          StyleData["NumberedEquation", "Printout"], 
          CellMargins -> {{Inherited, Inherited}, {10, Inherited}}, 
          CellFrameLabels -> {{None, 
             Cell[
              TextData[{"(", 
                CounterBox["NumberedEquation"], ")"}]]}, {None, None}}, 
          FontSize -> 10]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["NumberedFigure"], CellMargins -> {{54, 24}, {5, 10}}, 
          CellLabelAutoDelete -> True, CellFrameLabels -> {{None, None}, {
             Cell[
              TextData[{"Figure ", 
                CounterBox["NumberedFigure"], "."}], FontFamily -> 
              "Helvetica", FontSize -> 10, FontWeight -> "Bold"], None}}, 
          CounterIncrements -> "NumberedFigure", StyleMenuListing -> None], 
         Cell[
          StyleData["NumberedFigure", "Presentation"], 
          CellMargins -> {{54, 25}, {2, 10}}, 
          CellFrameLabels -> {{None, None}, {
             Cell[
              TextData[{"Figure ", 
                CounterBox["NumberedFigure"], "."}], FontFamily -> 
              "Helvetica", FontSize -> 12, FontWeight -> "Bold"], None}}], 
         Cell[
          StyleData["NumberedFigure", "Printout"], 
          CellFrameLabels -> {{None, None}, {
             Cell[
              TextData[{"Figure ", 
                CounterBox["NumberedFigure"], "."}], FontFamily -> 
              "Helvetica", FontSize -> 8, FontWeight -> "Bold"], None}}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Table"], CellMargins -> {{54, 24}, {5, 10}}, 
          TextAlignment -> Center, FontFamily -> "Times", FontSize -> 12, 
          Background -> GrayLevel[0.899001]], 
         Cell[
          StyleData["Table", "Presentation"], FontSize -> 14], 
         Cell[
          StyleData["Table", "Printout"], FontSize -> 10, Background -> 
          None]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["DefinitionBox"], CellFrame -> 0.5, 
          CellMargins -> {{54, 24}, {5, 10}}, CellHorizontalScrolling -> True,
           AutoIndent -> False, AutoSpacing -> False, SingleLetterItalics -> 
          False, LineIndent -> 0, FontFamily -> "Times", FontSize -> 12, 
          Background -> GrayLevel[0.899001], 
          GridBoxOptions -> {
           GridBoxAlignment -> {
             "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
            GridBoxItemSize -> {"Columns" -> {
                Scaled[0.4], {
                 Scaled[0.6]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
              "RowsIndexed" -> {}}, GridBoxSpacings -> {"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.6]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}}], 
         Cell[
          StyleData["DefinitionBox", "Presentation"], FontSize -> 14], 
         Cell[
          StyleData["DefinitionBox", "Printout"], FontSize -> 10, Background -> 
          None]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["NumberedTable"], CellMargins -> {{54, 24}, {5, 10}}, 
          CellFrameLabels -> {{None, None}, {
             Cell[
              TextData[{"Table ", 
                CounterBox["NumberedTable"], "."}], FontFamily -> "Helvetica",
               FontSize -> 10, FontWeight -> "Bold"], None}}, 
          CounterIncrements -> "NumberedTable", StyleMenuListing -> None], 
         Cell[
          StyleData["NumberedTable", "Presentation"], 
          CellMargins -> {{54, 25}, {2, 10}}, 
          CellFrameLabels -> {{None, None}, {
             Cell[
              TextData[{"Table ", 
                CounterBox["NumberedTable"], "."}], FontFamily -> "Helvetica",
               FontSize -> 12, FontWeight -> "Bold"], None}}], 
         Cell[
          StyleData["NumberedTable", "Printout"], 
          CellFrameLabels -> {{None, None}, {
             Cell[
              TextData[{"Table ", 
                CounterBox["NumberedTable"], "."}], FontFamily -> "Helvetica",
               FontSize -> 8, FontWeight -> "Bold"], None}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["NumberedFigureCaption"], CellDingbat -> 
          "\[FilledUpTriangle]", CellMargins -> {{54, 24}, {5, 10}}, 
          CellLabelPositioning -> Left, 
          CellFrameLabels -> {{None, None}, {None, None}}, TextAlignment -> 
          Left, CounterIncrements -> "NumberedFigure", FormatTypeAutoConvert -> 
          False, FontFamily -> "Helvetica"], 
         Cell[
          StyleData["NumberedFigureCaption", "Presentation"], 
          CellMargins -> {{54, 24}, {24, 10}}, FontSize -> 18], 
         Cell[
          StyleData["NumberedFigureCaption", "SlideShow"], 
          CellMargins -> {{54, 24}, {24, 10}}, FontSize -> 18], 
         Cell[
          StyleData["NumberedFigureCaption", "Printout"], 
          CellFrameLabels -> {{None, None}, {None, None}}, FontSize -> 8]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Caption"], CellDingbat -> "\[FilledUpTriangle]", 
          CellMargins -> {{54, 24}, {Inherited, 5}}, PageBreakAbove -> False, 
          StyleMenuListing -> None, FontFamily -> "Helvetica"], 
         Cell[
          StyleData["Caption", "Presentation"], FontSize -> 14], 
         Cell[
          StyleData["Caption", "Printout"], CellDingbat -> 
          "\[FilledUpTriangle]", CellMargins -> {{54, 24}, {10, 10}}, 
          FontSize -> 8]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["NumberedList"], CellMargins -> {{70, 10}, {0, 12}}, 
          CellFrameLabels -> {{
             Cell[
              TextData[{
                CounterBox["ItemNumber"], "."}], "ExerciseItemNumber", 
              CellBaseline -> Baseline], None}, {None, None}}, 
          CounterIncrements -> "ItemNumber", FontFamily -> "Georgia", 
          FontSize -> 12], 
         Cell[
          StyleData["NumberedList", "Presentation"], FontSize -> 24], 
         Cell[
          StyleData["NumberedList", "SlideShow"], FontSize -> 19], 
         Cell[
          StyleData["NumberedList", "Printout"], FontFamily -> "Times", 
          FontSize -> 10]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Reference"], 
          CellMargins -> {{54, 25}, {Inherited, Inherited}}, 
          LineSpacing -> {1, 3}, CounterIncrements -> "Reference", FontFamily -> 
          "Helvetica", FontSize -> 10], 
         Cell[
          StyleData["Reference", "Presentation"], 
          CellMargins -> {{56, 25}, {Inherited, Inherited}}, FontFamily -> 
          "Helvetica", FontSize -> 14], 
         Cell[
          StyleData["Reference", "SlideShow"], 
          CellMargins -> {{56, 25}, {Inherited, 10}}, FontFamily -> 
          "Helvetica", FontSize -> 14], 
         Cell[
          StyleData["Reference", "Printout"], FontSize -> 8]}, Closed]]}, 
     Closed]], 
   Cell[
    CellGroupData[{
      Cell["Unique Styles", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Quote"], 
          CellMargins -> {{90, 80}, {Inherited, Inherited}}, 
          TextJustification -> 0, LineSpacing -> {1, 3}, FontSize -> 12], 
         Cell[
          StyleData["Quote", "Presentation"], FontSize -> 22], 
         Cell[
          StyleData["Quote", "SlideShow"], CellFrame -> 1, 
          CellMargins -> {{90, 120}, {24, 24}}, CellFrameMargins -> 20, 
          FontFamily -> "Georgia", FontSize -> 24, Background -> 
          RGBColor[1, 1, 0.501961]], 
         Cell[
          StyleData["Quote", "Printout"], 
          CellMargins -> {{70, 40}, {Inherited, Inherited}}, FontSize -> 10]},
         Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Editorial"], 
          CellMargins -> {{54, 24}, {Inherited, Inherited}}, 
          LineSpacing -> {1, 4}, CounterIncrements -> "Text", FontSize -> 12, 
          FontColor -> RGBColor[1, 0, 0]], 
         Cell[
          StyleData["Editorial", "Presentation"], 
          CellMargins -> {{Inherited, Inherited}, {6, 24}}, FontSize -> 24], 
         Cell[
          StyleData["Editorial", "SlideShow"], 
          CellMargins -> {{Inherited, Inherited}, {6, 36}}, FontSize -> 24], 
         Cell[
          StyleData["Editorial", "Printout"], 
          CellMargins -> {{54, 24}, {Inherited, 0}}, LineSpacing -> {1, 3}, 
          FontSize -> 10]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["NonSlideShowSection"], CellFrame -> {{0, 0}, {0, 0.5}}, 
          CellMargins -> {{54, 25}, {10, 30}}, 
          CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
          False, CellFrameMargins -> 2, CellFrameColor -> 
          RGBColor[0.668009, 0.669383, 0.345068], CounterIncrements -> 
          "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}}, 
          FontFamily -> "Helvetica", FontSize -> 18, FontWeight -> "Bold"], 
         Cell[
          StyleData["NonSlideShowSection", "Presentation"], 
          CellFrameMargins -> {{0, 0}, {12, 12}}, FontSize -> 28], 
         Cell[
          StyleData["NonSlideShowSection", "SlideShow"], ShowCellBracket -> 
          False, CellMargins -> {{Inherited, Inherited}, {0, 0}}, 
          CellElementSpacings -> {
           "CellMinHeight" -> 1, "ClosedCellHeight" -> 0}, CellOpen -> False], 
         Cell[
          StyleData["NonSlideShowSection", "Printout"], 
          CellMargins -> {{54, 24}, {3, 15}}, 
          CellFrameMargins -> {{0, 0}, {0, 5}}, CellFrameColor -> 
          GrayLevel[0], FontSize -> 14]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Solution"], ShowCellBracket -> True, 
          CellMargins -> {{40, 10}, {12, 12}}, TextAlignment -> Right, 
          LineSpacing -> {1, 2}, StyleMenuListing -> None, 
          ButtonBoxOptions -> {
           Active -> True, Appearance -> {Automatic, "DialogBox"}, 
            ButtonFunction :> (NotebookPut[
              
              Notebook[#2, WindowSize -> {640, 400}, StyleDefinitions -> 
               "Default.nb", Saveable -> False, WindowTitle -> StringJoin[
                 Cases[{#}, 
                  Blank[String], Infinity]]]]& ), ButtonSource -> 
            ButtonContents, Evaluator -> Automatic}], 
         Cell[
          StyleData["Solution", "Presentation"], ShowCellBracket -> False, 
          FontSize -> 16], 
         Cell[
          StyleData["Solution", "SlideShow"], ShowCellBracket -> False, 
          FontSize -> 16], 
         Cell[
          StyleData["Solution", "Printout"], 
          CellMargins -> {{Inherited, Inherited}, {0, 0}}, 
          CellElementSpacings -> {
           "CellMinHeight" -> 1, "ClosedCellHeight" -> 0}, CellOpen -> 
          False]}, Closed]], 
      Cell[
       StyleData["ExerciseButton"], StyleMenuListing -> None, 
       ButtonStyleMenuListing -> None, FontFamily -> "Helvetica", FontSize -> 
       12, ButtonBoxOptions -> {
        Background -> RGBColor[0.59765, 0.59765, 0.796872], ButtonMargins -> 
         4}], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Picture"], CellMargins -> {{72, 24}, {0, 0}}, 
          CellGroupingRules -> "GraphicsGrouping", CellHorizontalScrolling -> 
          True, ShowCellLabel -> False], 
         Cell[
          StyleData["Picture", "SlideShow"], CellMargins -> {{54, 0}, {0, 0}},
           Magnification -> 1], 
         Cell[
          StyleData["Picture", "Printout"], 
          CellMargins -> {{108, 48}, {-1, -2}}, Magnification -> 0.5]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["PictureCaption"], CellDingbat -> "\[FilledUpTriangle]", 
          CellMargins -> {{54, 24}, {5, 10}}, CellLabelPositioning -> Left, 
          CellFrameLabels -> {{None, None}, {None, None}}, TextAlignment -> 
          Left, CounterIncrements -> "NumberedFigure", FormatTypeAutoConvert -> 
          False, FontFamily -> "Helvetica"], 
         Cell[
          StyleData["PictureCaption", "Presentation"], 
          CellMargins -> {{54, 24}, {24, 10}}, FontSize -> 18], 
         Cell[
          StyleData["PictureCaption", "SlideShow"], 
          CellMargins -> {{54, 24}, {24, 10}}, FontSize -> 18], 
         Cell[
          StyleData["PictureCaption", "Printout"], 
          CellFrameLabels -> {{None, None}, {None, None}}, FontSize -> 8]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Spacer"], 
          CellMargins -> {{Inherited, Inherited}, {0, 0}}, 
          CellElementSpacings -> {
           "CellMinHeight" -> 10, "ClosedCellHeight" -> 10}, CellOpen -> True,
           CellEditable -> False], 
         Cell[
          StyleData["Spacer", "SlideShow"], 
          CellMargins -> {{Inherited, Inherited}, {0, 0}}, 
          CellElementSpacings -> {
           "CellMinHeight" -> 20, "ClosedCellHeight" -> 30}, CellOpen -> 
          False, CellEditable -> False, ShowCellBrackets -> False], 
         Cell[
          StyleData["Spacer", "Printout"], 
          CellMargins -> {{Inherited, Inherited}, {0, 0}}, 
          CellElementSpacings -> {
           "CellMinHeight" -> 1, "ClosedCellHeight" -> 0}, CellOpen -> 
          False]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Display Formulas and Programs", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["DisplayFormula"], CellMargins -> {{54, 25}, {2, 24}}, 
          CellHorizontalScrolling -> True, DefaultFormatType -> 
          TraditionalForm, TextAlignment -> Center, ScriptLevel -> 0, 
          SingleLetterItalics -> True, SpanMaxSize -> Infinity, FontFamily -> 
          "Times", FontSize -> 14, 
          UnderoverscriptBoxOptions -> {LimitsPositioning -> True}], 
         Cell[
          StyleData["DisplayFormula", "Presentation"], FontSize -> 25], 
         Cell[
          StyleData["DisplayFormula", "SlideShow"], FontSize -> 21], 
         Cell[
          StyleData["DisplayFormula", "Printout"], 
          CellMargins -> {{54, Inherited}, {Inherited, Inherited}}, FontSize -> 
          10]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Inline Formatting", "Section"], 
      Cell[
       StyleData["MSG"], StyleMenuListing -> None, FontSize -> 15], 
      Cell[
       StyleData["Color1"], StyleMenuListing -> None, FontSlant -> "Italic", 
       FontColor -> RGBColor[1, 0.352941, 0]], 
      Cell[
       StyleData["Color2"], StyleMenuListing -> None, FontSlant -> "Italic", 
       FontColor -> RGBColor[0.937255, 0.588235, 0.137255]], 
      Cell[
       StyleData["Color3"], StyleMenuListing -> None, FontColor -> 
       RGBColor[0.498039, 0.505882, 0.517647]], 
      Cell[
       StyleData["Color4"], StyleMenuListing -> None, FontColor -> 
       RGBColor[0.529412, 0.568627, 0.780392]], 
      Cell[
       StyleData["Color5"], StyleMenuListing -> None, FontColor -> 
       RGBColor[0.937255, 0.666667, 0.137255]], 
      Cell[
       StyleData["Color6"], StyleMenuListing -> None, FontColor -> 
       RGBColor[0.576471, 0.584314, 0.596078]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["NonPrint Styles", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["NonPrintSection"], CellFrame -> {{0, 0}, {0, 0.5}}, 
          CellMargins -> {{54, 25}, {10, 30}}, 
          CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
          False, CellFrameMargins -> 1, CellFrameColor -> GrayLevel[0.500008],
           CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}}, 
          FontFamily -> "Helvetica", FontSize -> 18, FontWeight -> "Bold"], 
         Cell[
          StyleData["NonPrintSection", "Presentation"], 
          CellFrameMargins -> {{0, 0}, {12, 12}}, FontSize -> 28], 
         Cell[
          StyleData["NonPrintSection", "SlideShow"], 
          CellMargins -> {{52, 25}, {30, 30}}, FontSize -> 21], 
         Cell[
          StyleData["NonPrintSection", "Printout"], 
          CellMargins -> {{Inherited, Inherited}, {0, 0}}, 
          CellElementSpacings -> {
           "CellMinHeight" -> 1, "ClosedCellHeight" -> 0}, CellOpen -> 
          False]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["NonPrintSubsection"], 
          CellMargins -> {{54, 25}, {10, 26}}, 
          CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> 
          False, CounterIncrements -> "Subsection", 
          CounterAssignments -> {{"Subsubsection", 0}}, FontFamily -> 
          "Helvetica", FontSize -> 14, FontWeight -> "Bold", FontSlant -> 
          "Italic"], 
         Cell[
          StyleData["NonPrintSubsection", "Presentation"], CellDingbat -> 
          "\[GraySquare]", CellMargins -> {{74, 25}, {10, 26}}, FontSize -> 
          18], 
         Cell[
          StyleData["NonPrintSubsection", "SlideShow"], 
          CellFrame -> {{0, 0}, {0, 0.5}}, 
          CellMargins -> {{52, 25}, {16, 26}}, CellFrameColor -> 
          RGBColor[0.668009, 0.669383, 0.345068], FontSize -> 25], 
         Cell[
          StyleData["NonPrintSubsection", "Printout"], 
          CellMargins -> {{Inherited, Inherited}, {0, 0}}, 
          CellElementSpacings -> {
           "CellMinHeight" -> 1, "ClosedCellHeight" -> 0}, CellOpen -> False], 
         Cell[
          StyleData["SlideShowNavigationBar", "SlideShow"], Deletable -> 
          False, CellFrame -> False, ShowCellBracket -> False, 
          CellMargins -> {{0, 0}, {0, 0}}, PageBreakAbove -> True, 
          CellFrameMargins -> {{34, 0}, {0, 0}}, Background -> 
          RGBColor[0.529412, 0.568627, 0.780392]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Link"], ContextMenu -> 
          FEPrivate`FrontEndResource["ContextMenus", "PacletLink"], 
          StyleMenuListing -> None, ButtonStyleMenuListing -> Automatic, 
          FontColor -> RGBColor[0.1, 0.1, 0.5], 
          ButtonBoxOptions -> {
           Active -> True, Appearance -> {Automatic, None}, ButtonExpandable -> 
            False, ButtonFunction :> (FEPrivate`FrontEndExecute[
              FrontEndToken["OpenHelpLink", {#, 
                FEPrivate`If[
                 CurrentValue["ShiftKey"], Null, 
                 FEPrivate`ButtonNotebook[]]}]]& ), ButtonNote -> ButtonData, 
            Evaluator -> None, ImageSize -> Full, Method -> "Preemptive"}], 
         Cell[
          StyleData["Link", "SlideShow"], FontSize -> 19], 
         Cell[
          StyleData["Link", "Printout"], FontColor -> GrayLevel[0]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Hyperlink", StyleDefinitions -> StyleData["Link"]], 
          ContextMenu -> 
          FEPrivate`FrontEndResource["ContextMenus", "Hyperlink"], FontColor -> 
          RGBColor[0.269993, 0.308507, 0.6], 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               NotebookLocate[#2]}]& ), Evaluator -> None, Method -> 
            "Queued"}], 
         Cell[
          StyleData["Hyperlink", "Condensed"], FontSize -> 11]}, Closed]]}, 
     Closed]]}, Visible -> False, FrontEndVersion -> 
  "7.0 for Mac OS X x86 (32-bit) (February 1, 2009)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[567, 22, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[117578, 1991, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[118850, 2042, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[122012, 2173, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[123609, 2238, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[126105, 2318, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[128223, 2386, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[131359, 2491, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[133466, 2562, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[135458, 2641, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[139403, 2761, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[141066, 2829, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[144403, 2951, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[148604, 3094, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[150625, 3168, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[154079, 3282, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[158055, 3417, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[159625, 3472, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[161720, 3542, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[163439, 3605, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[166037, 3695, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[168982, 3801, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[174948, 4001, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[175681, 4029, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[178411, 4123, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[182034, 4235, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[184155, 4312, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[186728, 4394, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[192551, 4606, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[196069, 4712, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[198191, 4781, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[200066, 4849, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[207610, 5067, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[211584, 5173, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[216599, 5318, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[219342, 5400, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[223022, 5516, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[225867, 5602, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[229927, 5744, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[233661, 5875, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[237814, 6019, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[241111, 6131, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[244061, 6240, 64, 1, 4, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"]},
 "M215B.3.4"->{
  Cell[235350, 5933, 391, 11, 53, "Input",
   CellTags->"M215B.3.4"],
  Cell[235947, 5952, 309, 9, 53, "Input",
   CellTags->"M215B.3.4"],
  Cell[236259, 5963, 487, 15, 53, "Input",
   CellTags->"M215B.3.4"],
  Cell[236901, 5985, 325, 9, 53, "Input",
   CellTags->"M215B.3.4"],
  Cell[237396, 6001, 348, 10, 53, "Input",
   CellTags->"M215B.3.4"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 291004, 7295},
 {"M215B.3.4", 294886, 7382}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[634, 25, 102655, 1689, 70, "Title"],
Cell[CellGroupData[{
Cell[103314, 1718, 29, 0, 74, "Subtitle"],
Cell[103346, 1720, 228, 7, 55, "Subsubtitle"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103611, 1732, 84, 1, 74, "Subtitle"],
Cell[103698, 1735, 143, 12, 31, "Subsubtitle"],
Cell[CellGroupData[{
Cell[103866, 1751, 178, 5, 131, "Input"],
Cell[104047, 1758, 13449, 224, 37, "Picture"]
}, Open  ]],
Cell[117511, 1985, 18, 0, 30, "Spacer"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[117578, 1991, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[117667, 1996, 228, 9, 55, "Section"],
Cell[117898, 2007, 54, 0, 63, "Text"],
Cell[CellGroupData[{
Cell[117977, 2011, 188, 5, 42, "Item"],
Cell[118168, 2018, 160, 4, 42, "Item"],
Cell[118331, 2024, 229, 5, 67, "Item"]
}, Open  ]],
Cell[118575, 2032, 226, 4, 63, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[118850, 2042, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[118939, 2047, 321, 12, 41, "Subsection"],
Cell[119263, 2061, 107, 3, 63, "Text"],
Cell[CellGroupData[{
Cell[119395, 2068, 49, 0, 49, "MoreExamplesSection"],
Cell[119447, 2070, 432, 13, 94, "Text"],
Cell[119882, 2085, 819, 28, 68, "Text"],
Cell[120704, 2115, 365, 12, 65, "MathCaption"],
Cell[121072, 2129, 276, 6, 53, "Input"],
Cell[121351, 2137, 18, 0, 30, "Spacer"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121406, 2142, 49, 3, 73, "MoreExamplesSection"],
Cell[121458, 2147, 474, 17, 89, "Text"],
Cell[121935, 2166, 16, 0, 63, "Text"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[122012, 2173, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[122101, 2178, 236, 8, 55, "Section"],
Cell[122340, 2188, 200, 6, 63, "Text"],
Cell[122543, 2196, 97, 2, 60, "MathCaption"],
Cell[122643, 2200, 115, 3, 53, "Input"],
Cell[122761, 2205, 100, 2, 60, "MathCaption"],
Cell[122864, 2209, 244, 6, 53, "Input"],
Cell[123111, 2217, 240, 7, 65, "MathCaption"],
Cell[123354, 2226, 185, 4, 53, "Input"],
Cell[123542, 2232, 18, 0, 30, "Spacer"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[123609, 2238, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[123698, 2243, 335, 12, 41, "Subsection"],
Cell[124036, 2257, 266, 7, 89, "Text"],
Cell[124305, 2266, 161, 3, 60, "MathCaption"],
Cell[124469, 2271, 607, 16, 53, "Input"],
Cell[125079, 2289, 264, 5, 60, "MathCaption"],
Cell[125346, 2296, 689, 14, 78, "Input"],
Cell[126038, 2312, 18, 0, 30, "Spacer"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[126105, 2318, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[126194, 2323, 335, 12, 41, "Subsection"],
Cell[126532, 2337, 340, 6, 63, "Text"],
Cell[126875, 2345, 179, 2, 60, "MathCaption"],
Cell[127057, 2349, 255, 5, 53, "Input"],
Cell[127315, 2356, 413, 14, 65, "MathCaption"],
Cell[127731, 2372, 150, 2, 53, "Input"],
Cell[127884, 2376, 290, 4, 53, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[128223, 2386, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[128312, 2391, 336, 12, 41, "Subsection"],
Cell[128651, 2405, 321, 8, 68, "Text"],
Cell[128975, 2415, 694, 21, 53, "Input"],
Cell[129672, 2438, 503, 13, 53, "Input"],
Cell[130178, 2453, 220, 5, 53, "Input"],
Cell[130401, 2460, 88, 2, 53, "Input"],
Cell[130492, 2464, 74, 1, 53, "Input"],
Cell[130569, 2467, 283, 6, 61, "MathCaption"],
Cell[130855, 2475, 149, 2, 53, "Input"],
Cell[131007, 2479, 282, 4, 53, "Input"],
Cell[131292, 2485, 18, 0, 30, "Spacer"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[131359, 2491, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[131448, 2496, 351, 12, 41, "Subsection"],
Cell[131802, 2510, 187, 4, 63, "Text"],
Cell[131992, 2516, 337, 9, 53, "Input"],
Cell[132332, 2527, 889, 20, 102, "Input"],
Cell[133224, 2549, 76, 1, 53, "Input"],
Cell[133303, 2552, 93, 2, 53, "Input"],
Cell[133399, 2556, 18, 0, 30, "Spacer"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[133466, 2562, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[133555, 2567, 393, 14, 41, "Subsection"],
Cell[133951, 2583, 100, 2, 63, "Text"],
Cell[134054, 2587, 116, 3, 53, "Input"],
Cell[134173, 2592, 93, 2, 53, "Input"],
Cell[134269, 2596, 94, 2, 53, "Input"],
Cell[134366, 2600, 282, 5, 61, "MathCaption"],
Cell[134651, 2607, 159, 3, 53, "Input"],
Cell[134813, 2612, 101, 2, 60, "MathCaption"],
Cell[134917, 2616, 107, 3, 53, "Input"],
Cell[135027, 2621, 108, 3, 53, "Input"],
Cell[135138, 2626, 250, 7, 63, "Text"],
Cell[135391, 2635, 18, 0, 30, "Spacer"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[135458, 2641, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[135547, 2646, 466, 17, 41, "Subsection"],
Cell[136016, 2665, 367, 6, 63, "Text"],
Cell[136386, 2673, 223, 6, 60, "MathCaption"],
Cell[136612, 2681, 916, 22, 78, "Input"],
Cell[137531, 2705, 195, 6, 60, "MathCaption"],
Cell[137729, 2713, 933, 20, 78, "Input"],
Cell[138665, 2735, 193, 4, 60, "MathCaption"],
Cell[138861, 2741, 472, 12, 53, "Input"],
Cell[139336, 2755, 18, 0, 30, "Spacer"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[139403, 2761, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[139492, 2766, 431, 16, 41, "Subsection"],
Cell[139926, 2784, 108, 3, 63, "Text"],
Cell[140037, 2789, 85, 1, 60, "MathCaption"],
Cell[140125, 2792, 148, 4, 53, "Input"],
Cell[140276, 2798, 120, 1, 60, "MathCaption"],
Cell[140399, 2801, 197, 6, 53, "Input"],
Cell[140599, 2809, 101, 2, 60, "MathCaption"],
Cell[140703, 2813, 293, 8, 53, "Input"],
Cell[140999, 2823, 18, 0, 30, "Spacer"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[141066, 2829, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[141155, 2834, 458, 17, 41, "Subsection"],
Cell[141616, 2853, 117, 3, 63, "Text"],
Cell[141736, 2858, 195, 6, 65, "MathCaption"],
Cell[141934, 2866, 323, 9, 53, "Input"],
Cell[142260, 2877, 792, 20, 53, "Input"],
Cell[143055, 2899, 215, 6, 65, "MathCaption"],
Cell[143273, 2907, 188, 5, 53, "Input"],
Cell[143464, 2914, 224, 7, 68, "Text"],
Cell[143691, 2923, 176, 3, 60, "MathCaption"],
Cell[143870, 2928, 211, 6, 53, "Input"],
Cell[144084, 2936, 249, 7, 53, "Input"],
Cell[144336, 2945, 18, 0, 30, "Spacer"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[144403, 2951, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[144492, 2956, 336, 12, 41, "Subsection"],
Cell[144831, 2970, 811, 26, 95, "Text"],
Cell[145645, 2998, 141, 3, 61, "MathCaption"],
Cell[145789, 3003, 231, 4, 53, "Input"],
Cell[146023, 3009, 485, 14, 53, "Input"],
Cell[146511, 3025, 100, 2, 60, "MathCaption"],
Cell[146614, 3029, 335, 9, 53, "Input"],
Cell[146952, 3040, 180, 4, 60, "MathCaption"],
Cell[147135, 3046, 137, 2, 53, "Input"],
Cell[147275, 3050, 286, 6, 60, "MathCaption"],
Cell[147564, 3058, 419, 11, 53, "Input"],
Cell[147986, 3071, 548, 15, 94, "Text"],
Cell[148537, 3088, 18, 0, 30, "Spacer"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[148604, 3094, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[148693, 3099, 432, 15, 41, "Subsection"],
Cell[149128, 3116, 338, 6, 89, "Text"],
Cell[149469, 3124, 133, 3, 60, "MathCaption"],
Cell[149605, 3129, 182, 4, 53, "Input"],
Cell[149790, 3135, 410, 11, 53, "Input"],
Cell[150203, 3148, 168, 4, 60, "MathCaption"],
Cell[150374, 3154, 68, 1, 53, "Input"],
Cell[150445, 3157, 110, 3, 53, "Input"],
Cell[150558, 3162, 18, 0, 30, "Spacer"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[150625, 3168, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[150714, 3173, 455, 17, 41, "Subsection"],
Cell[151172, 3192, 139, 3, 63, "Text"],
Cell[151314, 3197, 572, 14, 94, "Text"],
Cell[151889, 3213, 230, 5, 60, "MathCaption"],
Cell[152122, 3220, 656, 16, 78, "Input"],
Cell[152781, 3238, 191, 4, 60, "MathCaption"],
Cell[152975, 3244, 399, 10, 53, "Input"],
Cell[153377, 3256, 191, 2, 60, "MathCaption"],
Cell[153571, 3260, 218, 5, 53, "Input"],
Cell[153792, 3267, 217, 7, 68, "Text"],
Cell[154012, 3276, 18, 0, 30, "Spacer"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[154079, 3282, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[154168, 3287, 343, 12, 41, "Subsection"],
Cell[154514, 3301, 125, 3, 63, "Text"],
Cell[154642, 3306, 156, 2, 53, "Input"],
Cell[154801, 3310, 1951, 55, 174, "Input"],
Cell[156755, 3367, 83, 1, 60, "MathCaption"],
Cell[156841, 3370, 72, 1, 53, "Input"],
Cell[156916, 3373, 305, 8, 65, "MathCaption"],
Cell[157224, 3383, 303, 9, 53, "Input"],
Cell[157530, 3394, 124, 3, 53, "Input"],
Cell[157657, 3399, 259, 7, 65, "MathCaption"],
Cell[157919, 3408, 66, 1, 53, "Input"],
Cell[157988, 3411, 18, 0, 30, "Spacer"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[158055, 3417, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[158144, 3422, 342, 12, 41, "Subsection"],
Cell[158489, 3436, 135, 3, 63, "Text"],
Cell[158627, 3441, 593, 12, 53, "Input"],
Cell[159223, 3455, 103, 2, 60, "MathCaption"],
Cell[159329, 3459, 226, 5, 53, "Input"],
Cell[159558, 3466, 18, 0, 30, "Spacer"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[159625, 3472, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[159714, 3477, 336, 12, 41, "Subsection"],
Cell[160053, 3491, 304, 7, 63, "Text"],
Cell[160360, 3500, 154, 2, 53, "Input"],
Cell[160517, 3504, 77, 0, 60, "MathCaption"],
Cell[160597, 3506, 413, 9, 150, "Input"],
Cell[161013, 3517, 172, 4, 60, "MathCaption"],
Cell[161188, 3523, 462, 11, 53, "Input"],
Cell[161653, 3536, 18, 0, 30, "Spacer"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[161720, 3542, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[161809, 3547, 192, 7, 55, "Section"],
Cell[162004, 3556, 377, 9, 89, "Text"],
Cell[162384, 3567, 1006, 32, 99, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[163439, 3605, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[163528, 3610, 340, 12, 41, "Subsection"],
Cell[163871, 3624, 198, 4, 63, "Text"],
Cell[164072, 3630, 249, 9, 62, "MathCaption"],
Cell[164324, 3641, 666, 15, 78, "Input"],
Cell[164993, 3658, 311, 8, 63, "MathCaption"],
Cell[165307, 3668, 269, 7, 53, "Input"],
Cell[165579, 3677, 161, 3, 60, "MathCaption"],
Cell[165743, 3682, 224, 5, 53, "Input"],
Cell[165970, 3689, 18, 0, 30, "Spacer"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[166037, 3695, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[166126, 3700, 380, 14, 41, "Subsection"],
Cell[166509, 3716, 247, 5, 63, "Text"],
Cell[166759, 3723, 198, 4, 60, "MathCaption"],
Cell[166960, 3729, 338, 9, 53, "Input"],
Cell[167301, 3740, 196, 4, 60, "MathCaption"],
Cell[167500, 3746, 372, 10, 53, "Input"],
Cell[167875, 3758, 179, 6, 60, "MathCaption"],
Cell[168057, 3766, 158, 2, 53, "Input"],
Cell[168218, 3770, 694, 23, 53, "Input"],
Cell[168915, 3795, 18, 0, 30, "Spacer"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[168982, 3801, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[169071, 3806, 341, 12, 41, "Subsection"],
Cell[169415, 3820, 453, 13, 99, "Text"],
Cell[169871, 3835, 126, 3, 60, "MathCaption"],
Cell[170000, 3840, 138, 3, 53, "Input"],
Cell[170141, 3845, 1102, 28, 78, "Input"],
Cell[171246, 3875, 222, 6, 53, "Input"],
Cell[171471, 3883, 117, 3, 60, "MathCaption"],
Cell[171591, 3888, 226, 6, 79, "Input"],
Cell[171820, 3896, 69, 0, 60, "MathCaption"],
Cell[171892, 3898, 1155, 35, 156, "Input"],
Cell[173050, 3935, 116, 3, 61, "MathCaption"],
Cell[173169, 3940, 88, 1, 53, "Input"],
Cell[173260, 3943, 142, 3, 53, "Input"],
Cell[173405, 3948, 117, 3, 60, "MathCaption"],
Cell[173525, 3953, 201, 3, 53, "Input"],
Cell[173729, 3958, 316, 8, 53, "Input"],
Cell[174048, 3968, 830, 25, 94, "Text"],
Cell[174881, 3995, 18, 0, 30, "Spacer"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[174948, 4001, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[175037, 4006, 196, 7, 55, "Section"],
Cell[175236, 4015, 396, 8, 89, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[175681, 4029, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[175770, 4034, 338, 12, 41, "Subsection"],
Cell[176111, 4048, 67, 0, 63, "Text"],
Cell[176181, 4050, 587, 14, 53, "Input"],
Cell[176771, 4066, 288, 8, 65, "MathCaption"],
Cell[177062, 4076, 451, 11, 53, "Input"],
Cell[177516, 4089, 126, 2, 53, "Input"],
Cell[177645, 4093, 407, 12, 68, "Text"],
Cell[178055, 4107, 141, 4, 61, "MathCaption"],
Cell[178199, 4113, 142, 2, 53, "Input"],
Cell[178344, 4117, 18, 0, 30, "Spacer"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[178411, 4123, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[178500, 4128, 350, 12, 41, "Subsection"],
Cell[178853, 4142, 172, 4, 63, "Text"],
Cell[179028, 4148, 117, 3, 60, "MathCaption"],
Cell[179148, 4153, 306, 8, 53, "Input"],
Cell[179457, 4163, 354, 6, 86, "MathCaption"],
Cell[179814, 4171, 660, 14, 53, "Input"],
Cell[180477, 4187, 224, 4, 60, "MathCaption"],
Cell[180704, 4193, 1260, 34, 102, "Input"],
Cell[181967, 4229, 18, 0, 30, "Spacer"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[182034, 4235, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[182123, 4240, 358, 12, 41, "Subsection"],
Cell[182484, 4254, 264, 7, 68, "Text"],
Cell[182751, 4263, 417, 13, 63, "MathCaption"],
Cell[183171, 4278, 156, 3, 53, "Input"],
Cell[183330, 4283, 257, 8, 63, "MathCaption"],
Cell[183590, 4293, 495, 11, 53, "Input"],
Cell[184088, 4306, 18, 0, 30, "Spacer"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[184155, 4312, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[184244, 4317, 345, 12, 41, "Subsection"],
Cell[184592, 4331, 120, 1, 63, "Text"],
Cell[184715, 4334, 170, 3, 60, "MathCaption"],
Cell[184888, 4339, 646, 16, 53, "Input"],
Cell[185537, 4357, 128, 1, 63, "Text"],
Cell[185668, 4360, 217, 4, 60, "MathCaption"],
Cell[185888, 4366, 149, 2, 53, "Input"],
Cell[186040, 4370, 153, 2, 53, "Input"],
Cell[186196, 4374, 228, 4, 61, "MathCaption"],
Cell[186427, 4380, 231, 6, 53, "Input"],
Cell[186661, 4388, 18, 0, 30, "Spacer"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[186728, 4394, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[186817, 4399, 352, 12, 41, "Subsection"],
Cell[187172, 4413, 257, 3, 63, "Text"],
Cell[187432, 4418, 845, 30, 66, "Text"],
Cell[188280, 4450, 889, 31, 66, "Text"],
Cell[189172, 4483, 285, 3, 63, "Text"],
Cell[189460, 4488, 1043, 36, 70, "Text"],
Cell[190506, 4526, 792, 26, 120, "Text"],
Cell[191301, 4554, 154, 3, 64, "Text"],
Cell[CellGroupData[{
Cell[191480, 4561, 181, 6, 47, "Item"],
Cell[191664, 4569, 181, 6, 47, "Item"],
Cell[191848, 4577, 181, 6, 47, "Item"],
Cell[192032, 4585, 264, 7, 47, "Item"]
}, Open  ]],
Cell[192311, 4595, 170, 3, 63, "Text"],
Cell[192484, 4600, 18, 0, 30, "Spacer"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[192551, 4606, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[192640, 4611, 349, 12, 41, "Subsection"],
Cell[192992, 4625, 754, 17, 94, "Text"],
Cell[193749, 4644, 187, 4, 60, "MathCaption"],
Cell[193939, 4650, 870, 25, 53, "Input"],
Cell[194812, 4677, 286, 3, 60, "MathCaption"],
Cell[195101, 4682, 278, 5, 53, "Input"],
Cell[195382, 4689, 258, 5, 60, "MathCaption"],
Cell[195643, 4696, 356, 8, 53, "Input"],
Cell[196002, 4706, 18, 0, 30, "Spacer"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[196069, 4712, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[196158, 4717, 349, 12, 41, "Subsection"],
Cell[196510, 4731, 359, 9, 68, "Text"],
Cell[196872, 4742, 201, 3, 60, "MathCaption"],
Cell[197076, 4747, 271, 6, 53, "Input"],
Cell[197350, 4755, 171, 3, 60, "MathCaption"],
Cell[197524, 4760, 144, 2, 53, "Input"],
Cell[197671, 4764, 195, 2, 60, "MathCaption"],
Cell[197869, 4768, 252, 5, 53, "Input"],
Cell[198124, 4775, 18, 0, 30, "Spacer"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[198191, 4781, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[198280, 4786, 349, 12, 41, "Subsection"],
Cell[198632, 4800, 476, 13, 68, "Text"],
Cell[199111, 4815, 130, 1, 60, "MathCaption"],
Cell[199244, 4818, 205, 4, 53, "Input"],
Cell[199452, 4824, 240, 7, 61, "MathCaption"],
Cell[199695, 4833, 301, 8, 53, "Input"],
Cell[199999, 4843, 18, 0, 30, "Spacer"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[200066, 4849, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[200155, 4854, 346, 12, 41, "Subsection"],
Cell[200504, 4868, 673, 20, 99, "Text"],
Cell[201180, 4890, 302, 5, 90, "Text"],
Cell[201485, 4897, 245, 3, 60, "MathCaption"],
Cell[201733, 4902, 1317, 33, 102, "Input"],
Cell[203053, 4937, 369, 9, 68, "Text"],
Cell[203425, 4948, 269, 3, 60, "MathCaption"],
Cell[203697, 4953, 592, 12, 78, "Input"],
Cell[204292, 4967, 591, 15, 99, "Text"],
Cell[204886, 4984, 277, 7, 61, "MathCaption"],
Cell[205166, 4993, 276, 7, 53, "Input"],
Cell[205445, 5002, 186, 4, 63, "Text"],
Cell[205634, 5008, 133, 1, 60, "MathCaption"],
Cell[205770, 5011, 542, 12, 78, "Input"],
Cell[206315, 5025, 184, 4, 60, "MathCaption"],
Cell[206502, 5031, 1038, 28, 78, "Input"],
Cell[207543, 5061, 18, 0, 30, "Spacer"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[207610, 5067, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[207699, 5072, 356, 12, 41, "Subsection"],
Cell[208058, 5086, 524, 9, 116, "Text"],
Cell[208585, 5097, 318, 6, 60, "MathCaption"],
Cell[208906, 5105, 664, 14, 53, "Input"],
Cell[209573, 5121, 571, 12, 53, "Input"],
Cell[210147, 5135, 538, 9, 115, "Text"],
Cell[210688, 5146, 328, 5, 60, "MathCaption"],
Cell[211019, 5153, 495, 12, 53, "Input"],
Cell[211517, 5167, 18, 0, 30, "Spacer"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[211584, 5173, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[211673, 5178, 372, 12, 41, "Subsection"],
Cell[212048, 5192, 342, 6, 89, "Text"],
Cell[212393, 5200, 166, 3, 60, "MathCaption"],
Cell[212562, 5205, 719, 14, 78, "Input"],
Cell[213284, 5221, 575, 13, 78, "Input"],
Cell[213862, 5236, 211, 4, 60, "MathCaption"],
Cell[214076, 5242, 556, 12, 53, "Input"],
Cell[214635, 5256, 632, 19, 117, "Text"],
Cell[215270, 5277, 215, 4, 60, "MathCaption"],
Cell[215488, 5283, 1041, 27, 126, "Input"],
Cell[216532, 5312, 18, 0, 30, "Spacer"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[216599, 5318, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[216688, 5323, 341, 12, 41, "Subsection"],
Cell[217032, 5337, 465, 11, 94, "Text"],
Cell[217500, 5350, 166, 3, 60, "MathCaption"],
Cell[217669, 5355, 824, 17, 53, "Input"],
Cell[218496, 5374, 296, 6, 60, "MathCaption"],
Cell[218795, 5382, 141, 2, 53, "Input"],
Cell[218939, 5386, 78, 0, 60, "MathCaption"],
Cell[219020, 5388, 252, 4, 53, "Input"],
Cell[219275, 5394, 18, 0, 30, "Spacer"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[219342, 5400, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[219431, 5405, 358, 12, 41, "Subsection"],
Cell[219792, 5419, 383, 7, 89, "Text"],
Cell[220178, 5428, 249, 7, 63, "MathCaption"],
Cell[220430, 5437, 439, 12, 53, "Input"],
Cell[220872, 5451, 571, 12, 95, "Text"],
Cell[221446, 5465, 225, 4, 60, "MathCaption"],
Cell[221674, 5471, 658, 19, 53, "Input"],
Cell[222335, 5492, 137, 1, 60, "MathCaption"],
Cell[222475, 5495, 477, 13, 53, "Input"],
Cell[222955, 5510, 18, 0, 30, "Spacer"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[223022, 5516, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[223111, 5521, 364, 12, 41, "Subsection"],
Cell[223478, 5535, 480, 8, 63, "Text"],
Cell[223961, 5545, 211, 6, 63, "MathCaption"],
Cell[224175, 5553, 783, 20, 78, "Input"],
Cell[224961, 5575, 482, 8, 89, "Text"],
Cell[225446, 5585, 184, 4, 60, "MathCaption"],
Cell[225633, 5591, 164, 3, 53, "Input"],
Cell[225800, 5596, 18, 0, 30, "Spacer"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[225867, 5602, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[225956, 5607, 326, 12, 41, "Subsection"],
Cell[226285, 5621, 824, 22, 99, "Text"],
Cell[227112, 5645, 65, 0, 60, "MathCaption"],
Cell[227180, 5647, 260, 7, 53, "Input"],
Cell[227443, 5656, 353, 13, 65, "MathCaption"],
Cell[227799, 5671, 139, 2, 53, "Input"],
Cell[227941, 5675, 94, 2, 60, "MathCaption"],
Cell[228038, 5679, 197, 6, 53, "Input"],
Cell[228238, 5687, 98, 2, 63, "Text"],
Cell[228339, 5691, 174, 3, 60, "MathCaption"],
Cell[228516, 5696, 351, 10, 53, "Input"],
Cell[228870, 5708, 290, 8, 65, "MathCaption"],
Cell[229163, 5718, 368, 9, 53, "Input"],
Cell[229534, 5729, 323, 7, 53, "Input"],
Cell[229860, 5738, 18, 0, 30, "Spacer"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[229927, 5744, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[230016, 5749, 343, 12, 41, "Subsection"],
Cell[230362, 5763, 284, 5, 90, "Text"],
Cell[230649, 5770, 249, 7, 68, "Text"],
Cell[230901, 5779, 386, 11, 74, "Input"],
Cell[231290, 5792, 470, 14, 74, "Input"],
Cell[231763, 5808, 425, 12, 65, "MathCaption"],
Cell[232191, 5822, 577, 17, 74, "Input"],
Cell[232771, 5841, 263, 7, 65, "MathCaption"],
Cell[233037, 5850, 554, 17, 74, "Input"],
Cell[233594, 5869, 18, 0, 30, "Spacer"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[233661, 5875, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[233750, 5880, 343, 12, 41, "Subsection"],
Cell[234096, 5894, 831, 23, 120, "Text"],
Cell[234930, 5919, 329, 9, 68, "Text"],
Cell[235262, 5930, 85, 1, 60, "MathCaption"],
Cell[235350, 5933, 391, 11, 53, "Input",
 CellTags->"M215B.3.4"],
Cell[235744, 5946, 200, 4, 60, "MathCaption"],
Cell[235947, 5952, 309, 9, 53, "Input",
 CellTags->"M215B.3.4"],
Cell[236259, 5963, 487, 15, 53, "Input",
 CellTags->"M215B.3.4"],
Cell[236749, 5980, 149, 3, 60, "MathCaption"],
Cell[236901, 5985, 325, 9, 53, "Input",
 CellTags->"M215B.3.4"],
Cell[237229, 5996, 164, 3, 60, "MathCaption"],
Cell[237396, 6001, 348, 10, 53, "Input",
 CellTags->"M215B.3.4"],
Cell[237747, 6013, 18, 0, 30, "Spacer"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[237814, 6019, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[237903, 6024, 345, 12, 41, "Subsection"],
Cell[238251, 6038, 666, 16, 94, "Text"],
Cell[238920, 6056, 325, 8, 90, "MathCaption"],
Cell[239248, 6066, 616, 18, 53, "Input"],
Cell[239867, 6086, 272, 7, 53, "Input"],
Cell[240142, 6095, 325, 9, 65, "MathCaption"],
Cell[240470, 6106, 393, 11, 53, "Input"],
Cell[240866, 6119, 175, 4, 63, "Text"],
Cell[241044, 6125, 18, 0, 30, "Spacer"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[241111, 6131, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[241200, 6136, 231, 8, 55, "Section"],
Cell[CellGroupData[{
Cell[241456, 6148, 40, 0, 49, "MoreExamplesSection"],
Cell[CellGroupData[{
Cell[241521, 6152, 141, 3, 42, "Item",
 CellID->138871290],
Cell[241665, 6157, 153, 3, 42, "Item",
 CellID->15579],
Cell[241821, 6162, 152, 3, 42, "Item",
 CellID->73377947],
Cell[241976, 6167, 152, 3, 42, "Item",
 CellID->58175659],
Cell[242131, 6172, 166, 3, 42, "Item",
 CellID->140382176],
Cell[242300, 6177, 135, 3, 42, "Item",
 CellID->664059042],
Cell[242438, 6182, 163, 3, 42, "Item",
 CellID->177357799],
Cell[242604, 6187, 149, 3, 42, "Item",
 CellID->667388196],
Cell[242756, 6192, 156, 3, 42, "Item",
 CellID->226520497],
Cell[242915, 6197, 169, 3, 42, "Item",
 CellID->7278419]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[243133, 6206, 62, 0, 49, "MoreExamplesSection"],
Cell[CellGroupData[{
Cell[243220, 6210, 384, 10, 31, "Item"],
Cell[243607, 6222, 381, 10, 31, "Item"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[244061, 6240, 64, 1, 4, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[244150, 6245, 127, 2, 55, "Section",
 InitializationGroup->True],
Cell[244280, 6249, 773, 17, 78, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[245056, 6268, 480, 13, 53, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[245539, 6283, 432, 10, 53, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[245974, 6295, 325, 8, 53, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[246302, 6305, 110, 2, 53, "Input",
 InitializationGroup->True],
Cell[246415, 6309, 116, 2, 53, "Input",
 InitializationGroup->True],
Cell[246534, 6313, 116, 2, 53, "Input",
 InitializationGroup->True],
Cell[246653, 6317, 99, 2, 53, "Input",
 InitializationGroup->True]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
